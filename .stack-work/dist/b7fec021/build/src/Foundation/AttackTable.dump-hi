
==================== FINAL INTERFACE ====================
2016-12-17 14:57:11.2664301 UTC

interface Sophy-0.1.0.0-KzkJ0b2opaf7oLnrOdwoet:AttackTable 8001
  interface hash: c3271feee45ebdea9f66f5338898f6c8
  ABI hash: 9744fc5387b59a0a8607ff353b8c018d
  export-list hash: a05285a83ff207b32b71687481ff8ff3
  orphan hash: 9add6b4c7a55761e08eac8b539ecd489
  flag hash: 6861b54f22d643b04766ce28c16cccec
  sig of: Nothing
  used TH splices: False
  where
exports:
  AttackTable.bishopAttack
  AttackTable.bishopAttackTable
  AttackTable.bishopBetterMagics
  AttackTable.bishopMagicTable
  AttackTable.bishopMagics
  AttackTable.bishopRelevantOccupancyTable
  AttackTable.bishopShift
  AttackTable.bishopShiftTable
  AttackTable.blackPawnAttackTable
  AttackTable.kingAttack
  AttackTable.kingAttackTable
  AttackTable.knightAttack
  AttackTable.knightAttackTable
  AttackTable.pawnAttack
  AttackTable.pieceAttack
  AttackTable.queenAttack
  AttackTable.rookAttack
  AttackTable.rookAttackTable
  AttackTable.rookBetterMagics
  AttackTable.rookMagicTable
  AttackTable.rookMagics
  AttackTable.rookMask
  AttackTable.rookRelevantOccupancyTable
  AttackTable.rookShift
  AttackTable.rookShiftTable
  AttackTable.scanOccupancy
  AttackTable.whitePawnAttackTable
module dependencies: Alias BasicConstant BasicData BitBoard Bitwise
package dependencies: StateVar-1.1.0.4@StateVar-1.1.0.4-CJpWsiXJdd89SnV9dZtTwc
                      adjunctions-4.3@adjunctions-4.3-3ol9sWZt3In19pwXwPv3Xc
                      array-0.5.1.1@array-0.5.1.1 base-4.9.0.0
                      base-orphans-0.5.4@base-orphans-0.5.4-5IQvrjd7gNP548VkOOyIq6
                      bifunctors-5.4.1@bifunctors-5.4.1-8Xk5Wsnk1fr6rBLkW9MO8p
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      comonad-5@comonad-5-2RMxpSOQ5MCHLHIelJrHD4
                      containers-0.5.7.1@containers-0.5.7.1
                      contravariant-1.4@contravariant-1.4-KSQE31a7FruKHDlp90hIUT
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      distributive-0.5.0.2@distributive-0.5.0.2-Cdz2vLOk85j1doGXLcictT
                      exceptions-0.8.3@exceptions-0.8.3-7py7fmRxowDFpHmiHGKrTb
                      free-4.12.4@free-4.12.4-Etm59Dm8iExFxAy1L49Ovd
                      ghc-boot-th-8.0.1@ghc-boot-th-8.0.1 ghc-prim-0.5.0.0
                      hashable-1.2.4.0@hashable-1.2.4.0-EMu4H7FB10MAl6hwKw992G
                      integer-gmp-1.0.0.1
                      kan-extensions-5.0.1@kan-extensions-5.0.1-Asa0tkk9PuPLZ2eXuJ10Gr
                      lens-4.14@lens-4.14-LQbbTc84mRL8zB39b41ZKA
                      mtl-2.2.1@mtl-2.2.1-6qsR1PHUy5lL47Hpoa4jCM
                      prelude-extras-0.4.0.3@prelude-extras-0.4.0.3-FAyB4iuuM7cHXdrLMZtdXq
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa
                      profunctors-5.2@profunctors-5.2-2ZZOz6u59T2H8y7z3NgZkY
                      reflection-2.1.2@reflection-2.1.2-J1ZzlxijzaHGRixYxgxlf9
                      semigroupoids-5.1@semigroupoids-5.1-1Gay4xNO77GHd4DGCzVuax
                      split-0.2.3.1@split-0.2.3.1-IJKK4pOCYGKud0jZImZke
                      stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF
                      tagged-0.8.5@tagged-0.8.5-CtgV6EcN0do8F92i1S6iYx
                      template-haskell-2.11.0.0
                      text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s
                      transformers-0.5.2.0@transformers-0.5.2.0
                      transformers-compat-0.5.1.4@transformers-compat-0.5.1.4-81lZyuOJOvsD0zyCv2TKld
                      unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-Eo9jd5DMz45DhBLCG8skzW
                      vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6
orphans: base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         hashable-1.2.4.0@hashable-1.2.4.0-EMu4H7FB10MAl6hwKw992G:Data.Hashable.Generic
         reflection-2.1.2@reflection-2.1.2-J1ZzlxijzaHGRixYxgxlf9:Data.Reflection
         stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF:Control.Monad.STM
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Lazy
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Show
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Unboxed
family instance modules: adjunctions-4.3@adjunctions-4.3-3ol9sWZt3In19pwXwPv3Xc:Data.Functor.Rep
                         base-4.9.0.0:Control.Applicative base-4.9.0.0:Data.Complex
                         base-4.9.0.0:Data.Either base-4.9.0.0:Data.Functor.Compose
                         base-4.9.0.0:Data.Functor.Const base-4.9.0.0:Data.Functor.Identity
                         base-4.9.0.0:Data.Functor.Product base-4.9.0.0:Data.Functor.Sum
                         base-4.9.0.0:Data.List.NonEmpty base-4.9.0.0:Data.Monoid
                         base-4.9.0.0:Data.Semigroup base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:Data.Version base-4.9.0.0:Data.Void
                         base-4.9.0.0:GHC.Exts base-4.9.0.0:GHC.Generics
                         base-4.9.0.0:GHC.IO.Exception base-4.9.0.0:GHC.TypeLits
                         bifunctors-5.4.1@bifunctors-5.4.1-8Xk5Wsnk1fr6rBLkW9MO8p:Data.Bifunctor.Biff
                         bifunctors-5.4.1@bifunctors-5.4.1-8Xk5Wsnk1fr6rBLkW9MO8p:Data.Bifunctor.Clown
                         bifunctors-5.4.1@bifunctors-5.4.1-8Xk5Wsnk1fr6rBLkW9MO8p:Data.Bifunctor.Flip
                         bifunctors-5.4.1@bifunctors-5.4.1-8Xk5Wsnk1fr6rBLkW9MO8p:Data.Bifunctor.Join
                         bifunctors-5.4.1@bifunctors-5.4.1-8Xk5Wsnk1fr6rBLkW9MO8p:Data.Bifunctor.Joker
                         bifunctors-5.4.1@bifunctors-5.4.1-8Xk5Wsnk1fr6rBLkW9MO8p:Data.Bifunctor.Product
                         bifunctors-5.4.1@bifunctors-5.4.1-8Xk5Wsnk1fr6rBLkW9MO8p:Data.Bifunctor.Sum
                         bifunctors-5.4.1@bifunctors-5.4.1-8Xk5Wsnk1fr6rBLkW9MO8p:Data.Bifunctor.Tannen
                         bifunctors-5.4.1@bifunctors-5.4.1-8Xk5Wsnk1fr6rBLkW9MO8p:Data.Bifunctor.Wrapped
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         ghc-boot-th-8.0.1@ghc-boot-th-8.0.1:GHC.LanguageExtensions.Type
                         kan-extensions-5.0.1@kan-extensions-5.0.1-Asa0tkk9PuPLZ2eXuJ10Gr:Data.Functor.Day
                         kan-extensions-5.0.1@kan-extensions-5.0.1-Asa0tkk9PuPLZ2eXuJ10Gr:Data.Functor.Yoneda
                         lens-4.14@lens-4.14-LQbbTc84mRL8zB39b41ZKA:Control.Lens.At
                         lens-4.14@lens-4.14-LQbbTc84mRL8zB39b41ZKA:Control.Lens.Internal.Indexed
                         lens-4.14@lens-4.14-LQbbTc84mRL8zB39b41ZKA:Control.Lens.Reified
                         lens-4.14@lens-4.14-LQbbTc84mRL8zB39b41ZKA:Control.Lens.Tuple
                         lens-4.14@lens-4.14-LQbbTc84mRL8zB39b41ZKA:Control.Lens.Wrapped
                         lens-4.14@lens-4.14-LQbbTc84mRL8zB39b41ZKA:Control.Lens.Zoom
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa:Control.Monad.Primitive
                         profunctors-5.2@profunctors-5.2-2ZZOz6u59T2H8y7z3NgZkY:Data.Profunctor.Rep
                         tagged-0.8.5@tagged-0.8.5-CtgV6EcN0do8F92i1S6iYx:Data.Tagged
                         template-haskell-2.11.0.0:Language.Haskell.TH.Syntax
                         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text
                         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Lazy
                         unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-Eo9jd5DMz45DhBLCG8skzW:Data.HashMap.Base
                         unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-Eo9jd5DMz45DhBLCG8skzW:Data.HashSet
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Primitive
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Storable
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Unboxed
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Unboxed.Base
import  -/  Alias ba36719cc8f68ab87c0ee8446a683f1b
  exports: 03b73823d7379fa3fc65780b7c8ac5e2
  BitBoard 461830e1b89cbd9e95b01ba7aa2fcc74
  Magic 519f1d8f667990c1e307e901dcdfec88
  Occupancy 711259b048c194fd161c4ce6fcae46e2
  Square 47e0dc39b5f004e762e108114ef07a8d
import  -/  BasicConstant 75629955daea2dc6e28b1b47bb042933
  exports: 8cd31e6e16b93cd2dcc5693171330c73
  aFile 7a19749fe193316fd149614db6991cbd
  edge 437066ecd8cc779ee0ab80fc6df7a0ed
  eighthRank 390448975b4fabfb19da77ffea02f744
  firstRank 7a55db8df902e43ebafd7a2b533b3d84
  hFile 831719303e610728298753d0cb82c59c
import  -/  BasicData 2a7d7454833f4f04d9c30a40b6d5a151
  exports: 05582099e9a48170ebc021a187a7905d
  Bishop 42c313f81738f26581e31bd53cfbd397
  Black 522357099ddcd83c850e6a6c2fedd453
  Color 7aa905d66113e099b17b06056ad98d42
  King 2db3132eee6067b9d25bc0e1fc945cfa
  Knight 461e5adbab338f7e2a030d9d47abe91e
  PieceType d7f82d5957caceafc8b688a191800308
  Queen 9934c7b69e70a8646bf6b75fda804ef3
  Rook 86ec96c7cf9e9c94d4763e21a3c09b90
  White 1ed56db967e8b2482365f6c064064144
import  -/  BitBoard 546ecb469d7a09f0dc9092f9430e44fc
  exports: 581f8ad67b3ac061648269de5226c9ef
  bishopAttack 8bbbaf22e6242ed152b48ca7d2115c87
  kingAttack 64918d5f00be6283a13fa2055df2c12b
  knightAttack b2ddd31161b9bc6f3b547c65673f93d0
  pawnAttack 97ddddd307d3bcadba801332ddb7f944
  rookAttack 997cd4fcec55884115a1d642399a1f3a
import  -/  Bitwise dac3e64a54b8be9d7c8e1f130b8e73fa
  exports: 9b4cf91b2dee21d2fcd203a2334d40a1
  disjoint d4b6a06978fcf65d85a494a1597099df
  without 67ce45f5ed5d75206d3b7d6f09efeff7
import  -/  array-0.5.1.1@array-0.5.1.1:Data.Array.Base 4ef72729276b10ae08cf56ce3818cecd
import  -/  array-0.5.1.1@array-0.5.1.1:Data.Array.Unboxed 075e807bcd35683192a22e3e3cbc8bcc
import  -/  base-4.9.0.0:Control.Applicative fdcece230f8af145aec7b432bfe73083
import  -/  base-4.9.0.0:Data.Bits c954f6297e2203ba924b7d4bb91aa2cf
import  -/  base-4.9.0.0:Data.Foldable 3cbed01c922be29649c33015287c82ca
import  -/  base-4.9.0.0:Data.Maybe 086a84053ef7f7810663b5f03b7ec3f7
import  -/  base-4.9.0.0:GHC.Base dd8044a8d640eee51828c17c476a6ba7
import  -/  base-4.9.0.0:GHC.List 47d436dfb7454bb1883fb4d943e3f389
import  -/  base-4.9.0.0:GHC.Num f0aed3315b3ed1b330b71fc4148a5581
import  -/  base-4.9.0.0:GHC.Real 011de9ca3282ad24a84e4e15f974f98e
import  -/  base-4.9.0.0:Prelude 2d9cd8b0ec3d728f62b734df888d2e34
import  -/  vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector 6029dc705b85b20ddfdd0de7b2fd05c2
import  -/  vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Unboxed 816c8d8d1b2fd9811ceb784be4f89beb
import  -/  vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Unboxed.Base 1c4f5ac83bd405557436227d99327dc7
8cf6d4430023e67db061e9877882e8a6
  $s!_$slength ::
    Data.Vector.Unboxed.Base.Vector GHC.Types.Int -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSL),1*U(A,U,A)>m,
     Inline: [NEVER] -}
8bc292d63dc86509a3bb719224bc37aa
  $s!_$slength1 ::
    Data.Vector.Unboxed.Base.Vector Alias.Magic -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSL),1*U(A,U,A)>m,
     Inline: [NEVER] -}
3bcdda8bede9af9b4ac928da06479e72
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   AttackTable.$trModule2
                   AttackTable.$trModule1) -}
45ee2c7b116c063e593516debe1e80b0
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "AttackTable"#) -}
af36c7c72beb39173592f5bf1a8f1cfc
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "Sophy-0.1.0.0-KzkJ0b2opaf7oLnrOdwoet"#) -}
6cc0c695370a71f0a36ede1bc9dd26ef
  $wgo :: [Alias.BitBoard] -> GHC.Prim.Word# -> GHC.Prim.Word#
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,U>, Inline: [0] -}
4898a37fbd82557c7837e6539d6d93d4
  $wrookMask :: Alias.Square -> GHC.Prim.Word#
  {- Arity: 1, Strictness: <L,U(U)>, Inline: [0],
     Unfolding: (\ (w :: Alias.Square) ->
                 case GHC.List.filter
                        @ GHC.Word.Word64
                        (\ (eta :: Alias.BitBoard) ->
                         case w of wild1 { GHC.Types.I# i# ->
                         case GHC.Prim.tagToEnum#
                                @ GHC.Types.Bool
                                (GHC.Prim.>=# i# 64#) of wild2 {
                           GHC.Types.False
                           -> case eta of b { GHC.Word.W64# ipv ->
                              case GHC.Prim.and# (GHC.Prim.uncheckedShiftL# 1## i#) ipv of wild {
                                DEFAULT -> GHC.Types.False 0## -> GHC.Types.True } }
                           GHC.Types.True
                           -> case eta of b { GHC.Word.W64# ipv -> GHC.Types.True } } })
                        AttackTable.rookRelevantOccupancyTable2 of wild {
                   [] -> case GHC.List.foldl2 ret_ty GHC.Prim.Word# of {}
                   : x xs
                   -> case x of ww { GHC.Word.W64# ww1 ->
                      AttackTable.$wgo xs ww1 } }) -}
8d03899204f19542f665207ad9a60ce8
  $wscanOccupancy :: GHC.Prim.Word# -> [Alias.Occupancy]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Word#) ->
                 let {
                   i# :: GHC.Prim.Int# = GHC.Prim.word2Int# (GHC.Prim.popCnt64# ww)
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# i# 64#) of wild2 {
                   GHC.Types.False
                   -> let {
                        ipv :: GHC.Prim.Int# = GHC.Prim.uncheckedIShiftL# 1# i#
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<# 0# ipv) of wild {
                        GHC.Types.False -> GHC.Types.[] @ GHC.Word.Word64
                        GHC.Types.True
                        -> letrec {
                             $s$wgo :: GHC.Prim.Int# -> GHC.Prim.Word# -> [GHC.Word.Word64]
                               {- Arity: 2, Strictness: <S,1*U><L,U> -}
                             = \ (sc :: GHC.Prim.Int#) (sc1 :: GHC.Prim.Word#) ->
                               case sc of ds1 {
                                 DEFAULT
                                 -> GHC.Types.:
                                      @ GHC.Word.Word64
                                      (GHC.Word.W64# sc1)
                                      ($s$wgo
                                         (GHC.Prim.-# ds1 1#)
                                         (GHC.Prim.and# (GHC.Prim.minusWord# sc1 1##) ww))
                                 1#
                                 -> GHC.Types.:
                                      @ GHC.Word.Word64
                                      (GHC.Word.W64# sc1)
                                      (GHC.Types.[] @ GHC.Word.Word64) }
                           } in
                           $s$wgo ipv ww }
                   GHC.Types.True -> GHC.Types.[] @ GHC.Word.Word64 }) -}
531b74aa1e19d1691ccf0bf87f569030
  bishopAttack :: Alias.Occupancy -> Alias.Square -> Alias.BitBoard
  {- Arity: 2, Strictness: <S,1*U(U)><S(S),1*U(U)>m,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (occupancy :: Alias.Occupancy) (square :: Alias.Square) ->
                 case occupancy of occupancy1 { GHC.Word.W64# ipv ->
                 case square of square1 { GHC.Types.I# ipv1 ->
                 case Data.Vector.Generic.!
                        @ Data.Vector.Unboxed.Base.Vector
                        @ GHC.Types.Int
                        Data.Vector.Unboxed.Base.$fVectorVectorInt
                        AttackTable.bishopShiftTable
                        square1 of distance { GHC.Types.I# ipv2 ->
                 case Data.Vector.Generic.!
                        @ Data.Vector.Unboxed.Base.Vector
                        @ Alias.Magic
                        Data.Vector.Unboxed.Base.$fVectorVectorWord64
                        AttackTable.bishopMagicTable
                        square1 of magic { GHC.Word.W64# ipv3 ->
                 case Data.Vector.Generic.!
                        @ Data.Vector.Unboxed.Base.Vector
                        @ Alias.Occupancy
                        Data.Vector.Unboxed.Base.$fVectorVectorWord64
                        AttackTable.bishopRelevantOccupancyTable
                        square1 of relOcc { GHC.Word.W64# ipv4 ->
                 case GHC.Base.$
                        @ 'GHC.Types.PtrRepLifted
                        @ Alias.Occupancy
                        @ GHC.Types.Int
                        (\ (ds :: GHC.Word.Word64) ->
                         case ds of wild { GHC.Word.W64# x# ->
                         GHC.Types.I# (GHC.Prim.word2Int# x#) })
                        (GHC.Word.$fBitsWord64_$cshiftR
                           (GHC.Word.$fNumWord64_$c*
                              (GHC.Word.$fBitsWord64_$c.&. occupancy1 relOcc)
                              magic)
                           distance) of ix { GHC.Types.I# ipv5 ->
                 case Data.Vector.Generic.!
                        @ Data.Vector.Vector
                        @ (Data.Array.Base.UArray GHC.Types.Int Alias.BitBoard)
                        (Data.Vector.$fVectorVectora
                           @ (Data.Array.Base.UArray GHC.Types.Int Alias.BitBoard))
                        AttackTable.bishopAttackTable
                        square1 of wild { Data.Array.Base.UArray l u dt ds1 ->
                 GHC.Base.$
                   @ 'GHC.Types.PtrRepLifted
                   @ GHC.Types.Int
                   @ Alias.BitBoard
                   (\ (ds2 :: GHC.Types.Int) ->
                    case ds2 of wild1 { GHC.Types.I# i# ->
                    case GHC.Prim.indexWord64Array# ds1 i# of wild2 { DEFAULT ->
                    GHC.Word.W64# wild2 } })
                   (let {
                      n :: GHC.Types.Int = GHC.Types.I# dt
                    } in
                    let {
                      i' :: GHC.Types.Int
                      = case l of wild1 { GHC.Types.I# m ->
                        case u of wild2 { GHC.Types.I# n1 ->
                        case GHC.Classes.&&
                               (GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.<=# m ipv5))
                               (GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<=# ipv5 n1)) of wild4 {
                          GHC.Types.False
                          -> GHC.Arr.indexError
                               @ GHC.Types.Int
                               @ GHC.Types.Int
                               GHC.Show.$fShowInt
                               (wild1, wild2)
                               ix
                               (GHC.Base.build
                                  @ GHC.Types.Char
                                  (\ @ b1 -> GHC.CString.unpackFoldrCString# @ b1 "Int"#))
                          GHC.Types.True -> GHC.Num.$fNumInt_$c- ix wild1 } } }
                    } in
                    case GHC.Classes.&&
                           (GHC.Classes.leInt (GHC.Types.I# 0#) i')
                           (GHC.Classes.ltInt i' n) of wild1 {
                      GHC.Types.False
                      -> GHC.Err.error
                           @ 'GHC.Types.PtrRepLifted
                           @ GHC.Types.Int
                           (GHC.Stack.Types.PushCallStack
                              (GHC.Base.build
                                 @ GHC.Types.Char
                                 (\ @ b -> GHC.CString.unpackFoldrCString# @ b "error"#))
                              (GHC.Stack.Types.SrcLoc
                                 (GHC.Base.build
                                    @ GHC.Types.Char
                                    (\ @ b -> GHC.CString.unpackFoldrCString# @ b "array-0.5.1.1"#))
                                 (GHC.Base.build
                                    @ GHC.Types.Char
                                    (\ @ b ->
                                     GHC.CString.unpackFoldrCString# @ b "Data.Array.Base"#))
                                 (GHC.Base.build
                                    @ GHC.Types.Char
                                    (\ @ b ->
                                     GHC.CString.unpackFoldrCString#
                                       @ b
                                       "libraries\\array\\Data\\Array\\Base.hs"#))
                                 (GHC.Types.I# 87#)
                                 (GHC.Types.I# 31#)
                                 (GHC.Types.I# 88#)
                                 (GHC.Types.I# 76#))
                              GHC.Stack.Types.EmptyCallStack)
                             `cast`
                           (Sym (GHC.Classes.N:IP[0]
                                     <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                           (GHC.Base.build
                              @ GHC.Types.Char
                              (\ @ b
                                 (c :: GHC.Types.Char -> b -> b)[OneShot]
                                 (n1 :: b)[OneShot] ->
                               GHC.CString.unpackFoldrCString#
                                 @ b
                                 "Error in array index; "#
                                 c
                                 (GHC.Base.foldr
                                    @ GHC.Types.Char
                                    @ b
                                    c
                                    (GHC.CString.unpackFoldrCString#
                                       @ b
                                       " not in range [0.."#
                                       c
                                       (GHC.Base.foldr
                                          @ GHC.Types.Char
                                          @ b
                                          c
                                          (GHC.CString.unpackFoldrCString# @ b ")"# c n1)
                                          (GHC.Show.$fShowInt_$cshow n)))
                                    (GHC.Show.$fShowInt_$cshow i'))))
                      GHC.Types.True -> i' }) } } } } } } }) -}
787109f60c29402a740bd5b0904575f8
  bishopAttackTable ::
    Data.Vector.Vector
      (Data.Array.Base.UArray GHC.Types.Int Alias.BitBoard)
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ (Data.Vector.Vector
                             (Data.Array.Base.UArray GHC.Types.Int Alias.BitBoard))
                        AttackTable.bishopAttackTable1 of ds1 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
798cd2eca1dd7e8d9de0135c43649bf9
  bishopAttackTable1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Vector.Vector
            (Data.Array.Base.UArray GHC.Types.Int Alias.BitBoard) #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newArray#
                        @ (Data.Array.Base.UArray GHC.Types.Int Alias.BitBoard)
                        @ (Control.Monad.Primitive.PrimState
                             (GHC.ST.ST GHC.Prim.RealWorld))
                        0#
                        (Data.Vector.Mutable.uninitialised
                           @ (Data.Array.Base.UArray GHC.Types.Int Alias.BitBoard))
                        s1
                          `cast`
                        (GHC.Prim.State#
                           (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                     <GHC.Prim.RealWorld>_N)))_R of ds1 { (#,#) ipv ipv1 ->
                 case AttackTable.bishopAttackTable_$sfoldlM_loop
                        ipv
                          `cast`
                        (GHC.Prim.State#
                           (Control.Monad.Primitive.D:R:PrimStateST[0]
                                <GHC.Prim.RealWorld>_N))_R
                        AttackTable.bishopAttackTable2
                        0#
                        0#
                        ipv1
                        @~ (Sub (Sym (Data.Vector.D:R:MutableVector[0])) <Control.Monad.Primitive.PrimState
                                                                            (GHC.ST.ST
                                                                               GHC.Prim.RealWorld)>_N <Data.Array.Base.UArray
                                                                                                         GHC.Types.Int
                                                                                                         Alias.BitBoard>_N)
                        0# of ds2 { (#,#) ipv6 ipv7 ->
                 case ipv7 of wild5 { (,) v' n ->
                 case v'
                        `cast`
                      (Sub (Data.Vector.D:R:MutableVector[0]) <Control.Monad.Primitive.PrimState
                                                                 (GHC.ST.ST
                                                                    GHC.Prim.RealWorld)>_N <Data.Array.Base.UArray
                                                                                              GHC.Types.Int
                                                                                              Alias.BitBoard>_N) of wild { Data.Vector.Mutable.MVector dt dt1 dt2 ->
                 case n of dt5 { GHC.Types.I# dt6 ->
                 case GHC.Prim.unsafeFreezeArray#
                        @ (Control.Monad.Primitive.PrimState
                             (GHC.ST.ST GHC.Prim.RealWorld))
                        @ (Data.Array.Base.UArray GHC.Types.Int Alias.BitBoard)
                        dt2
                        ipv6
                          `cast`
                        (GHC.Prim.State#
                           (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                     <GHC.Prim.RealWorld>_N)))_R of ds4 { (#,#) ipv2 ipv3 ->
                 (# ipv2
                      `cast`
                    (GHC.Prim.State#
                       (Control.Monad.Primitive.D:R:PrimStateST[0]
                            <GHC.Prim.RealWorld>_N))_R,
                    Data.Vector.Vector
                      @ (Data.Array.Base.UArray GHC.Types.Int Alias.BitBoard)
                      dt
                      dt6
                      ipv3 #) } } } } } }) -}
43addee82b9578c353c17224a14b1690
  bishopAttackTable2 ::
    [Data.Array.Base.UArray GHC.Types.Int Alias.BitBoard]
  {- Unfolding: (AttackTable.bishopAttackTable_go 0#) -}
116ad76f4f6e94c9af9cfdb75959d167
  bishopAttackTable_$sfoldlM_loop ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> [Data.Array.Base.UArray GHC.Types.Int GHC.Word.Word64]
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.MutableArray#
         (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
         (Data.Array.Base.UArray GHC.Types.Int GHC.Word.Word64)
    -> Data.Vector.Mutable.MVector
         (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
         (Data.Array.Base.UArray GHC.Types.Int GHC.Word.Word64)
       ~R# Data.Vector.Generic.Base.Mutable
             Data.Vector.Vector
             (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
             (Data.Array.Base.UArray GHC.Types.Int GHC.Word.Word64) =>
       GHC.Prim.Int#
       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
             (Data.Vector.Generic.Base.Mutable
                Data.Vector.Vector
                (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
                (Data.Array.Base.UArray GHC.Types.Int Alias.BitBoard),
              GHC.Types.Int) #)
  {- Arity: 7, Strictness: <S,U><S,1*U><L,U><L,U><L,U><L,U><L,U> -}
619ef3a7fe687f7d57c8bb2af3b6da26
  bishopAttackTable_go ::
    GHC.Prim.Int#
    -> [Data.Array.Base.UArray GHC.Types.Int Alias.BitBoard]
  {- Arity: 1, Strictness: <L,U> -}
4c016e14692d1acd568dc7297f5dd1b0
  bishopBetterMagics :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopBetterMagics1
                   AttackTable.bishopMagicTable5) -}
9b3e3b86c0d5cd4f9c0f014ac7438d13
  bishopBetterMagics1 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable112) -}
848257d19f3b41600e708746485266eb
  bishopMagicTable :: Data.Vector.Unboxed.Base.Vector Alias.Magic
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ (Data.Vector.Unboxed.Base.Vector Alias.Magic)
                        AttackTable.bishopMagicTable1 of ds1 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
ad38291d6471f98868c878db8d64f3a6
  bishopMagicTable1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Vector.Unboxed.Base.Vector Alias.Magic #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Classes.divInt#
                        9223372036854775807#
                        8# of ww4 { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.># 0# ww4) of wild1 {
                   GHC.Types.False
                   -> case GHC.Prim.newByteArray#
                             @ (Control.Monad.Primitive.PrimState
                                  (GHC.ST.ST GHC.Prim.RealWorld))
                             0#
                             s1
                               `cast`
                             (GHC.Prim.State#
                                (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                          <GHC.Prim.RealWorld>_N)))_R of ds1 { (#,#) ipv ipv1 ->
                      case AttackTable.bishopMagicTable_$sfoldlM_loop
                             ipv
                               `cast`
                             (GHC.Prim.State#
                                (Control.Monad.Primitive.D:R:PrimStateST[0]
                                     <GHC.Prim.RealWorld>_N))_R
                             AttackTable.bishopMagicTable4
                             0#
                             0#
                             ipv1
                             @~ (Trans
                                     (Sym (Data.Vector.Unboxed.Base.N:R:MVectorsWord64[0]
                                               <Control.Monad.Primitive.PrimState
                                                  (GHC.ST.ST GHC.Prim.RealWorld)>_N))
                                     (Trans
                                          (Sym (Data.Vector.Unboxed.Base.D:R:MVectorsWord640[0]
                                                    <Control.Monad.Primitive.PrimState
                                                       (GHC.ST.ST GHC.Prim.RealWorld)>_N))
                                          (Sub (Sym (Data.Vector.Unboxed.Base.D:R:MutableVector[0])) <Control.Monad.Primitive.PrimState
                                                                                                        (GHC.ST.ST
                                                                                                           GHC.Prim.RealWorld)>_N <GHC.Word.Word64>_N)))
                             0# of ds2 { (#,#) ipv6 ipv7 ->
                      case ipv7 of wild5 { (,) v' n ->
                      case v'
                             `cast`
                           (Trans
                                (Sub (Data.Vector.Unboxed.Base.D:R:MutableVector[0]) <Control.Monad.Primitive.PrimState
                                                                                        (GHC.ST.ST
                                                                                           GHC.Prim.RealWorld)>_N <GHC.Word.Word64>_N)
                                (Trans
                                     (Data.Vector.Unboxed.Base.D:R:MVectorsWord640[0]
                                          <Control.Monad.Primitive.PrimState
                                             (GHC.ST.ST GHC.Prim.RealWorld)>_N)
                                     (Data.Vector.Unboxed.Base.N:R:MVectorsWord64[0]
                                          <Control.Monad.Primitive.PrimState
                                             (GHC.ST.ST
                                                GHC.Prim.RealWorld)>_N))) of wild { Data.Vector.Primitive.Mutable.MVector dt dt1 dt2 ->
                      case n of dt3 { GHC.Types.I# dt4 ->
                      case GHC.Prim.unsafeFreezeByteArray#
                             @ (Control.Monad.Primitive.PrimState
                                  (GHC.ST.ST GHC.Prim.RealWorld))
                             dt2
                             ipv6
                               `cast`
                             (GHC.Prim.State#
                                (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                          <GHC.Prim.RealWorld>_N)))_R of ds4 { (#,#) ipv2 ipv3 ->
                      (# ipv2
                           `cast`
                         (GHC.Prim.State#
                            (Control.Monad.Primitive.D:R:PrimStateST[0]
                                 <GHC.Prim.RealWorld>_N))_R,
                         (Data.Vector.Primitive.Vector @ GHC.Word.Word64 dt dt4 ipv3)
                           `cast`
                         (Trans
                              (Sym (Data.Vector.Unboxed.Base.N:R:VectorWord64[0]))
                              (Sym (Data.Vector.Unboxed.Base.D:R:VectorWord640[0]))) #) } } } } } }
                   GHC.Types.True
                   -> case GHC.Err.error
                             @ 'GHC.Types.PtrRepLifted
                             @ (GHC.ST.ST
                                  GHC.Prim.RealWorld
                                  (Data.Vector.Primitive.Mutable.MVector
                                     (Control.Monad.Primitive.PrimState
                                        (GHC.ST.ST GHC.Prim.RealWorld))
                                     GHC.Word.Word64))
                             AttackTable.bishopRelevantOccupancyTable4
                               `cast`
                             (Sym (GHC.Classes.N:IP[0]
                                       <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                             AttackTable.bishopMagicTable2
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                Data.Vector.Unboxed.Base.Vector Alias.Magic #)
                      of {} } }) -}
5552e5bd5fc72690ae27addabff1ba91
  bishopMagicTable10 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable108
                   AttackTable.bishopMagicTable11) -}
a13ace2a8eaea44f6cbc085427b56723
  bishopMagicTable100 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable101) -}
3f712a4fe90e3db11908dd6cd2804eea
  bishopMagicTable101 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 9076995261732224988##) -}
824e2a45bb9366593885513900295b3e
  bishopMagicTable102 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable103) -}
30107199b9c9e0da4d165ffa5cadfce4
  bishopMagicTable103 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 13042088030542526463##) -}
ad27d833c6d73cd6083a909d55144946
  bishopMagicTable104 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable105) -}
00fbde296ebba41a53342cc15f827809
  bishopMagicTable105 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 17558112840401141755##) -}
940123bf9fcceb82c1447268d6943988
  bishopMagicTable106 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable107) -}
7b2881a9f6cf98072efae5a67b253293
  bishopMagicTable107 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 16066436173231226866##) -}
a659dc3bb132e59178f28de5700131ef
  bishopMagicTable108 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable109) -}
9871b5debf0a0da6ea9f02c92275811c
  bishopMagicTable109 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 8997669494818077369##) -}
b7fa5eefa0d87451a08e09d523226fb6
  bishopMagicTable11 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable106
                   AttackTable.bishopMagicTable12) -}
2390a5f719ff898f4e8e81d9a46bd902
  bishopMagicTable110 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable111) -}
739149447415f8d7ebd4f06c06cb1932
  bishopMagicTable111 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 17958520202983371190##) -}
685605ec7efcca155c2e4a0a374f828e
  bishopMagicTable112 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 18140241445301226495##) -}
83fc043ea70bd8f9c518e41917b94834
  bishopMagicTable113 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable192
                   AttackTable.bishopMagicTable114) -}
e9045b052a5e8ae0866ddad23cd0582c
  bishopMagicTable114 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable282
                   AttackTable.bishopMagicTable115) -}
2691e4ce0e1acba150ca415797e7b0bb
  bishopMagicTable115 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable280
                   AttackTable.bishopMagicTable116) -}
5d778e5cad94444704d2ffa3198a95d0
  bishopMagicTable116 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable278
                   AttackTable.bishopMagicTable117) -}
d07d8e4b20c11fe39c41a8184c43cddc
  bishopMagicTable117 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable276
                   AttackTable.bishopMagicTable118) -}
2fb49c6285edbeae52af899fad04f309
  bishopMagicTable118 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable202
                   AttackTable.bishopMagicTable119) -}
666a348d9b723d4ac0c8ae2c120c80ae
  bishopMagicTable119 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable190
                   AttackTable.bishopMagicTable120) -}
033bce4f82651deb25c64012256f565a
  bishopMagicTable12 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable104
                   AttackTable.bishopMagicTable13) -}
315f5d2cf45c0fd305cbbb180175783d
  bishopMagicTable120 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable178
                   AttackTable.bishopMagicTable121) -}
f3d3dc70c14268b57610bb3d9146e2d7
  bishopMagicTable121 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable274
                   AttackTable.bishopMagicTable122) -}
773fdc969691704d09e411f57278f754
  bishopMagicTable122 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable272
                   AttackTable.bishopMagicTable123) -}
1e6a479625e23b94e3c14f12d0ad95d4
  bishopMagicTable123 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable270
                   AttackTable.bishopMagicTable124) -}
314b6f404b5da8fed19e31eed238f805
  bishopMagicTable124 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable268
                   AttackTable.bishopMagicTable125) -}
23f7e0af054be1bb656a4566c4d5c507
  bishopMagicTable125 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable266
                   AttackTable.bishopMagicTable126) -}
70ba675bac090be621ee434f2885b72a
  bishopMagicTable126 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable264
                   AttackTable.bishopMagicTable127) -}
8e5d05507bfd8ab1b79410fce5093406
  bishopMagicTable127 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable188
                   AttackTable.bishopMagicTable128) -}
e2719b127acf7b927c4ea0b209d7a819
  bishopMagicTable128 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable232
                   AttackTable.bishopMagicTable129) -}
720397925c90ca57228c1f15b877f16d
  bishopMagicTable129 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable262
                   AttackTable.bishopMagicTable130) -}
88ca12ffede20d6c928f2057aafc58ee
  bishopMagicTable13 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable102
                   AttackTable.bishopMagicTable14) -}
cc57d2ccb8f7507713de107f75b85a88
  bishopMagicTable130 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable260
                   AttackTable.bishopMagicTable131) -}
9404bd2d7dc6156524bfd21d5f86e1f8
  bishopMagicTable131 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable258
                   AttackTable.bishopMagicTable132) -}
91c8135d310800bc369713907ba70b49
  bishopMagicTable132 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable256
                   AttackTable.bishopMagicTable133) -}
6e0adb8f9858b31e6ba5cbd5c32b8c4b
  bishopMagicTable133 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable254
                   AttackTable.bishopMagicTable134) -}
314329d589bc2d06d8d8b30273cf89b0
  bishopMagicTable134 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable252
                   AttackTable.bishopMagicTable135) -}
8b8132cab37e5bde07e44cbb5991ef1b
  bishopMagicTable135 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable250
                   AttackTable.bishopMagicTable136) -}
e3d704e4b37d7b9e16c9dfe813f4f9d8
  bishopMagicTable136 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable248
                   AttackTable.bishopMagicTable137) -}
c734e0da95cb831d407b24422bc8d534
  bishopMagicTable137 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable246
                   AttackTable.bishopMagicTable138) -}
5441362e105c23092cc59b40d3b1c30f
  bishopMagicTable138 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable244
                   AttackTable.bishopMagicTable139) -}
677420db5ee41a8a488c1bbfc43c4c4b
  bishopMagicTable139 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable242
                   AttackTable.bishopMagicTable140) -}
1cadabe8e02c0a98bfd3fc8fa5231892
  bishopMagicTable14 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.bishopMagicTable15) -}
868d3ec0bae8cef3bd7613d4dbb39e6e
  bishopMagicTable140 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable240
                   AttackTable.bishopMagicTable141) -}
de9a714e64e6b2db0321e7618f946692
  bishopMagicTable141 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable238
                   AttackTable.bishopMagicTable142) -}
e45cb3948287f9de7830c1e2ffdbfa40
  bishopMagicTable142 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable236
                   AttackTable.bishopMagicTable143) -}
8e7fde69db186757daf0efb14ea0ec36
  bishopMagicTable143 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable234
                   AttackTable.bishopMagicTable144) -}
c43d5a97fb16bd978bd5c88f61b3eea6
  bishopMagicTable144 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable232
                   AttackTable.bishopMagicTable145) -}
e471aa4b64e0225502a0cd84f9a3fad7
  bishopMagicTable145 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable230
                   AttackTable.bishopMagicTable146) -}
51f510dfcf52b5105a96c8e188a47dc8
  bishopMagicTable146 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable228
                   AttackTable.bishopMagicTable147) -}
a35a6eeff4c50eed9a63c68231e45049
  bishopMagicTable147 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable226
                   AttackTable.bishopMagicTable148) -}
fd24150f6b9f7c4ba6c6104b4ce4b4dc
  bishopMagicTable148 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable224
                   AttackTable.bishopMagicTable149) -}
40c001c362095096f22c80f72d7aaa8d
  bishopMagicTable149 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable222
                   AttackTable.bishopMagicTable150) -}
4c3e5ec5b2491166e7a71887a2ea4500
  bishopMagicTable15 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.bishopMagicTable16) -}
2674895be813a806991177229fd56196
  bishopMagicTable150 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable182
                   AttackTable.bishopMagicTable151) -}
606e675a6469ce35f48ec186a700feb7
  bishopMagicTable151 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable220
                   AttackTable.bishopMagicTable152) -}
7948c430d1e709b26866a6d9d0eb787a
  bishopMagicTable152 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable218
                   AttackTable.bishopMagicTable153) -}
41b5ace24a5dd2a4ff7ef25385996f57
  bishopMagicTable153 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable216
                   AttackTable.bishopMagicTable154) -}
31b8eec6faf1866037f08f26564f48d8
  bishopMagicTable154 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable214
                   AttackTable.bishopMagicTable155) -}
cefd4e970ab33b545ba1400be3dcdf9b
  bishopMagicTable155 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable212
                   AttackTable.bishopMagicTable156) -}
11d5857d040ac54e8d164296a143926d
  bishopMagicTable156 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable210
                   AttackTable.bishopMagicTable157) -}
81a391243a726ec7f7befde7e13b8738
  bishopMagicTable157 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable208
                   AttackTable.bishopMagicTable158) -}
52c4d526854fc6e307c24d8dc15baa69
  bishopMagicTable158 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable206
                   AttackTable.bishopMagicTable159) -}
a87cfb6b3f5583b5e1fdbeb90ee3e08e
  bishopMagicTable159 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable204
                   AttackTable.bishopMagicTable160) -}
e0de0b2fb95ef063c5f3b782ccb4919e
  bishopMagicTable16 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.bishopMagicTable17) -}
dd232e786e4fbf1f4a9694bebf4d3144
  bishopMagicTable160 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable202
                   AttackTable.bishopMagicTable161) -}
0d6e27e2d676e86ae632ddeacd3ec3a6
  bishopMagicTable161 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable200
                   AttackTable.bishopMagicTable162) -}
b7466e708f861c42e339d807bab8f95c
  bishopMagicTable162 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable198
                   AttackTable.bishopMagicTable163) -}
2c434faef3bab26e627ee8df2afc8c21
  bishopMagicTable163 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable196
                   AttackTable.bishopMagicTable164) -}
9a110fdc71d818eb6b9a128b7d0703bf
  bishopMagicTable164 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable194
                   AttackTable.bishopMagicTable165) -}
2a359cacac1261a900b7ab6f66b8bb86
  bishopMagicTable165 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable194
                   AttackTable.bishopMagicTable166) -}
4a71c76513c07784a20a0f1480f0d207
  bishopMagicTable166 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable176
                   AttackTable.bishopMagicTable167) -}
74f117dc998b1842ab549c05c74319c5
  bishopMagicTable167 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable192
                   AttackTable.bishopMagicTable168) -}
f186a01de80f1be47404795ae1752115
  bishopMagicTable168 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable190
                   AttackTable.bishopMagicTable169) -}
d87029759efd92ab6fcae411a77b650f
  bishopMagicTable169 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable188
                   AttackTable.bishopMagicTable170) -}
8f504e13dfd4c80d42b63e3a238acb9f
  bishopMagicTable17 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.bishopMagicTable18) -}
994b72b1bc35c7525c929dd88fd42d5a
  bishopMagicTable170 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable186
                   AttackTable.bishopMagicTable171) -}
34e982d4ab7ac82e2d83688026db781b
  bishopMagicTable171 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable184
                   AttackTable.bishopMagicTable172) -}
5d63361e158a8e11968fe6f0c81936ed
  bishopMagicTable172 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable182
                   AttackTable.bishopMagicTable173) -}
2e2e1df58b31ffbd498cdd5705623a95
  bishopMagicTable173 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable180
                   AttackTable.bishopMagicTable174) -}
06d0570697d08ff4b4f6d4b23189df99
  bishopMagicTable174 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable178
                   AttackTable.bishopMagicTable175) -}
2d49e520f517b97bba2b1ef548304a54
  bishopMagicTable175 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable176
                   (GHC.Types.[] @ (GHC.Base.Maybe Alias.Magic))) -}
d43daf1cec0d12f5227cd90fdff31d05
  bishopMagicTable176 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable177) -}
0e42bebde9efd1483040991c0aa30544
  bishopMagicTable177 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 297239860681637905##) -}
5167687714df5248c2ca7ee3ad861c8b
  bishopMagicTable178 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable179) -}
6310e2dcf0adb4563ca9a96218107be6
  bishopMagicTable179 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 3458773928455996424##) -}
aa81f76853ba7a9c5deab97d4b417b87
  bishopMagicTable18 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable100
                   AttackTable.bishopMagicTable19) -}
d4c2bbd0ca9f009006c5baf23fb9d02d
  bishopMagicTable180 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable181) -}
ed35109bb2020e04e834eaaebbb73edf
  bishopMagicTable181 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 17867756093697##) -}
4f17a1f0641ed78fa21d2cc91889d5fc
  bishopMagicTable182 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable183) -}
8031f668b81ade42390b7016aba21b8e
  bishopMagicTable183 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 2260785975951880##) -}
42bd86849a498b4fbade895e9e7a6ce8
  bishopMagicTable184 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable185) -}
ed3ac4daa19889306b32b936a15f6c34
  bishopMagicTable185 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 1152930335069307904##) -}
0f3c221ed923c640bf3290ea39b1a7e9
  bishopMagicTable186 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable187) -}
01c13edd0fed06705e758eb2ae46050f
  bishopMagicTable187 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 75110933598336##) -}
6e41d1e4a3b16bf9089b817574eb0a08
  bishopMagicTable188 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable189) -}
2e279b9c26f458f83941813f0a2b04a7
  bishopMagicTable189 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 1152957789581352962##) -}
bd2052677d0178bec011bd69ecca7b65
  bishopMagicTable19 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable98
                   AttackTable.bishopMagicTable20) -}
8f5963ee26b6bae8379c02fe63fb68d7
  bishopMagicTable190 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable191) -}
c6f25283d88162d6507ee5435cbeaa08
  bishopMagicTable191 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 42257564886435840##) -}
7e4e10d18591b80383b5625e9a7d29b2
  bishopMagicTable192 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable193) -}
15b3f5a2c3fffc2260ad75be32fd6da2
  bishopMagicTable193 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 2306977713872742416##) -}
555bce5443033b90c5449dc74a38570d
  bishopMagicTable194 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable195) -}
b7274f28eefd3cd802661f690048dee9
  bishopMagicTable195 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 18084836141047809##) -}
d265356795a90f51e8dc50385eb03784
  bishopMagicTable196 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable197) -}
f1c069733d7b0effc796fa311332017d
  bishopMagicTable197 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 4613937831671758848##) -}
1712a2727ea0dc5c1710b5419d415232
  bishopMagicTable198 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable199) -}
bd19e0915e3caf1f7dfd398907c8d121
  bishopMagicTable199 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 72343759186296849##) -}
745b31a1fe04aea84a632bf635d242f4
  bishopMagicTable2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackAppendCString#
                   "Primitive.basicUnsafeNew: length to large: "#
                   AttackTable.bishopMagicTable3) -}
e5e09a27a3c50f27e060dda3593a4cbc
  bishopMagicTable20 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable96
                   AttackTable.bishopMagicTable21) -}
b5a2ab532ae38f65b347792bf5bb223f
  bishopMagicTable200 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable201) -}
d8d0a7c48d1d225f2b4459b301e85deb
  bishopMagicTable201 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 14123858002113462280##) -}
461badbdd44cf3cdf1d375c52316b89e
  bishopMagicTable202 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable203) -}
0521e1ce3bba5900563ab44b2474a2a5
  bishopMagicTable203 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 571771850850368##) -}
acd9ca43441e68727d3116c8b6c89850
  bishopMagicTable204 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable205) -}
dc61669b4d5151285085ae0ad7901a0c
  bishopMagicTable205 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 380836902200156672##) -}
8ceece285b535a0be0d08ed51e6fb3be
  bishopMagicTable206 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable207) -}
f57b3b3468fc97cd954d3a57406afdea
  bishopMagicTable207 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 4757007654428082704##) -}
a0932519a5eb598930579ab50197f267
  bishopMagicTable208 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable209) -}
2cd17c0adfa103615de5f425e829d61b
  bishopMagicTable209 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 598151591363840##) -}
98b9b7ac416e8ed9b2ca118cfd058036
  bishopMagicTable21 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable94
                   AttackTable.bishopMagicTable22) -}
bd574361b58504f3628bd72f269ba72b
  bishopMagicTable210 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable211) -}
b0663ac411d7077c57fc809b275f5fb9
  bishopMagicTable211 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 4615065925962498564##) -}
8680cd2946375b5b698f4fc417b9c2c3
  bishopMagicTable212 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable213) -}
b556fec06c84b61b9550228ce09c487b
  bishopMagicTable213 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 18437435880899072##) -}
7c1a1463a5b962c05ebcb80a54b9dbda
  bishopMagicTable214 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable215) -}
54e1c380cdb6f8b7a2b6478d826dccba
  bishopMagicTable215 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 882741347093581824##) -}
242abe02d99bc3f4837b04c725d2ed88
  bishopMagicTable216 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable217) -}
f27e2bb1977a602b44fa13e1116bdb6e
  bishopMagicTable217 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 1225157323144728064##) -}
68179c5b4072182b2a07791db9881511
  bishopMagicTable218 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable219) -}
116bdf45769aaa0e4a914f33ea6bafe5
  bishopMagicTable219 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 145341829103616##) -}
8ee4ac4df332a4f05028e9ee90b99c45
  bishopMagicTable22 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.bishopMagicTable23) -}
0d76ddf93ea028a64bcf7cb6b7657dad
  bishopMagicTable220 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable221) -}
ab847653398f9956b32627f4f1cdd0a8
  bishopMagicTable221 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 577587279275589956##) -}
88ab654cab6f7d919fb13b4255448db4
  bishopMagicTable222 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable223) -}
5837caddf12fa500d5ef56855f65bad3
  bishopMagicTable223 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 108649899365566464##) -}
8d435b09113c7bdc4742e013837192e7
  bishopMagicTable224 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable225) -}
674a427a671d4819353d31505e47509f
  bishopMagicTable225 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 18014673655890176##) -}
9d60e1fe9175a714da64a44a8f944b71
  bishopMagicTable226 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable227) -}
a6605c1bc49f74e2899bfc3ea59efa72
  bishopMagicTable227 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 563225930498304##) -}
c7d4612746df04d53fec82b286f7bc96
  bishopMagicTable228 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable229) -}
e017fa12c50f64f864280d3281a8cd4c
  bishopMagicTable229 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 2306005745529790592##) -}
478b403975f790cd9e7b5bb841423acd
  bishopMagicTable23 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.bishopMagicTable24) -}
95dd15b7789553c20fc5835cfb0f2870
  bishopMagicTable230 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable231) -}
2d7266e0d21aa667572da97f20fd8232
  bishopMagicTable231 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 288802277590828290##) -}
e14cb12d2500a631d7f89a1ae8f2deaf
  bishopMagicTable232 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable233) -}
79e54d38778e6e037706f465baa14fbe
  bishopMagicTable233 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 22570791943538688##) -}
1db33ef4bb8404c56dada4a8a90089e7
  bishopMagicTable234 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable235) -}
67f0a626ef8fe35349a24bec1b72ea8e
  bishopMagicTable235 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 9232521073252263948##) -}
0163d8a379ed8507fb52c461fa2dc80c
  bishopMagicTable236 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable237) -}
54df59a41fe520756bf3a478f775dd5e
  bishopMagicTable237 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 20267297868417792##) -}
304266db6151f861e91895f8c57fa735
  bishopMagicTable238 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable239) -}
89f7e2fbec0790fa40c5d5b0f7422c48
  bishopMagicTable239 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 9278400532408569856##) -}
11c1451ccb72ac1296b3b7647f38d8d9
  bishopMagicTable24 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.bishopMagicTable25) -}
c0c733359e35854bbdfdb73bfcebe8d7
  bishopMagicTable240 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable241) -}
cddaa050956e9561d440dc1740818ba4
  bishopMagicTable241 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 9232660779822497793##) -}
b70ad1704086f01270520c361f6154f6
  bishopMagicTable242 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable243) -}
345569e199e3831f574f10b84f24e2ee
  bishopMagicTable243 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 9856022302949504##) -}
902b18a8de39675931f621877bc30807
  bishopMagicTable244 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable245) -}
efcd9e8f3eda8c8077e1e90660f96b90
  bishopMagicTable245 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 452616298472670096##) -}
a29b88d1d4b6d2297194f4c6d4dc40e2
  bishopMagicTable246 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable247) -}
33fd10bacb91e34e859f23b020aded15
  bishopMagicTable247 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 20409689426891008##) -}
737d6b30a498ca5be75cc3e98fb32ba7
  bishopMagicTable248 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable249) -}
b57fef84190e8d379ff921f94b1df270
  bishopMagicTable249 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 4756540147852378624##) -}
be90da15dbbe6a41328ef04ddd81f351
  bishopMagicTable25 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.bishopMagicTable26) -}
56713d672cafbc706e47ca891039afc6
  bishopMagicTable250 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable251) -}
6f307c076e375cd5757dee658de3d81d
  bishopMagicTable251 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 4613974103232611488##) -}
6d04dc2c9c72b71bba424934be69da66
  bishopMagicTable252 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable253) -}
659919ee8ce72ac5140fecc8fd70eeeb
  bishopMagicTable253 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 9241597833942142976##) -}
1c597e467b7aae61de3483db248c9836
  bishopMagicTable254 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable255) -}
0fa7eaa9c1df506c03bb4300150e555c
  bishopMagicTable255 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 9499782617767936##) -}
023ce5786daaf92a9d6fcec54ac45a3a
  bishopMagicTable256 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable257) -}
8b00a92dcd652232e5250d0ecca04741
  bishopMagicTable257 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 4828140423966883840##) -}
9d5383865c7e80c25794bc623ece366e
  bishopMagicTable258 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable259) -}
929e160599d3b91b7b75dc08e5d90576
  bishopMagicTable259 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 2254005313029256##) -}
f4537e4d56c47a8e57dc1b76fc72e870
  bishopMagicTable26 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable92
                   AttackTable.bishopMagicTable27) -}
048cb6d5357f9db2f3b0c4c1e78b0a6f
  bishopMagicTable260 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable261) -}
c4e8264b897b218776daadcd87cab29b
  bishopMagicTable261 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 9225624253314105362##) -}
a3957fc81234f892d39e6e48c5266524
  bishopMagicTable262 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable263) -}
360ac1bba78bb60d7e1f19956df50040
  bishopMagicTable263 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 580966688594362500##) -}
fb6aabeda182f39c39ec90fbe2bc0831
  bishopMagicTable264 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable265) -}
a51f2b59f2d2a63a6a1ea5d1a6f00aed
  bishopMagicTable265 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 4514631320078368##) -}
8716859133c3279de5d33990b8a3565f
  bishopMagicTable266 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable267) -}
07d31a4a807cef896748e778abc1b1c1
  bishopMagicTable267 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 4809855401712951840##) -}
8819a4631194469c956dd2471ea0c072
  bishopMagicTable268 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable269) -}
73f85f0c5970be49093374cf463bef73
  bishopMagicTable269 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 729619493319344128##) -}
c7b7e030d8451c943307331a1ca03cd7
  bishopMagicTable27 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable90
                   AttackTable.bishopMagicTable28) -}
13eca9cc697356aafbeba036b8f48630
  bishopMagicTable270 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable271) -}
3a47f8c462b62e0b3b387bfd9b33eaa4
  bishopMagicTable271 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 290703194999750916##) -}
4075e8a2e45d2bc7f39f5e64a46961dc
  bishopMagicTable272 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable273) -}
246fbd549ded5b54e3615e9414786b76
  bishopMagicTable273 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 1284234954211344##) -}
dfaf59ad1b993b88c6d288ca7917f5e1
  bishopMagicTable274 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable275) -}
5c420b24fd9714c165093deb985b68d0
  bishopMagicTable275 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 1152925971444205794##) -}
d2ee04decd36ec52ee8a7e19990268c8
  bishopMagicTable276 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable277) -}
adcbce43ca90252817517f0158f4ccdf
  bishopMagicTable277 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 613061312618106913##) -}
fc46c20eea09ee77d6d693e8c20607df
  bishopMagicTable278 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable279) -}
22a600caafcf96ee23e0d111703f3eb2
  bishopMagicTable279 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 2346958215743279112##) -}
fb53021a95d5e227d5d2c5a5475561c6
  bishopMagicTable28 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.bishopMagicTable29) -}
9873562fe7c718cba4b014244c83509c
  bishopMagicTable280 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable281) -}
67bb7ea16b3e31548ed894a6f3ceaf86
  bishopMagicTable281 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 3464398447944138752##) -}
7ee538b9bc46dba785a8a8f416893d72
  bishopMagicTable282 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable283) -}
ec4b44c48a7e8600e52bf4457adb6065
  bishopMagicTable283 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 1298347312707559424##) -}
fab254540effc52ed38aadbfba0b1891
  bishopMagicTable29 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.bishopMagicTable30) -}
8061ba2974e9eeb0dddcabef001262bc
  bishopMagicTable3 :: [GHC.Types.Char]
  {- Unfolding: (case GHC.Show.$wshowSignedInt
                        0#
                        0#
                        (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                 GHC.Types.: @ GHC.Types.Char ww5 ww6 }) -}
6b7db3bdb4b247e210a07e9e20d9f52b
  bishopMagicTable30 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.bishopMagicTable31) -}
1abb3585f755adafa17847dde7d29b78
  bishopMagicTable31 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.bishopMagicTable32) -}
6d4e421ca2a30270caa780900cf421a6
  bishopMagicTable32 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.bishopMagicTable33) -}
54ced21b62e760bce2bae4758b5de3e1
  bishopMagicTable33 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.bishopMagicTable34) -}
f9698e92f80c8ca24f8bc59e1f797056
  bishopMagicTable34 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.bishopMagicTable35) -}
5551fcc718e44b0abf6f00813dd0dc46
  bishopMagicTable35 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.bishopMagicTable36) -}
476d99f98311eeab18a688d944711871
  bishopMagicTable36 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.bishopMagicTable37) -}
0fbc1155e967f8a126db7769e6885798
  bishopMagicTable37 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.bishopMagicTable38) -}
1f431f22dcc4ea75c2bc69e5e209154e
  bishopMagicTable38 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.bishopMagicTable39) -}
725ede1879ef03ac89fd1a687b274f18
  bishopMagicTable39 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.bishopMagicTable40) -}
b67f8f2ce3602190cb55bd2d4602ba54
  bishopMagicTable4 :: [GHC.Word.Word64]
  {- Unfolding: (AttackTable.bishopMagicTable_$sgo
                   AttackTable.bishopMagicTable177
                   AttackTable.bishopMagicTable113
                   AttackTable.bishopMagicTable112
                   AttackTable.bishopMagicTable5) -}
e36abbecb2c85ed7e28f7abc637c08b8
  bishopMagicTable40 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.bishopMagicTable41) -}
8fba3fbc013a72e142c01a8a30071a66
  bishopMagicTable41 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.bishopMagicTable42) -}
ecc8d84d523a6a5c57b33119ed52b008
  bishopMagicTable42 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.bishopMagicTable43) -}
d8c6409ee615e641f2440052fb7753df
  bishopMagicTable43 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.bishopMagicTable44) -}
efdafaa361148a77b30f1e1bf7c56cb5
  bishopMagicTable44 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable88
                   AttackTable.bishopMagicTable45) -}
40aec74f511862216c4e7131115fe79a
  bishopMagicTable45 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable86
                   AttackTable.bishopMagicTable46) -}
1dd603ee5924cf1330f1293e59fd9595
  bishopMagicTable46 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.bishopMagicTable47) -}
9e21aef34e3a3382753250eed3b632dd
  bishopMagicTable47 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.bishopMagicTable48) -}
0c4a186ddedb347d3bcb7e98abc1f2e0
  bishopMagicTable48 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.bishopMagicTable49) -}
290e1043b8c20e3dfb6a8f7dada324aa
  bishopMagicTable49 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.bishopMagicTable50) -}
64ff4a8950a5b97b5b2bde608df7a7af
  bishopMagicTable5 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable110
                   AttackTable.bishopMagicTable6) -}
f1752b230c24196ac53f4a2524d000f7
  bishopMagicTable50 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable84
                   AttackTable.bishopMagicTable51) -}
482f777cfcc7005a6b49531987a66c40
  bishopMagicTable51 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable82
                   AttackTable.bishopMagicTable52) -}
5b1023cee2b7d028adba059e7043a5ea
  bishopMagicTable52 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable80
                   AttackTable.bishopMagicTable53) -}
c47c706ed91f47907f06f1b543812934
  bishopMagicTable53 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable78
                   AttackTable.bishopMagicTable54) -}
a3a6bc27fc885702ca98cf0e47edeac8
  bishopMagicTable54 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.bishopMagicTable55) -}
6d8e35ee116aa4b1dff45752d37b3f63
  bishopMagicTable55 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.bishopMagicTable56) -}
5ea0c87df42d5716df0439e2b3a5521a
  bishopMagicTable56 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.bishopMagicTable57) -}
83c9a85bfd98b6a8c1a8dd42b2a5d294
  bishopMagicTable57 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.bishopMagicTable58) -}
52ee5a0e3508f52ca40fc560aa3587bc
  bishopMagicTable58 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable76
                   AttackTable.bishopMagicTable59) -}
1ccbbdec20e2ee10198a8d977a4bd3b1
  bishopMagicTable59 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable74
                   AttackTable.bishopMagicTable60) -}
73af538d5010221d3923479f26842d72
  bishopMagicTable6 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.bishopMagicTable7) -}
ed8099379bda3c4c53fb79b4bbec3d38
  bishopMagicTable60 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable72
                   AttackTable.bishopMagicTable61) -}
c2e373334e8ba7403d7c582491cdbb53
  bishopMagicTable61 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable72
                   AttackTable.bishopMagicTable62) -}
ef28d7cbf4f4247109f3fbab09f9bede
  bishopMagicTable62 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.bishopMagicTable63) -}
5bcae8d64ec528a1dfc001e582c66ebb
  bishopMagicTable63 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.bishopMagicTable64) -}
9f8887e11a28b7db286f247545240145
  bishopMagicTable64 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.bishopMagicTable65) -}
69db7ed5fcd3bed534466d29e4603278
  bishopMagicTable65 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.bishopMagicTable66) -}
bb17296c48e533d7f9dcd5a3df610a8c
  bishopMagicTable66 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable70
                   AttackTable.bishopMagicTable67) -}
c1831be4466e723331a701001dd7d212
  bishopMagicTable67 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable68
                   (GHC.Types.[] @ (GHC.Base.Maybe Alias.Magic))) -}
2e22a78342abe0b6fcc890e5908afd47
  bishopMagicTable68 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable69) -}
6bda5a198be5ed32df20c91fb0e0a547
  bishopMagicTable69 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 14735661411988365271##) -}
854f56dddbfc6ba7c0b4f928f37343bc
  bishopMagicTable7 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.bishopMagicTable8) -}
d5a15021cd98a864328e289d7e40be70
  bishopMagicTable70 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable71) -}
3e5e94e6f18674e5308f6da8c400fd45
  bishopMagicTable71 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 17248082727783886655##) -}
b0a259cb16c6cca622b50ce7b29dc8fa
  bishopMagicTable72 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable73) -}
d57e43c129bb30c3e89ceeaf9dfb6525
  bishopMagicTable73 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 6916398712465516023##) -}
1983aafc0b6529537c6b8185261aef6a
  bishopMagicTable74 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable75) -}
ba09d31554028f86b88dc78120e97c9f
  bishopMagicTable75 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 16915510274448739067##) -}
977c73f5065dc637144480b107e33ffa
  bishopMagicTable76 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable77) -}
139d5ff7a6c9ed1fc4c9921c26218615
  bishopMagicTable77 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 17834241304901390059##) -}
72b1764b25b61e9694d4ce66b4f835ac
  bishopMagicTable78 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable79) -}
41f82d70cd87a5ee426430ccc3ca482b
  bishopMagicTable79 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 4023960659358743533##) -}
a3c6a3565e1b75a794f9874ba20d4e09
  bishopMagicTable8 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.bishopMagicTable9) -}
542cdad5cb0de91a8c03abf90807200e
  bishopMagicTable80 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable81) -}
146b95769e2ae6a766238ee4dc92b1c5
  bishopMagicTable81 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 11526952169365534431##) -}
a48d600dd32cef73a1e69d8349e6d730
  bishopMagicTable82 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable83) -}
68c20691aa2f7e81a539e385a48554e4
  bishopMagicTable83 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 5476321683761034753##) -}
ffb4e89fe5f133928083705d72c4b69e
  bishopMagicTable84 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable85) -}
fc8eb4cbc66d561c5ed908644ae2af94
  bishopMagicTable85 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 4899804643636939777##) -}
1727603813b1c064718e6c3e470f0518
  bishopMagicTable86 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable87) -}
120fb5cd01796a55ac6717b2d20b4693
  bishopMagicTable87 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 17969356424471207979##) -}
a8cca7118884c3c443c6e4f7844ac2d2
  bishopMagicTable88 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable89) -}
7d16b6cc08711a07ebc2f40a78b36cbd
  bishopMagicTable89 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 15920182580465156255##) -}
570ae262c6df7cffbc47c12c8b68a612
  bishopMagicTable9 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.bishopMagicTable10) -}
d1b1c4ee91aa09472b4cd4a56f05494d
  bishopMagicTable90 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable91) -}
544c55fb3a56b463a7ea10cfca81921b
  bishopMagicTable91 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 18161331257755361142##) -}
36060abb00e51ff74fa91258b6726e9a
  bishopMagicTable92 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable93) -}
bb10a765c134d2c6a47a97d0906016fe
  bishopMagicTable93 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 8938522175157370742##) -}
e47ba4ac1a3579b3454ced0bb8d3249d
  bishopMagicTable94 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable95) -}
db187bbf7f249a60d2b592e770c11865
  bishopMagicTable95 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 4728811472401641468##) -}
4a048dc2b82a5183a364a5477b667c7b
  bishopMagicTable96 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable97) -}
86bdd8f27c3514fe60c84780cbabfac4
  bishopMagicTable97 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 8340696151287451643##) -}
05054639509d89564988772d1fb4bac6
  bishopMagicTable98 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.bishopMagicTable99) -}
3a5cfb9aa662aeb8287198c0fb793faf
  bishopMagicTable99 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 13726971237899108351##) -}
267aa19d9f68d613a920ebc3a47072d1
  bishopMagicTable_$sfoldlM_loop ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> [GHC.Word.Word64]
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.MutableByteArray#
         (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
    -> Data.Vector.Primitive.Mutable.MVector
         (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
         GHC.Word.Word64
       ~R# Data.Vector.Generic.Base.Mutable
             Data.Vector.Unboxed.Base.Vector
             (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
             GHC.Word.Word64 =>
       GHC.Prim.Int#
       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
             (Data.Vector.Generic.Base.Mutable
                Data.Vector.Unboxed.Base.Vector
                (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
                Alias.Magic,
              GHC.Types.Int) #)
  {- Arity: 7, Strictness: <S,U><S,1*U><L,U><L,U><L,U><L,U><L,U> -}
60eb5e728944e7cbf42bb0b6f1592ba6
  bishopMagicTable_$sgo ::
    GHC.Word.Word64
    -> [GHC.Base.Maybe GHC.Word.Word64]
    -> GHC.Word.Word64
    -> [GHC.Base.Maybe GHC.Word.Word64]
    -> [GHC.Word.Word64]
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U> -}
c6e522117aea1323615e428d6513cb26
  bishopMagics :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.bishopMagicTable176
                   AttackTable.bishopMagicTable113) -}
c728bf249ceb3d71c8531e0ddc1863c5
  bishopRelevantOccupancyTable ::
    Data.Vector.Unboxed.Base.Vector Alias.Occupancy
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ (Data.Vector.Unboxed.Base.Vector Alias.AttackMap)
                        AttackTable.bishopRelevantOccupancyTable1 of ds1 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
559e6c6ed4f6b880fa4a4836e7a2026e
  bishopRelevantOccupancyTable1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Vector.Unboxed.Base.Vector Alias.AttackMap #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Classes.divInt#
                        9223372036854775807#
                        8# of ww4 { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.># 64# ww4) of wild1 {
                   GHC.Types.False
                   -> case GHC.Prim.newByteArray#
                             @ (Control.Monad.Primitive.PrimState
                                  (GHC.ST.ST GHC.Prim.RealWorld))
                             512#
                             s1
                               `cast`
                             (GHC.Prim.State#
                                (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                          <GHC.Prim.RealWorld>_N)))_R of ds1 { (#,#) ipv ipv1 ->
                      letrec {
                        $s$wfoldlM'_loop :: GHC.Prim.State# GHC.Prim.RealWorld
                                            -> GHC.Prim.Int#
                                            -> GHC.Prim.Int#
                                            -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                  GHC.Types.Int #)
                          {- Arity: 3, Strictness: <S,U><S,U><L,U> -}
                        = \ (sc :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot]
                            (sc1 :: GHC.Prim.Int#)
                            (sc2 :: GHC.Prim.Int#) ->
                          case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.<# sc1 64#) of wild2 {
                            GHC.Types.False -> (# sc, GHC.Types.I# sc2 #)
                            GHC.Types.True
                            -> case GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.>=# sc1 64#) of wild4 {
                                 GHC.Types.False
                                 -> let {
                                      ww3 :: GHC.Prim.Word# = GHC.Prim.uncheckedShiftL# 1## sc1
                                    } in
                                    let {
                                      ipv2 :: GHC.Prim.Word#
                                      = GHC.Prim.or#
                                          ww3
                                          (GHC.Prim.and#
                                             (GHC.Prim.and#
                                                (GHC.Prim.uncheckedShiftL# ww3 9#)
                                                18446744073709551615##)
                                             18374403900871474942##)
                                    } in
                                    let {
                                      ipv3 :: GHC.Prim.Word#
                                      = GHC.Prim.or#
                                          ipv2
                                          (GHC.Prim.and#
                                             (GHC.Prim.and#
                                                (GHC.Prim.uncheckedShiftL# ipv2 18#)
                                                18374403900871474688##)
                                             18229723555195321344##)
                                    } in
                                    let {
                                      ipv5 :: GHC.Prim.Word#
                                      = GHC.Prim.or#
                                          ww3
                                          (GHC.Prim.and#
                                             (GHC.Prim.and#
                                                (GHC.Prim.uncheckedShiftRL# ww3 7#)
                                                18446744073709551615##)
                                             18374403900871474942##)
                                    } in
                                    let {
                                      ipv6 :: GHC.Prim.Word#
                                      = GHC.Prim.or#
                                          ipv5
                                          (GHC.Prim.and#
                                             (GHC.Prim.and#
                                                (GHC.Prim.uncheckedShiftRL# ipv5 14#)
                                                71775015237779198##)
                                             71209857637481724##)
                                    } in
                                    let {
                                      ipv8 :: GHC.Prim.Word#
                                      = GHC.Prim.or#
                                          ww3
                                          (GHC.Prim.and#
                                             (GHC.Prim.and#
                                                (GHC.Prim.uncheckedShiftRL# ww3 9#)
                                                18446744073709551615##)
                                             9187201950435737471##)
                                    } in
                                    let {
                                      ipv9 :: GHC.Prim.Word#
                                      = GHC.Prim.or#
                                          ipv8
                                          (GHC.Prim.and#
                                             (GHC.Prim.and#
                                                (GHC.Prim.uncheckedShiftRL# ipv8 18#)
                                                35887507618889599##)
                                             17802464409370431##)
                                    } in
                                    let {
                                      ipv11 :: GHC.Prim.Word#
                                      = GHC.Prim.or#
                                          ww3
                                          (GHC.Prim.and#
                                             (GHC.Prim.and#
                                                (GHC.Prim.uncheckedShiftL# ww3 7#)
                                                18446744073709551615##)
                                             9187201950435737471##)
                                    } in
                                    let {
                                      ipv12 :: GHC.Prim.Word#
                                      = GHC.Prim.or#
                                          ipv11
                                          (GHC.Prim.and#
                                             (GHC.Prim.and#
                                                (GHC.Prim.uncheckedShiftL# ipv11 14#)
                                                9187201950435737344##)
                                             4557430888798830336##)
                                    } in
                                    case GHC.Prim.writeWord64Array#
                                           @ (Control.Monad.Primitive.PrimState
                                                (GHC.ST.ST GHC.Prim.RealWorld))
                                           ipv1
                                           sc2
                                           (GHC.Prim.and#
                                              (GHC.Prim.or#
                                                 (GHC.Prim.or#
                                                    (GHC.Prim.or#
                                                       (GHC.Prim.and#
                                                          (GHC.Prim.uncheckedShiftL#
                                                             (GHC.Prim.or#
                                                                ipv12
                                                                (GHC.Prim.and#
                                                                   (GHC.Prim.and#
                                                                      (GHC.Prim.uncheckedShiftL#
                                                                         ipv12
                                                                         28#)
                                                                      2242545357978337280##)
                                                                   1085102592570163200##))
                                                             7#)
                                                          9187201950435737471##)
                                                       (GHC.Prim.and#
                                                          (GHC.Prim.uncheckedShiftRL#
                                                             (GHC.Prim.or#
                                                                ipv9
                                                                (GHC.Prim.and#
                                                                   (GHC.Prim.and#
                                                                      (GHC.Prim.uncheckedShiftRL#
                                                                         ipv9
                                                                         36#)
                                                                      133666119455##)
                                                                   64677154575##))
                                                             9#)
                                                          9187201950435737471##))
                                                    (GHC.Prim.and#
                                                       (GHC.Prim.uncheckedShiftRL#
                                                          (GHC.Prim.or#
                                                             ipv6
                                                             (GHC.Prim.and#
                                                                (GHC.Prim.and#
                                                                   (GHC.Prim.uncheckedShiftRL#
                                                                      ipv6
                                                                      28#)
                                                                   1069328955640##)
                                                                1034834473200##))
                                                          7#)
                                                       18374403900871474942##))
                                                 (GHC.Prim.and#
                                                    (GHC.Prim.uncheckedShiftL#
                                                       (GHC.Prim.or#
                                                          ipv3
                                                          (GHC.Prim.and#
                                                             (GHC.Prim.and#
                                                                (GHC.Prim.uncheckedShiftL# ipv3 36#)
                                                                17940362863826698240##)
                                                             17361641481122611200##))
                                                       9#)
                                                    18374403900871474942##))
                                              35604928818740736##)
                                           sc
                                             `cast`
                                           (GHC.Prim.State#
                                              (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                        <GHC.Prim.RealWorld>_N)))_R of s'# { DEFAULT ->
                                    $s$wfoldlM'_loop
                                      s'#
                                        `cast`
                                      (GHC.Prim.State#
                                         (Control.Monad.Primitive.D:R:PrimStateST[0]
                                              <GHC.Prim.RealWorld>_N))_R
                                      (GHC.Prim.+# sc1 1#)
                                      (GHC.Prim.+# sc2 1#) }
                                 GHC.Types.True
                                 -> case GHC.Prim.writeWord64Array#
                                           @ (Control.Monad.Primitive.PrimState
                                                (GHC.ST.ST GHC.Prim.RealWorld))
                                           ipv1
                                           sc2
                                           0##
                                           sc
                                             `cast`
                                           (GHC.Prim.State#
                                              (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                        <GHC.Prim.RealWorld>_N)))_R of s'# { DEFAULT ->
                                    $s$wfoldlM'_loop
                                      s'#
                                        `cast`
                                      (GHC.Prim.State#
                                         (Control.Monad.Primitive.D:R:PrimStateST[0]
                                              <GHC.Prim.RealWorld>_N))_R
                                      (GHC.Prim.+# sc1 1#)
                                      (GHC.Prim.+# sc2 1#) } } }
                      } in
                      case $s$wfoldlM'_loop
                             ipv
                               `cast`
                             (GHC.Prim.State#
                                (Control.Monad.Primitive.D:R:PrimStateST[0]
                                     <GHC.Prim.RealWorld>_N))_R
                             0#
                             0# of ds2 { (#,#) ipv6 ipv7 ->
                      case ipv7 of dt3 { GHC.Types.I# dt4 ->
                      case GHC.Prim.unsafeFreezeByteArray#
                             @ (Control.Monad.Primitive.PrimState
                                  (GHC.ST.ST GHC.Prim.RealWorld))
                             ipv1
                             ipv6
                               `cast`
                             (GHC.Prim.State#
                                (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                          <GHC.Prim.RealWorld>_N)))_R of ds4 { (#,#) ipv2 ipv3 ->
                      (# ipv2
                           `cast`
                         (GHC.Prim.State#
                            (Control.Monad.Primitive.D:R:PrimStateST[0]
                                 <GHC.Prim.RealWorld>_N))_R,
                         (Data.Vector.Primitive.Vector @ GHC.Word.Word64 0# dt4 ipv3)
                           `cast`
                         (Trans
                              (Sym (Data.Vector.Unboxed.Base.N:R:VectorWord64[0]))
                              (Sym (Data.Vector.Unboxed.Base.D:R:VectorWord640[0]))) #) } } } }
                   GHC.Types.True
                   -> case GHC.Err.error
                             @ 'GHC.Types.PtrRepLifted
                             @ (GHC.ST.ST
                                  GHC.Prim.RealWorld
                                  (Data.Vector.Primitive.Mutable.MVector
                                     (Control.Monad.Primitive.PrimState
                                        (GHC.ST.ST GHC.Prim.RealWorld))
                                     GHC.Word.Word64))
                             AttackTable.bishopRelevantOccupancyTable4
                               `cast`
                             (Sym (GHC.Classes.N:IP[0]
                                       <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                             AttackTable.bishopRelevantOccupancyTable2
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                Data.Vector.Unboxed.Base.Vector Alias.AttackMap #)
                      of {} } }) -}
b199f43d9511650537d1f0fd667cd782
  bishopRelevantOccupancyTable10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Data.Vector.Primitive.Mutable"#) -}
5b531c2dd4d6ae295daf37f258d4be3c
  bishopRelevantOccupancyTable11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6"#) -}
f7b4bf734bec442a8f31473d89722af1
  bishopRelevantOccupancyTable12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "error"#) -}
a214c393ec8be39b36c9e5200a8e1b7a
  bishopRelevantOccupancyTable2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackAppendCString#
                   "Primitive.basicUnsafeNew: length to large: "#
                   AttackTable.bishopRelevantOccupancyTable3) -}
00ef977a239f06ad538c722a11f316aa
  bishopRelevantOccupancyTable3 :: [GHC.Types.Char]
  {- Unfolding: (case GHC.Show.$wshowSignedInt
                        0#
                        64#
                        (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                 GHC.Types.: @ GHC.Types.Char ww5 ww6 }) -}
0ac94a9c2b6c3988848e80ee8d5f1561
  bishopRelevantOccupancyTable4 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   AttackTable.bishopRelevantOccupancyTable12
                   AttackTable.bishopRelevantOccupancyTable5
                   GHC.Stack.Types.EmptyCallStack) -}
9da5c3029421a0932de448f6dea96581
  bishopRelevantOccupancyTable5 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   AttackTable.bishopRelevantOccupancyTable11
                   AttackTable.bishopRelevantOccupancyTable10
                   AttackTable.bishopRelevantOccupancyTable9
                   AttackTable.bishopRelevantOccupancyTable8
                   AttackTable.bishopRelevantOccupancyTable7
                   AttackTable.bishopRelevantOccupancyTable8
                   AttackTable.bishopRelevantOccupancyTable6) -}
f31f8153cb1916399e4253c48258c7b1
  bishopRelevantOccupancyTable6 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 79#) -}
80aa1cef361531853038b1d5be33ca5b
  bishopRelevantOccupancyTable7 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 16#) -}
15394ae8f480b6e9cb3ef00d07695140
  bishopRelevantOccupancyTable8 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 97#) -}
3f6c96299db8d7c1eaf244e2579113bb
  bishopRelevantOccupancyTable9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   ".\\Data\\Vector\\Primitive\\Mutable.hs"#) -}
ffbdfb21560da981d8aabd36428ab352
  bishopShift :: [GHC.Types.Int]
  {- Unfolding: (case AttackTable.bishopRelevantOccupancyTable
                        `cast`
                      (Trans
                           (Data.Vector.Unboxed.Base.D:R:VectorWord640[0])
                           (Data.Vector.Unboxed.Base.N:R:VectorWord64[0])) of nt { Data.Vector.Primitive.Vector ipv ipv1 ipv2 ->
                 letrec {
                   $wgo1 :: GHC.Prim.Int# -> [GHC.Types.Int]
                     {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                   = \ (ww :: GHC.Prim.Int#) ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.>=# ww ipv1) of wild {
                       GHC.Types.False
                       -> case GHC.Prim.indexWord64Array#
                                 ipv2
                                 (GHC.Prim.+# ipv ww) of wild1 { DEFAULT ->
                          GHC.Types.:
                            @ GHC.Types.Int
                            (GHC.Types.I#
                               (GHC.Prim.-# 64# (GHC.Prim.word2Int# (GHC.Prim.popCnt64# wild1))))
                            ($wgo1 (GHC.Prim.+# ww 1#)) }
                       GHC.Types.True -> GHC.Types.[] @ GHC.Types.Int }
                 } in
                 $wgo1 0# }) -}
b86df76dc8aa9e9e113e04957b67ea85
  bishopShiftTable :: Data.Vector.Unboxed.Base.Vector GHC.Types.Int
  {- Unfolding: (case GHC.Base.map
                        @ (GHC.Base.Maybe Alias.Magic)
                        @ (GHC.Types.Int -> GHC.Types.Int)
                        AttackTable.bishopShiftTable1
                        AttackTable.bishopBetterMagics of fs { DEFAULT ->
                 case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ (Data.Vector.Unboxed.Base.Vector GHC.Types.Int)
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Classes.divInt#
                                9223372036854775807#
                                8# of ww4 { DEFAULT ->
                         case GHC.Prim.tagToEnum#
                                @ GHC.Types.Bool
                                (GHC.Prim.># 0# ww4) of wild1 {
                           GHC.Types.False
                           -> case GHC.Prim.newByteArray#
                                     @ (Control.Monad.Primitive.PrimState
                                          (GHC.ST.ST GHC.Prim.RealWorld))
                                     0#
                                     s1
                                       `cast`
                                     (GHC.Prim.State#
                                        (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                  <GHC.Prim.RealWorld>_N)))_R of ds1 { (#,#) ipv ipv1 ->
                              case AttackTable.bishopShiftTable_$sfoldlM_loop
                                     ipv
                                       `cast`
                                     (GHC.Prim.State#
                                        (Control.Monad.Primitive.D:R:PrimStateST[0]
                                             <GHC.Prim.RealWorld>_N))_R
                                     (GHC.List.zipWith
                                        @ (GHC.Types.Int -> GHC.Types.Int)
                                        @ GHC.Types.Int
                                        @ GHC.Types.Int
                                        (GHC.Base.$
                                           @ 'GHC.Types.PtrRepLifted
                                           @ GHC.Types.Int
                                           @ GHC.Types.Int)
                                        fs
                                        AttackTable.bishopShift)
                                     0#
                                     0#
                                     ipv1
                                     @~ (Trans
                                             (Sym (Data.Vector.Unboxed.Base.N:R:MVectorsInt[0]
                                                       <Control.Monad.Primitive.PrimState
                                                          (GHC.ST.ST GHC.Prim.RealWorld)>_N))
                                             (Trans
                                                  (Sym (Data.Vector.Unboxed.Base.D:R:MVectorsInt0[0]
                                                            <Control.Monad.Primitive.PrimState
                                                               (GHC.ST.ST GHC.Prim.RealWorld)>_N))
                                                  (Sub (Sym (Data.Vector.Unboxed.Base.D:R:MutableVector[0])) <Control.Monad.Primitive.PrimState
                                                                                                                (GHC.ST.ST
                                                                                                                   GHC.Prim.RealWorld)>_N <GHC.Types.Int>_N)))
                                     0# of ds2 { (#,#) ipv6 ipv7 ->
                              case ipv7 of wild5 { (,) v' n ->
                              case v'
                                     `cast`
                                   (Trans
                                        (Sub (Data.Vector.Unboxed.Base.D:R:MutableVector[0]) <Control.Monad.Primitive.PrimState
                                                                                                (GHC.ST.ST
                                                                                                   GHC.Prim.RealWorld)>_N <GHC.Types.Int>_N)
                                        (Trans
                                             (Data.Vector.Unboxed.Base.D:R:MVectorsInt0[0]
                                                  <Control.Monad.Primitive.PrimState
                                                     (GHC.ST.ST GHC.Prim.RealWorld)>_N)
                                             (Data.Vector.Unboxed.Base.N:R:MVectorsInt[0]
                                                  <Control.Monad.Primitive.PrimState
                                                     (GHC.ST.ST
                                                        GHC.Prim.RealWorld)>_N))) of wild { Data.Vector.Primitive.Mutable.MVector dt dt1 dt2 ->
                              case n of dt3 { GHC.Types.I# dt4 ->
                              case GHC.Prim.unsafeFreezeByteArray#
                                     @ (Control.Monad.Primitive.PrimState
                                          (GHC.ST.ST GHC.Prim.RealWorld))
                                     dt2
                                     ipv6
                                       `cast`
                                     (GHC.Prim.State#
                                        (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                  <GHC.Prim.RealWorld>_N)))_R of ds4 { (#,#) ipv2 ipv3 ->
                              (# ipv2
                                   `cast`
                                 (GHC.Prim.State#
                                    (Control.Monad.Primitive.D:R:PrimStateST[0]
                                         <GHC.Prim.RealWorld>_N))_R,
                                 (Data.Vector.Primitive.Vector @ GHC.Types.Int dt dt4 ipv3)
                                   `cast`
                                 (Trans
                                      (Sym (Data.Vector.Unboxed.Base.N:R:VectorInt[0]))
                                      (Sym (Data.Vector.Unboxed.Base.D:R:VectorInt0[0]))) #) } } } } } }
                           GHC.Types.True
                           -> case GHC.Err.error
                                     @ 'GHC.Types.PtrRepLifted
                                     @ (GHC.ST.ST
                                          GHC.Prim.RealWorld
                                          (Data.Vector.Primitive.Mutable.MVector
                                             (Control.Monad.Primitive.PrimState
                                                (GHC.ST.ST GHC.Prim.RealWorld))
                                             GHC.Types.Int))
                                     AttackTable.bishopRelevantOccupancyTable4
                                       `cast`
                                     (Sym (GHC.Classes.N:IP[0]
                                               <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                                     AttackTable.bishopMagicTable2
                              ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                        Data.Vector.Unboxed.Base.Vector GHC.Types.Int #)
                              of {} } }) of ds1 { (#,#) ipv1 ipv2 ->
                 ipv2 } }) -}
c3e9cd4bf6319bc4cb0350284dd0116d
  bishopShiftTable1 ::
    GHC.Base.Maybe Alias.Magic -> GHC.Types.Int -> GHC.Types.Int
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (\ (ds1 :: GHC.Base.Maybe Alias.Magic)
                   (eta :: GHC.Types.Int) ->
                 case ds1 of wild {
                   GHC.Base.Nothing -> eta
                   GHC.Base.Just x
                   -> case eta of wild1 { GHC.Types.I# x1 ->
                      GHC.Types.I# (GHC.Prim.+# x1 1#) } }) -}
78bf6a3b65e2062812025e1043cdd285
  bishopShiftTable_$sfoldlM_loop ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> [GHC.Types.Int]
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.MutableByteArray#
         (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
    -> Data.Vector.Primitive.Mutable.MVector
         (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
         GHC.Types.Int
       ~R# Data.Vector.Generic.Base.Mutable
             Data.Vector.Unboxed.Base.Vector
             (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
             GHC.Types.Int =>
       GHC.Prim.Int#
       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
             (Data.Vector.Generic.Base.Mutable
                Data.Vector.Unboxed.Base.Vector
                (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
                GHC.Types.Int,
              GHC.Types.Int) #)
  {- Arity: 7, Strictness: <S,U><S,1*U><L,U><L,U><L,U><L,U><L,U> -}
36603f91bf044c17aba1f059471506fb
  blackPawnAttackTable ::
    Data.Vector.Unboxed.Base.Vector Alias.BitBoard
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ (Data.Vector.Unboxed.Base.Vector Alias.AttackMap)
                        AttackTable.blackPawnAttackTable1 of ds1 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
85e87401cc9613bb053796f8fa47a377
  blackPawnAttackTable1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Vector.Unboxed.Base.Vector Alias.AttackMap #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Classes.divInt#
                        9223372036854775807#
                        8# of ww4 { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.># 0# ww4) of wild1 {
                   GHC.Types.False
                   -> case GHC.Prim.newByteArray#
                             @ (Control.Monad.Primitive.PrimState
                                  (GHC.ST.ST GHC.Prim.RealWorld))
                             0#
                             s1
                               `cast`
                             (GHC.Prim.State#
                                (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                          <GHC.Prim.RealWorld>_N)))_R of ds1 { (#,#) ipv ipv1 ->
                      case AttackTable.blackPawnAttackTable_$sfoldlM_loop
                             ipv
                               `cast`
                             (GHC.Prim.State#
                                (Control.Monad.Primitive.D:R:PrimStateST[0]
                                     <GHC.Prim.RealWorld>_N))_R
                             AttackTable.blackPawnAttackTable2
                             0#
                             0#
                             ipv1
                             @~ (Trans
                                     (Sym (Data.Vector.Unboxed.Base.N:R:MVectorsWord64[0]
                                               <Control.Monad.Primitive.PrimState
                                                  (GHC.ST.ST GHC.Prim.RealWorld)>_N))
                                     (Trans
                                          (Sym (Data.Vector.Unboxed.Base.D:R:MVectorsWord640[0]
                                                    <Control.Monad.Primitive.PrimState
                                                       (GHC.ST.ST GHC.Prim.RealWorld)>_N))
                                          (Sub (Sym (Data.Vector.Unboxed.Base.D:R:MutableVector[0])) <Control.Monad.Primitive.PrimState
                                                                                                        (GHC.ST.ST
                                                                                                           GHC.Prim.RealWorld)>_N <GHC.Word.Word64>_N)))
                             0# of ds2 { (#,#) ipv6 ipv7 ->
                      case ipv7 of wild5 { (,) v' n ->
                      case v'
                             `cast`
                           (Trans
                                (Sub (Data.Vector.Unboxed.Base.D:R:MutableVector[0]) <Control.Monad.Primitive.PrimState
                                                                                        (GHC.ST.ST
                                                                                           GHC.Prim.RealWorld)>_N <GHC.Word.Word64>_N)
                                (Trans
                                     (Data.Vector.Unboxed.Base.D:R:MVectorsWord640[0]
                                          <Control.Monad.Primitive.PrimState
                                             (GHC.ST.ST GHC.Prim.RealWorld)>_N)
                                     (Data.Vector.Unboxed.Base.N:R:MVectorsWord64[0]
                                          <Control.Monad.Primitive.PrimState
                                             (GHC.ST.ST
                                                GHC.Prim.RealWorld)>_N))) of wild { Data.Vector.Primitive.Mutable.MVector dt dt1 dt2 ->
                      case n of dt3 { GHC.Types.I# dt4 ->
                      case GHC.Prim.unsafeFreezeByteArray#
                             @ (Control.Monad.Primitive.PrimState
                                  (GHC.ST.ST GHC.Prim.RealWorld))
                             dt2
                             ipv6
                               `cast`
                             (GHC.Prim.State#
                                (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                          <GHC.Prim.RealWorld>_N)))_R of ds4 { (#,#) ipv2 ipv3 ->
                      (# ipv2
                           `cast`
                         (GHC.Prim.State#
                            (Control.Monad.Primitive.D:R:PrimStateST[0]
                                 <GHC.Prim.RealWorld>_N))_R,
                         (Data.Vector.Primitive.Vector @ GHC.Word.Word64 dt dt4 ipv3)
                           `cast`
                         (Trans
                              (Sym (Data.Vector.Unboxed.Base.N:R:VectorWord64[0]))
                              (Sym (Data.Vector.Unboxed.Base.D:R:VectorWord640[0]))) #) } } } } } }
                   GHC.Types.True
                   -> case GHC.Err.error
                             @ 'GHC.Types.PtrRepLifted
                             @ (GHC.ST.ST
                                  GHC.Prim.RealWorld
                                  (Data.Vector.Primitive.Mutable.MVector
                                     (Control.Monad.Primitive.PrimState
                                        (GHC.ST.ST GHC.Prim.RealWorld))
                                     GHC.Word.Word64))
                             AttackTable.bishopRelevantOccupancyTable4
                               `cast`
                             (Sym (GHC.Classes.N:IP[0]
                                       <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                             AttackTable.bishopMagicTable2
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                Data.Vector.Unboxed.Base.Vector Alias.AttackMap #)
                      of {} } }) -}
d31d21d0897cb6458a73a02a4fd23ecd
  blackPawnAttackTable2 :: [GHC.Word.Word64]
  {- Unfolding: (AttackTable.blackPawnAttackTable_go 0#) -}
ff720127dac92eea16e3cf9d4f62583e
  blackPawnAttackTable_$sfoldlM_loop ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> [GHC.Word.Word64]
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.MutableByteArray#
         (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
    -> Data.Vector.Primitive.Mutable.MVector
         (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
         GHC.Word.Word64
       ~R# Data.Vector.Generic.Base.Mutable
             Data.Vector.Unboxed.Base.Vector
             (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
             GHC.Word.Word64 =>
       GHC.Prim.Int#
       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
             (Data.Vector.Generic.Base.Mutable
                Data.Vector.Unboxed.Base.Vector
                (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
                Alias.AttackMap,
              GHC.Types.Int) #)
  {- Arity: 7, Strictness: <S,U><S,1*U><L,U><L,U><L,U><L,U><L,U> -}
c5c03eb8dfb80418ed0ad4617d9a7b32
  blackPawnAttackTable_go :: GHC.Prim.Int# -> [GHC.Word.Word64]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
8de35413ae8cc94ecd930015876916a7
  kingAttack :: Alias.Square -> Alias.BitBoard
  {- Arity: 1, Strictness: <S(S),1*U(U)>m,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta1 :: GHC.Types.Int) ->
                 Data.Vector.Generic.!
                   @ Data.Vector.Unboxed.Base.Vector
                   @ Alias.BitBoard
                   Data.Vector.Unboxed.Base.$fVectorVectorWord64
                   AttackTable.kingAttackTable
                   eta1) -}
dc2e347ecdbc31da9dccf8294b4a4ded
  kingAttackTable :: Data.Vector.Unboxed.Base.Vector Alias.BitBoard
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ (Data.Vector.Unboxed.Base.Vector Alias.AttackMap)
                        AttackTable.kingAttackTable1 of ds1 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
89414656b1b781ee8e9d16e8c81368e0
  kingAttackTable1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Vector.Unboxed.Base.Vector Alias.AttackMap #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Classes.divInt#
                        9223372036854775807#
                        8# of ww4 { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.># 0# ww4) of wild1 {
                   GHC.Types.False
                   -> case GHC.Prim.newByteArray#
                             @ (Control.Monad.Primitive.PrimState
                                  (GHC.ST.ST GHC.Prim.RealWorld))
                             0#
                             s1
                               `cast`
                             (GHC.Prim.State#
                                (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                          <GHC.Prim.RealWorld>_N)))_R of ds1 { (#,#) ipv ipv1 ->
                      case AttackTable.kingAttackTable_$sfoldlM_loop
                             ipv
                               `cast`
                             (GHC.Prim.State#
                                (Control.Monad.Primitive.D:R:PrimStateST[0]
                                     <GHC.Prim.RealWorld>_N))_R
                             AttackTable.kingAttackTable2
                             0#
                             0#
                             ipv1
                             @~ (Trans
                                     (Sym (Data.Vector.Unboxed.Base.N:R:MVectorsWord64[0]
                                               <Control.Monad.Primitive.PrimState
                                                  (GHC.ST.ST GHC.Prim.RealWorld)>_N))
                                     (Trans
                                          (Sym (Data.Vector.Unboxed.Base.D:R:MVectorsWord640[0]
                                                    <Control.Monad.Primitive.PrimState
                                                       (GHC.ST.ST GHC.Prim.RealWorld)>_N))
                                          (Sub (Sym (Data.Vector.Unboxed.Base.D:R:MutableVector[0])) <Control.Monad.Primitive.PrimState
                                                                                                        (GHC.ST.ST
                                                                                                           GHC.Prim.RealWorld)>_N <GHC.Word.Word64>_N)))
                             0# of ds2 { (#,#) ipv6 ipv7 ->
                      case ipv7 of wild5 { (,) v' n ->
                      case v'
                             `cast`
                           (Trans
                                (Sub (Data.Vector.Unboxed.Base.D:R:MutableVector[0]) <Control.Monad.Primitive.PrimState
                                                                                        (GHC.ST.ST
                                                                                           GHC.Prim.RealWorld)>_N <GHC.Word.Word64>_N)
                                (Trans
                                     (Data.Vector.Unboxed.Base.D:R:MVectorsWord640[0]
                                          <Control.Monad.Primitive.PrimState
                                             (GHC.ST.ST GHC.Prim.RealWorld)>_N)
                                     (Data.Vector.Unboxed.Base.N:R:MVectorsWord64[0]
                                          <Control.Monad.Primitive.PrimState
                                             (GHC.ST.ST
                                                GHC.Prim.RealWorld)>_N))) of wild { Data.Vector.Primitive.Mutable.MVector dt dt1 dt2 ->
                      case n of dt3 { GHC.Types.I# dt4 ->
                      case GHC.Prim.unsafeFreezeByteArray#
                             @ (Control.Monad.Primitive.PrimState
                                  (GHC.ST.ST GHC.Prim.RealWorld))
                             dt2
                             ipv6
                               `cast`
                             (GHC.Prim.State#
                                (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                          <GHC.Prim.RealWorld>_N)))_R of ds4 { (#,#) ipv2 ipv3 ->
                      (# ipv2
                           `cast`
                         (GHC.Prim.State#
                            (Control.Monad.Primitive.D:R:PrimStateST[0]
                                 <GHC.Prim.RealWorld>_N))_R,
                         (Data.Vector.Primitive.Vector @ GHC.Word.Word64 dt dt4 ipv3)
                           `cast`
                         (Trans
                              (Sym (Data.Vector.Unboxed.Base.N:R:VectorWord64[0]))
                              (Sym (Data.Vector.Unboxed.Base.D:R:VectorWord640[0]))) #) } } } } } }
                   GHC.Types.True
                   -> case GHC.Err.error
                             @ 'GHC.Types.PtrRepLifted
                             @ (GHC.ST.ST
                                  GHC.Prim.RealWorld
                                  (Data.Vector.Primitive.Mutable.MVector
                                     (Control.Monad.Primitive.PrimState
                                        (GHC.ST.ST GHC.Prim.RealWorld))
                                     GHC.Word.Word64))
                             AttackTable.bishopRelevantOccupancyTable4
                               `cast`
                             (Sym (GHC.Classes.N:IP[0]
                                       <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                             AttackTable.bishopMagicTable2
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                Data.Vector.Unboxed.Base.Vector Alias.AttackMap #)
                      of {} } }) -}
0377e3fd40161248a8252dbc75bafcfa
  kingAttackTable2 :: [GHC.Word.Word64]
  {- Unfolding: (AttackTable.kingAttackTable_go 0#) -}
201d329e9f3c9aecc54964991682f4d5
  kingAttackTable_$sfoldlM_loop ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> [GHC.Word.Word64]
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.MutableByteArray#
         (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
    -> Data.Vector.Primitive.Mutable.MVector
         (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
         GHC.Word.Word64
       ~R# Data.Vector.Generic.Base.Mutable
             Data.Vector.Unboxed.Base.Vector
             (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
             GHC.Word.Word64 =>
       GHC.Prim.Int#
       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
             (Data.Vector.Generic.Base.Mutable
                Data.Vector.Unboxed.Base.Vector
                (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
                Alias.AttackMap,
              GHC.Types.Int) #)
  {- Arity: 7, Strictness: <S,U><S,1*U><L,U><L,U><L,U><L,U><L,U> -}
d06ddf02b5d1ff09f5b3ea270a290592
  kingAttackTable_go :: GHC.Prim.Int# -> [GHC.Word.Word64]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
741f0fa16bbcd6bdf293a4bfcde44d6a
  knightAttack :: Alias.Square -> Alias.BitBoard
  {- Arity: 1, Strictness: <S(S),1*U(U)>m,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta1 :: GHC.Types.Int) ->
                 Data.Vector.Generic.!
                   @ Data.Vector.Unboxed.Base.Vector
                   @ Alias.BitBoard
                   Data.Vector.Unboxed.Base.$fVectorVectorWord64
                   AttackTable.knightAttackTable
                   eta1) -}
3e6050d4b6ee3a4917a623d293141a79
  knightAttackTable :: Data.Vector.Unboxed.Base.Vector Alias.BitBoard
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ (Data.Vector.Unboxed.Base.Vector Alias.AttackMap)
                        AttackTable.knightAttackTable1 of ds1 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
acb9c7c56722bcf4620a0b7f53771c8f
  knightAttackTable1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Vector.Unboxed.Base.Vector Alias.AttackMap #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Classes.divInt#
                        9223372036854775807#
                        8# of ww4 { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.># 0# ww4) of wild1 {
                   GHC.Types.False
                   -> case GHC.Prim.newByteArray#
                             @ (Control.Monad.Primitive.PrimState
                                  (GHC.ST.ST GHC.Prim.RealWorld))
                             0#
                             s1
                               `cast`
                             (GHC.Prim.State#
                                (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                          <GHC.Prim.RealWorld>_N)))_R of ds1 { (#,#) ipv ipv1 ->
                      case AttackTable.knightAttackTable_$sfoldlM_loop
                             ipv
                               `cast`
                             (GHC.Prim.State#
                                (Control.Monad.Primitive.D:R:PrimStateST[0]
                                     <GHC.Prim.RealWorld>_N))_R
                             AttackTable.knightAttackTable2
                             0#
                             0#
                             ipv1
                             @~ (Trans
                                     (Sym (Data.Vector.Unboxed.Base.N:R:MVectorsWord64[0]
                                               <Control.Monad.Primitive.PrimState
                                                  (GHC.ST.ST GHC.Prim.RealWorld)>_N))
                                     (Trans
                                          (Sym (Data.Vector.Unboxed.Base.D:R:MVectorsWord640[0]
                                                    <Control.Monad.Primitive.PrimState
                                                       (GHC.ST.ST GHC.Prim.RealWorld)>_N))
                                          (Sub (Sym (Data.Vector.Unboxed.Base.D:R:MutableVector[0])) <Control.Monad.Primitive.PrimState
                                                                                                        (GHC.ST.ST
                                                                                                           GHC.Prim.RealWorld)>_N <GHC.Word.Word64>_N)))
                             0# of ds2 { (#,#) ipv6 ipv7 ->
                      case ipv7 of wild5 { (,) v' n ->
                      case v'
                             `cast`
                           (Trans
                                (Sub (Data.Vector.Unboxed.Base.D:R:MutableVector[0]) <Control.Monad.Primitive.PrimState
                                                                                        (GHC.ST.ST
                                                                                           GHC.Prim.RealWorld)>_N <GHC.Word.Word64>_N)
                                (Trans
                                     (Data.Vector.Unboxed.Base.D:R:MVectorsWord640[0]
                                          <Control.Monad.Primitive.PrimState
                                             (GHC.ST.ST GHC.Prim.RealWorld)>_N)
                                     (Data.Vector.Unboxed.Base.N:R:MVectorsWord64[0]
                                          <Control.Monad.Primitive.PrimState
                                             (GHC.ST.ST
                                                GHC.Prim.RealWorld)>_N))) of wild { Data.Vector.Primitive.Mutable.MVector dt dt1 dt2 ->
                      case n of dt3 { GHC.Types.I# dt4 ->
                      case GHC.Prim.unsafeFreezeByteArray#
                             @ (Control.Monad.Primitive.PrimState
                                  (GHC.ST.ST GHC.Prim.RealWorld))
                             dt2
                             ipv6
                               `cast`
                             (GHC.Prim.State#
                                (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                          <GHC.Prim.RealWorld>_N)))_R of ds4 { (#,#) ipv2 ipv3 ->
                      (# ipv2
                           `cast`
                         (GHC.Prim.State#
                            (Control.Monad.Primitive.D:R:PrimStateST[0]
                                 <GHC.Prim.RealWorld>_N))_R,
                         (Data.Vector.Primitive.Vector @ GHC.Word.Word64 dt dt4 ipv3)
                           `cast`
                         (Trans
                              (Sym (Data.Vector.Unboxed.Base.N:R:VectorWord64[0]))
                              (Sym (Data.Vector.Unboxed.Base.D:R:VectorWord640[0]))) #) } } } } } }
                   GHC.Types.True
                   -> case GHC.Err.error
                             @ 'GHC.Types.PtrRepLifted
                             @ (GHC.ST.ST
                                  GHC.Prim.RealWorld
                                  (Data.Vector.Primitive.Mutable.MVector
                                     (Control.Monad.Primitive.PrimState
                                        (GHC.ST.ST GHC.Prim.RealWorld))
                                     GHC.Word.Word64))
                             AttackTable.bishopRelevantOccupancyTable4
                               `cast`
                             (Sym (GHC.Classes.N:IP[0]
                                       <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                             AttackTable.bishopMagicTable2
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                Data.Vector.Unboxed.Base.Vector Alias.AttackMap #)
                      of {} } }) -}
5f223d196ba130fed53dca546286b823
  knightAttackTable2 :: [GHC.Word.Word64]
  {- Unfolding: (AttackTable.knightAttackTable_go 0#) -}
eddebad72fc458d177f4de2f65ca518f
  knightAttackTable_$sfoldlM_loop ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> [GHC.Word.Word64]
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.MutableByteArray#
         (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
    -> Data.Vector.Primitive.Mutable.MVector
         (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
         GHC.Word.Word64
       ~R# Data.Vector.Generic.Base.Mutable
             Data.Vector.Unboxed.Base.Vector
             (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
             GHC.Word.Word64 =>
       GHC.Prim.Int#
       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
             (Data.Vector.Generic.Base.Mutable
                Data.Vector.Unboxed.Base.Vector
                (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
                Alias.AttackMap,
              GHC.Types.Int) #)
  {- Arity: 7, Strictness: <S,U><S,1*U><L,U><L,U><L,U><L,U><L,U> -}
36548e3556e9c351bac58d80bc709b5a
  knightAttackTable_go :: GHC.Prim.Int# -> [GHC.Word.Word64]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
640edbb37a2b657940c1503aa7fc6cab
  pawnAttack :: BasicData.Color -> Alias.Square -> Alias.BitBoard
  {- Arity: 2, Strictness: <S,1*U><S(S),1*U(U)>m,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ (ds :: BasicData.Color) (eta :: Alias.Square) ->
                 case ds of wild {
                   BasicData.White
                   -> Data.Vector.Generic.!
                        @ Data.Vector.Unboxed.Base.Vector
                        @ Alias.BitBoard
                        Data.Vector.Unboxed.Base.$fVectorVectorWord64
                        AttackTable.whitePawnAttackTable
                        eta
                   BasicData.Black
                   -> Data.Vector.Generic.!
                        @ Data.Vector.Unboxed.Base.Vector
                        @ Alias.BitBoard
                        Data.Vector.Unboxed.Base.$fVectorVectorWord64
                        AttackTable.blackPawnAttackTable
                        eta }) -}
1556ec68e8924ec662d523833debe740
  pieceAttack ::
    BasicData.PieceType
    -> Alias.Occupancy -> Alias.Square -> Alias.BitBoard
  {- Arity: 3, Strictness: <S,1*U><S,1*U(U)><S(S),1*U(U)>m,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (ds :: BasicData.PieceType)
                   (ds1 :: Alias.Occupancy)
                   (eta :: Alias.Square) ->
                 case ds of wild {
                   BasicData.Pawn
                   -> case Control.Exception.Base.patError
                             @ 'GHC.Types.PtrRepLifted
                             @ (Alias.Square -> Alias.BitBoard)
                             "src\\Foundation\\AttackTable.hs:(18,1)-(22,36)|function pieceAttack"#
                      ret_ty Alias.BitBoard
                      of {}
                   BasicData.Knight
                   -> case ds1 of ds2 { GHC.Word.W64# ipv ->
                      Data.Vector.Generic.!
                        @ Data.Vector.Unboxed.Base.Vector
                        @ Alias.BitBoard
                        Data.Vector.Unboxed.Base.$fVectorVectorWord64
                        AttackTable.knightAttackTable
                        eta }
                   BasicData.Bishop
                   -> case ds1 of ds2 { GHC.Word.W64# ipv ->
                      case eta of square { GHC.Types.I# ipv1 ->
                      case Data.Vector.Generic.!
                             @ Data.Vector.Unboxed.Base.Vector
                             @ GHC.Types.Int
                             Data.Vector.Unboxed.Base.$fVectorVectorInt
                             AttackTable.bishopShiftTable
                             square of distance { GHC.Types.I# ipv2 ->
                      case Data.Vector.Generic.!
                             @ Data.Vector.Unboxed.Base.Vector
                             @ Alias.Magic
                             Data.Vector.Unboxed.Base.$fVectorVectorWord64
                             AttackTable.bishopMagicTable
                             square of magic { GHC.Word.W64# ipv3 ->
                      case Data.Vector.Generic.!
                             @ Data.Vector.Unboxed.Base.Vector
                             @ Alias.Occupancy
                             Data.Vector.Unboxed.Base.$fVectorVectorWord64
                             AttackTable.bishopRelevantOccupancyTable
                             square of relOcc { GHC.Word.W64# ipv4 ->
                      case GHC.Base.$
                             @ 'GHC.Types.PtrRepLifted
                             @ Alias.Occupancy
                             @ GHC.Types.Int
                             (\ (ds3 :: GHC.Word.Word64) ->
                              case ds3 of wild1 { GHC.Word.W64# x# ->
                              GHC.Types.I# (GHC.Prim.word2Int# x#) })
                             (GHC.Word.$fBitsWord64_$cshiftR
                                (GHC.Word.$fNumWord64_$c*
                                   (GHC.Word.$fBitsWord64_$c.&. ds2 relOcc)
                                   magic)
                                distance) of ix { GHC.Types.I# ipv5 ->
                      case Data.Vector.Generic.!
                             @ Data.Vector.Vector
                             @ (Data.Array.Base.UArray GHC.Types.Int Alias.BitBoard)
                             (Data.Vector.$fVectorVectora
                                @ (Data.Array.Base.UArray GHC.Types.Int Alias.BitBoard))
                             AttackTable.bishopAttackTable
                             square of wild1 { Data.Array.Base.UArray l u dt ds3 ->
                      GHC.Base.$
                        @ 'GHC.Types.PtrRepLifted
                        @ GHC.Types.Int
                        @ Alias.BitBoard
                        (\ (ds4 :: GHC.Types.Int) ->
                         case ds4 of wild2 { GHC.Types.I# i# ->
                         case GHC.Prim.indexWord64Array# ds3 i# of wild3 { DEFAULT ->
                         GHC.Word.W64# wild3 } })
                        (let {
                           n :: GHC.Types.Int = GHC.Types.I# dt
                         } in
                         let {
                           i' :: GHC.Types.Int
                           = case l of wild2 { GHC.Types.I# m ->
                             case u of wild3 { GHC.Types.I# n1 ->
                             case GHC.Classes.&&
                                    (GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.<=# m ipv5))
                                    (GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.<=# ipv5 n1)) of wild4 {
                               GHC.Types.False
                               -> GHC.Arr.indexError
                                    @ GHC.Types.Int
                                    @ GHC.Types.Int
                                    GHC.Show.$fShowInt
                                    (wild2, wild3)
                                    ix
                                    (GHC.Base.build
                                       @ GHC.Types.Char
                                       (\ @ b1 -> GHC.CString.unpackFoldrCString# @ b1 "Int"#))
                               GHC.Types.True -> GHC.Num.$fNumInt_$c- ix wild2 } } }
                         } in
                         case GHC.Classes.&&
                                (GHC.Classes.leInt (GHC.Types.I# 0#) i')
                                (GHC.Classes.ltInt i' n) of wild2 {
                           GHC.Types.False
                           -> GHC.Err.error
                                @ 'GHC.Types.PtrRepLifted
                                @ GHC.Types.Int
                                (GHC.Stack.Types.PushCallStack
                                   (GHC.Base.build
                                      @ GHC.Types.Char
                                      (\ @ b -> GHC.CString.unpackFoldrCString# @ b "error"#))
                                   (GHC.Stack.Types.SrcLoc
                                      (GHC.Base.build
                                         @ GHC.Types.Char
                                         (\ @ b ->
                                          GHC.CString.unpackFoldrCString# @ b "array-0.5.1.1"#))
                                      (GHC.Base.build
                                         @ GHC.Types.Char
                                         (\ @ b ->
                                          GHC.CString.unpackFoldrCString# @ b "Data.Array.Base"#))
                                      (GHC.Base.build
                                         @ GHC.Types.Char
                                         (\ @ b ->
                                          GHC.CString.unpackFoldrCString#
                                            @ b
                                            "libraries\\array\\Data\\Array\\Base.hs"#))
                                      (GHC.Types.I# 87#)
                                      (GHC.Types.I# 31#)
                                      (GHC.Types.I# 88#)
                                      (GHC.Types.I# 76#))
                                   GHC.Stack.Types.EmptyCallStack)
                                  `cast`
                                (Sym (GHC.Classes.N:IP[0]
                                          <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                                (GHC.Base.build
                                   @ GHC.Types.Char
                                   (\ @ b
                                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                                      (n1 :: b)[OneShot] ->
                                    GHC.CString.unpackFoldrCString#
                                      @ b
                                      "Error in array index; "#
                                      c
                                      (GHC.Base.foldr
                                         @ GHC.Types.Char
                                         @ b
                                         c
                                         (GHC.CString.unpackFoldrCString#
                                            @ b
                                            " not in range [0.."#
                                            c
                                            (GHC.Base.foldr
                                               @ GHC.Types.Char
                                               @ b
                                               c
                                               (GHC.CString.unpackFoldrCString# @ b ")"# c n1)
                                               (GHC.Show.$fShowInt_$cshow n)))
                                         (GHC.Show.$fShowInt_$cshow i'))))
                           GHC.Types.True -> i' }) } } } } } } }
                   BasicData.Rook
                   -> case ds1 of ds2 { GHC.Word.W64# ipv ->
                      case eta of square { GHC.Types.I# ipv1 ->
                      case Data.Vector.Generic.!
                             @ Data.Vector.Unboxed.Base.Vector
                             @ GHC.Types.Int
                             Data.Vector.Unboxed.Base.$fVectorVectorInt
                             AttackTable.rookShiftTable
                             square of distance { GHC.Types.I# ipv2 ->
                      case Data.Vector.Generic.!
                             @ Data.Vector.Unboxed.Base.Vector
                             @ Alias.Magic
                             Data.Vector.Unboxed.Base.$fVectorVectorWord64
                             AttackTable.rookMagicTable
                             square of magic { GHC.Word.W64# ipv3 ->
                      case Data.Vector.Generic.!
                             @ Data.Vector.Unboxed.Base.Vector
                             @ Alias.Occupancy
                             Data.Vector.Unboxed.Base.$fVectorVectorWord64
                             AttackTable.rookRelevantOccupancyTable
                             square of relOcc { GHC.Word.W64# ipv4 ->
                      case GHC.Base.$
                             @ 'GHC.Types.PtrRepLifted
                             @ Alias.Occupancy
                             @ GHC.Types.Int
                             (\ (ds3 :: GHC.Word.Word64) ->
                              case ds3 of wild1 { GHC.Word.W64# x# ->
                              GHC.Types.I# (GHC.Prim.word2Int# x#) })
                             (GHC.Word.$fBitsWord64_$cshiftR
                                (GHC.Word.$fNumWord64_$c*
                                   (GHC.Word.$fBitsWord64_$c.&. ds2 relOcc)
                                   magic)
                                distance) of ix { GHC.Types.I# ipv5 ->
                      case Data.Vector.Generic.!
                             @ Data.Vector.Vector
                             @ (Data.Array.Base.UArray GHC.Types.Int Alias.BitBoard)
                             (Data.Vector.$fVectorVectora
                                @ (Data.Array.Base.UArray GHC.Types.Int Alias.BitBoard))
                             AttackTable.rookAttackTable
                             square of wild1 { Data.Array.Base.UArray l u dt ds3 ->
                      GHC.Base.$
                        @ 'GHC.Types.PtrRepLifted
                        @ GHC.Types.Int
                        @ Alias.BitBoard
                        (\ (ds4 :: GHC.Types.Int) ->
                         case ds4 of wild2 { GHC.Types.I# i# ->
                         case GHC.Prim.indexWord64Array# ds3 i# of wild3 { DEFAULT ->
                         GHC.Word.W64# wild3 } })
                        (let {
                           n :: GHC.Types.Int = GHC.Types.I# dt
                         } in
                         let {
                           i' :: GHC.Types.Int
                           = case l of wild2 { GHC.Types.I# m ->
                             case u of wild3 { GHC.Types.I# n1 ->
                             case GHC.Classes.&&
                                    (GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.<=# m ipv5))
                                    (GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.<=# ipv5 n1)) of wild4 {
                               GHC.Types.False
                               -> GHC.Arr.indexError
                                    @ GHC.Types.Int
                                    @ GHC.Types.Int
                                    GHC.Show.$fShowInt
                                    (wild2, wild3)
                                    ix
                                    (GHC.Base.build
                                       @ GHC.Types.Char
                                       (\ @ b1 -> GHC.CString.unpackFoldrCString# @ b1 "Int"#))
                               GHC.Types.True -> GHC.Num.$fNumInt_$c- ix wild2 } } }
                         } in
                         case GHC.Classes.&&
                                (GHC.Classes.leInt (GHC.Types.I# 0#) i')
                                (GHC.Classes.ltInt i' n) of wild2 {
                           GHC.Types.False
                           -> GHC.Err.error
                                @ 'GHC.Types.PtrRepLifted
                                @ GHC.Types.Int
                                (GHC.Stack.Types.PushCallStack
                                   (GHC.Base.build
                                      @ GHC.Types.Char
                                      (\ @ b -> GHC.CString.unpackFoldrCString# @ b "error"#))
                                   (GHC.Stack.Types.SrcLoc
                                      (GHC.Base.build
                                         @ GHC.Types.Char
                                         (\ @ b ->
                                          GHC.CString.unpackFoldrCString# @ b "array-0.5.1.1"#))
                                      (GHC.Base.build
                                         @ GHC.Types.Char
                                         (\ @ b ->
                                          GHC.CString.unpackFoldrCString# @ b "Data.Array.Base"#))
                                      (GHC.Base.build
                                         @ GHC.Types.Char
                                         (\ @ b ->
                                          GHC.CString.unpackFoldrCString#
                                            @ b
                                            "libraries\\array\\Data\\Array\\Base.hs"#))
                                      (GHC.Types.I# 87#)
                                      (GHC.Types.I# 31#)
                                      (GHC.Types.I# 88#)
                                      (GHC.Types.I# 76#))
                                   GHC.Stack.Types.EmptyCallStack)
                                  `cast`
                                (Sym (GHC.Classes.N:IP[0]
                                          <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                                (GHC.Base.build
                                   @ GHC.Types.Char
                                   (\ @ b
                                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                                      (n1 :: b)[OneShot] ->
                                    GHC.CString.unpackFoldrCString#
                                      @ b
                                      "Error in array index; "#
                                      c
                                      (GHC.Base.foldr
                                         @ GHC.Types.Char
                                         @ b
                                         c
                                         (GHC.CString.unpackFoldrCString#
                                            @ b
                                            " not in range [0.."#
                                            c
                                            (GHC.Base.foldr
                                               @ GHC.Types.Char
                                               @ b
                                               c
                                               (GHC.CString.unpackFoldrCString# @ b ")"# c n1)
                                               (GHC.Show.$fShowInt_$cshow n)))
                                         (GHC.Show.$fShowInt_$cshow i'))))
                           GHC.Types.True -> i' }) } } } } } } }
                   BasicData.Queen
                   -> case ds1 of ds2 { GHC.Word.W64# ipv ->
                      case eta of square { GHC.Types.I# ipv1 ->
                      case Data.Vector.Generic.!
                             @ Data.Vector.Unboxed.Base.Vector
                             @ GHC.Types.Int
                             Data.Vector.Unboxed.Base.$fVectorVectorInt
                             AttackTable.bishopShiftTable
                             square of distance { GHC.Types.I# ipv2 ->
                      case Data.Vector.Generic.!
                             @ Data.Vector.Unboxed.Base.Vector
                             @ Alias.Magic
                             Data.Vector.Unboxed.Base.$fVectorVectorWord64
                             AttackTable.bishopMagicTable
                             square of magic { GHC.Word.W64# ipv3 ->
                      case Data.Vector.Generic.!
                             @ Data.Vector.Unboxed.Base.Vector
                             @ Alias.Occupancy
                             Data.Vector.Unboxed.Base.$fVectorVectorWord64
                             AttackTable.bishopRelevantOccupancyTable
                             square of relOcc { GHC.Word.W64# ipv4 ->
                      case GHC.Base.$
                             @ 'GHC.Types.PtrRepLifted
                             @ Alias.Occupancy
                             @ GHC.Types.Int
                             (\ (ds3 :: GHC.Word.Word64) ->
                              case ds3 of wild1 { GHC.Word.W64# x# ->
                              GHC.Types.I# (GHC.Prim.word2Int# x#) })
                             (GHC.Word.$fBitsWord64_$cshiftR
                                (GHC.Word.$fNumWord64_$c*
                                   (GHC.Word.$fBitsWord64_$c.&. ds2 relOcc)
                                   magic)
                                distance) of ix { GHC.Types.I# ipv5 ->
                      case Data.Vector.Generic.!
                             @ Data.Vector.Vector
                             @ (Data.Array.Base.UArray GHC.Types.Int Alias.BitBoard)
                             (Data.Vector.$fVectorVectora
                                @ (Data.Array.Base.UArray GHC.Types.Int Alias.BitBoard))
                             AttackTable.bishopAttackTable
                             square of wild1 { Data.Array.Base.UArray l u dt ds3 ->
                      case Data.Vector.Generic.!
                             @ Data.Vector.Unboxed.Base.Vector
                             @ GHC.Types.Int
                             Data.Vector.Unboxed.Base.$fVectorVectorInt
                             AttackTable.rookShiftTable
                             square of distance1 { GHC.Types.I# ipv6 ->
                      case Data.Vector.Generic.!
                             @ Data.Vector.Unboxed.Base.Vector
                             @ Alias.Magic
                             Data.Vector.Unboxed.Base.$fVectorVectorWord64
                             AttackTable.rookMagicTable
                             square of magic1 { GHC.Word.W64# ipv7 ->
                      case Data.Vector.Generic.!
                             @ Data.Vector.Unboxed.Base.Vector
                             @ Alias.Occupancy
                             Data.Vector.Unboxed.Base.$fVectorVectorWord64
                             AttackTable.rookRelevantOccupancyTable
                             square of relOcc1 { GHC.Word.W64# ipv8 ->
                      case GHC.Base.$
                             @ 'GHC.Types.PtrRepLifted
                             @ Alias.Occupancy
                             @ GHC.Types.Int
                             (\ (ds4 :: GHC.Word.Word64) ->
                              case ds4 of wild2 { GHC.Word.W64# x# ->
                              GHC.Types.I# (GHC.Prim.word2Int# x#) })
                             (GHC.Word.$fBitsWord64_$cshiftR
                                (GHC.Word.$fNumWord64_$c*
                                   (GHC.Word.$fBitsWord64_$c.&. ds2 relOcc1)
                                   magic1)
                                distance1) of ix1 { GHC.Types.I# ipv9 ->
                      case Data.Vector.Generic.!
                             @ Data.Vector.Vector
                             @ (Data.Array.Base.UArray GHC.Types.Int Alias.BitBoard)
                             (Data.Vector.$fVectorVectora
                                @ (Data.Array.Base.UArray GHC.Types.Int Alias.BitBoard))
                             AttackTable.rookAttackTable
                             square of wild2 { Data.Array.Base.UArray l1 u1 dt1 ds4 ->
                      GHC.Word.$fBitsWord64_$c.|.
                        (GHC.Base.$
                           @ 'GHC.Types.PtrRepLifted
                           @ GHC.Types.Int
                           @ Alias.BitBoard
                           (\ (ds5 :: GHC.Types.Int) ->
                            case ds5 of wild3 { GHC.Types.I# i# ->
                            case GHC.Prim.indexWord64Array# ds3 i# of wild4 { DEFAULT ->
                            GHC.Word.W64# wild4 } })
                           (let {
                              n :: GHC.Types.Int = GHC.Types.I# dt
                            } in
                            let {
                              i' :: GHC.Types.Int
                              = case l of wild3 { GHC.Types.I# m ->
                                case u of wild4 { GHC.Types.I# n1 ->
                                case GHC.Classes.&&
                                       (GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.<=# m ipv5))
                                       (GHC.Prim.tagToEnum#
                                          @ GHC.Types.Bool
                                          (GHC.Prim.<=# ipv5 n1)) of wild5 {
                                  GHC.Types.False
                                  -> GHC.Arr.indexError
                                       @ GHC.Types.Int
                                       @ GHC.Types.Int
                                       GHC.Show.$fShowInt
                                       (wild3, wild4)
                                       ix
                                       (GHC.Base.build
                                          @ GHC.Types.Char
                                          (\ @ b1 -> GHC.CString.unpackFoldrCString# @ b1 "Int"#))
                                  GHC.Types.True -> GHC.Num.$fNumInt_$c- ix wild3 } } }
                            } in
                            case GHC.Classes.&&
                                   (GHC.Classes.leInt (GHC.Types.I# 0#) i')
                                   (GHC.Classes.ltInt i' n) of wild3 {
                              GHC.Types.False
                              -> GHC.Err.error
                                   @ 'GHC.Types.PtrRepLifted
                                   @ GHC.Types.Int
                                   (GHC.Stack.Types.PushCallStack
                                      (GHC.Base.build
                                         @ GHC.Types.Char
                                         (\ @ b -> GHC.CString.unpackFoldrCString# @ b "error"#))
                                      (GHC.Stack.Types.SrcLoc
                                         (GHC.Base.build
                                            @ GHC.Types.Char
                                            (\ @ b ->
                                             GHC.CString.unpackFoldrCString# @ b "array-0.5.1.1"#))
                                         (GHC.Base.build
                                            @ GHC.Types.Char
                                            (\ @ b ->
                                             GHC.CString.unpackFoldrCString#
                                               @ b
                                               "Data.Array.Base"#))
                                         (GHC.Base.build
                                            @ GHC.Types.Char
                                            (\ @ b ->
                                             GHC.CString.unpackFoldrCString#
                                               @ b
                                               "libraries\\array\\Data\\Array\\Base.hs"#))
                                         (GHC.Types.I# 87#)
                                         (GHC.Types.I# 31#)
                                         (GHC.Types.I# 88#)
                                         (GHC.Types.I# 76#))
                                      GHC.Stack.Types.EmptyCallStack)
                                     `cast`
                                   (Sym (GHC.Classes.N:IP[0]
                                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                                   (GHC.Base.build
                                      @ GHC.Types.Char
                                      (\ @ b
                                         (c :: GHC.Types.Char -> b -> b)[OneShot]
                                         (n1 :: b)[OneShot] ->
                                       GHC.CString.unpackFoldrCString#
                                         @ b
                                         "Error in array index; "#
                                         c
                                         (GHC.Base.foldr
                                            @ GHC.Types.Char
                                            @ b
                                            c
                                            (GHC.CString.unpackFoldrCString#
                                               @ b
                                               " not in range [0.."#
                                               c
                                               (GHC.Base.foldr
                                                  @ GHC.Types.Char
                                                  @ b
                                                  c
                                                  (GHC.CString.unpackFoldrCString# @ b ")"# c n1)
                                                  (GHC.Show.$fShowInt_$cshow n)))
                                            (GHC.Show.$fShowInt_$cshow i'))))
                              GHC.Types.True -> i' }))
                        (GHC.Base.$
                           @ 'GHC.Types.PtrRepLifted
                           @ GHC.Types.Int
                           @ Alias.BitBoard
                           (\ (ds5 :: GHC.Types.Int) ->
                            case ds5 of wild3 { GHC.Types.I# i# ->
                            case GHC.Prim.indexWord64Array# ds4 i# of wild4 { DEFAULT ->
                            GHC.Word.W64# wild4 } })
                           (let {
                              n :: GHC.Types.Int = GHC.Types.I# dt1
                            } in
                            let {
                              i' :: GHC.Types.Int
                              = case l1 of wild3 { GHC.Types.I# m ->
                                case u1 of wild4 { GHC.Types.I# n1 ->
                                case GHC.Classes.&&
                                       (GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.<=# m ipv9))
                                       (GHC.Prim.tagToEnum#
                                          @ GHC.Types.Bool
                                          (GHC.Prim.<=# ipv9 n1)) of wild5 {
                                  GHC.Types.False
                                  -> GHC.Arr.indexError
                                       @ GHC.Types.Int
                                       @ GHC.Types.Int
                                       GHC.Show.$fShowInt
                                       (wild3, wild4)
                                       ix1
                                       (GHC.Base.build
                                          @ GHC.Types.Char
                                          (\ @ b1 -> GHC.CString.unpackFoldrCString# @ b1 "Int"#))
                                  GHC.Types.True -> GHC.Num.$fNumInt_$c- ix1 wild3 } } }
                            } in
                            case GHC.Classes.&&
                                   (GHC.Classes.leInt (GHC.Types.I# 0#) i')
                                   (GHC.Classes.ltInt i' n) of wild3 {
                              GHC.Types.False
                              -> GHC.Err.error
                                   @ 'GHC.Types.PtrRepLifted
                                   @ GHC.Types.Int
                                   (GHC.Stack.Types.PushCallStack
                                      (GHC.Base.build
                                         @ GHC.Types.Char
                                         (\ @ b -> GHC.CString.unpackFoldrCString# @ b "error"#))
                                      (GHC.Stack.Types.SrcLoc
                                         (GHC.Base.build
                                            @ GHC.Types.Char
                                            (\ @ b ->
                                             GHC.CString.unpackFoldrCString# @ b "array-0.5.1.1"#))
                                         (GHC.Base.build
                                            @ GHC.Types.Char
                                            (\ @ b ->
                                             GHC.CString.unpackFoldrCString#
                                               @ b
                                               "Data.Array.Base"#))
                                         (GHC.Base.build
                                            @ GHC.Types.Char
                                            (\ @ b ->
                                             GHC.CString.unpackFoldrCString#
                                               @ b
                                               "libraries\\array\\Data\\Array\\Base.hs"#))
                                         (GHC.Types.I# 87#)
                                         (GHC.Types.I# 31#)
                                         (GHC.Types.I# 88#)
                                         (GHC.Types.I# 76#))
                                      GHC.Stack.Types.EmptyCallStack)
                                     `cast`
                                   (Sym (GHC.Classes.N:IP[0]
                                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                                   (GHC.Base.build
                                      @ GHC.Types.Char
                                      (\ @ b
                                         (c :: GHC.Types.Char -> b -> b)[OneShot]
                                         (n1 :: b)[OneShot] ->
                                       GHC.CString.unpackFoldrCString#
                                         @ b
                                         "Error in array index; "#
                                         c
                                         (GHC.Base.foldr
                                            @ GHC.Types.Char
                                            @ b
                                            c
                                            (GHC.CString.unpackFoldrCString#
                                               @ b
                                               " not in range [0.."#
                                               c
                                               (GHC.Base.foldr
                                                  @ GHC.Types.Char
                                                  @ b
                                                  c
                                                  (GHC.CString.unpackFoldrCString# @ b ")"# c n1)
                                                  (GHC.Show.$fShowInt_$cshow n)))
                                            (GHC.Show.$fShowInt_$cshow i'))))
                              GHC.Types.True -> i' })) } } } } } } } } } } } }
                   BasicData.King
                   -> case ds1 of ds2 { GHC.Word.W64# ipv ->
                      Data.Vector.Generic.!
                        @ Data.Vector.Unboxed.Base.Vector
                        @ Alias.BitBoard
                        Data.Vector.Unboxed.Base.$fVectorVectorWord64
                        AttackTable.kingAttackTable
                        eta } }) -}
cc35896ee64c05719fe4cdcf680db355
  queenAttack :: Alias.Occupancy -> Alias.Square -> Alias.BitBoard
  {- Arity: 2, Strictness: <S,1*U(U)><S(S),1*U(U)>m,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (occupancy :: Alias.Occupancy) (square :: Alias.Square) ->
                 case occupancy of occupancy1 { GHC.Word.W64# ipv ->
                 case square of square1 { GHC.Types.I# ipv1 ->
                 case Data.Vector.Generic.!
                        @ Data.Vector.Unboxed.Base.Vector
                        @ GHC.Types.Int
                        Data.Vector.Unboxed.Base.$fVectorVectorInt
                        AttackTable.bishopShiftTable
                        square1 of distance { GHC.Types.I# ipv2 ->
                 case Data.Vector.Generic.!
                        @ Data.Vector.Unboxed.Base.Vector
                        @ Alias.Magic
                        Data.Vector.Unboxed.Base.$fVectorVectorWord64
                        AttackTable.bishopMagicTable
                        square1 of magic { GHC.Word.W64# ipv3 ->
                 case Data.Vector.Generic.!
                        @ Data.Vector.Unboxed.Base.Vector
                        @ Alias.Occupancy
                        Data.Vector.Unboxed.Base.$fVectorVectorWord64
                        AttackTable.bishopRelevantOccupancyTable
                        square1 of relOcc { GHC.Word.W64# ipv4 ->
                 case GHC.Base.$
                        @ 'GHC.Types.PtrRepLifted
                        @ Alias.Occupancy
                        @ GHC.Types.Int
                        (\ (ds :: GHC.Word.Word64) ->
                         case ds of wild { GHC.Word.W64# x# ->
                         GHC.Types.I# (GHC.Prim.word2Int# x#) })
                        (GHC.Word.$fBitsWord64_$cshiftR
                           (GHC.Word.$fNumWord64_$c*
                              (GHC.Word.$fBitsWord64_$c.&. occupancy1 relOcc)
                              magic)
                           distance) of ix { GHC.Types.I# ipv5 ->
                 case Data.Vector.Generic.!
                        @ Data.Vector.Vector
                        @ (Data.Array.Base.UArray GHC.Types.Int Alias.BitBoard)
                        (Data.Vector.$fVectorVectora
                           @ (Data.Array.Base.UArray GHC.Types.Int Alias.BitBoard))
                        AttackTable.bishopAttackTable
                        square1 of wild { Data.Array.Base.UArray l u dt ds1 ->
                 case Data.Vector.Generic.!
                        @ Data.Vector.Unboxed.Base.Vector
                        @ GHC.Types.Int
                        Data.Vector.Unboxed.Base.$fVectorVectorInt
                        AttackTable.rookShiftTable
                        square1 of distance1 { GHC.Types.I# ipv6 ->
                 case Data.Vector.Generic.!
                        @ Data.Vector.Unboxed.Base.Vector
                        @ Alias.Magic
                        Data.Vector.Unboxed.Base.$fVectorVectorWord64
                        AttackTable.rookMagicTable
                        square1 of magic1 { GHC.Word.W64# ipv7 ->
                 case Data.Vector.Generic.!
                        @ Data.Vector.Unboxed.Base.Vector
                        @ Alias.Occupancy
                        Data.Vector.Unboxed.Base.$fVectorVectorWord64
                        AttackTable.rookRelevantOccupancyTable
                        square1 of relOcc1 { GHC.Word.W64# ipv8 ->
                 case GHC.Base.$
                        @ 'GHC.Types.PtrRepLifted
                        @ Alias.Occupancy
                        @ GHC.Types.Int
                        (\ (ds :: GHC.Word.Word64) ->
                         case ds of wild1 { GHC.Word.W64# x# ->
                         GHC.Types.I# (GHC.Prim.word2Int# x#) })
                        (GHC.Word.$fBitsWord64_$cshiftR
                           (GHC.Word.$fNumWord64_$c*
                              (GHC.Word.$fBitsWord64_$c.&. occupancy1 relOcc1)
                              magic1)
                           distance1) of ix1 { GHC.Types.I# ipv9 ->
                 case Data.Vector.Generic.!
                        @ Data.Vector.Vector
                        @ (Data.Array.Base.UArray GHC.Types.Int Alias.BitBoard)
                        (Data.Vector.$fVectorVectora
                           @ (Data.Array.Base.UArray GHC.Types.Int Alias.BitBoard))
                        AttackTable.rookAttackTable
                        square1 of wild1 { Data.Array.Base.UArray l1 u1 dt1 ds2 ->
                 GHC.Word.$fBitsWord64_$c.|.
                   (GHC.Base.$
                      @ 'GHC.Types.PtrRepLifted
                      @ GHC.Types.Int
                      @ Alias.BitBoard
                      (\ (ds3 :: GHC.Types.Int) ->
                       case ds3 of wild2 { GHC.Types.I# i# ->
                       case GHC.Prim.indexWord64Array# ds1 i# of wild3 { DEFAULT ->
                       GHC.Word.W64# wild3 } })
                      (let {
                         n :: GHC.Types.Int = GHC.Types.I# dt
                       } in
                       let {
                         i' :: GHC.Types.Int
                         = case l of wild2 { GHC.Types.I# m ->
                           case u of wild3 { GHC.Types.I# n1 ->
                           case GHC.Classes.&&
                                  (GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.<=# m ipv5))
                                  (GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.<=# ipv5 n1)) of wild4 {
                             GHC.Types.False
                             -> GHC.Arr.indexError
                                  @ GHC.Types.Int
                                  @ GHC.Types.Int
                                  GHC.Show.$fShowInt
                                  (wild2, wild3)
                                  ix
                                  (GHC.Base.build
                                     @ GHC.Types.Char
                                     (\ @ b1 -> GHC.CString.unpackFoldrCString# @ b1 "Int"#))
                             GHC.Types.True -> GHC.Num.$fNumInt_$c- ix wild2 } } }
                       } in
                       case GHC.Classes.&&
                              (GHC.Classes.leInt (GHC.Types.I# 0#) i')
                              (GHC.Classes.ltInt i' n) of wild2 {
                         GHC.Types.False
                         -> GHC.Err.error
                              @ 'GHC.Types.PtrRepLifted
                              @ GHC.Types.Int
                              (GHC.Stack.Types.PushCallStack
                                 (GHC.Base.build
                                    @ GHC.Types.Char
                                    (\ @ b -> GHC.CString.unpackFoldrCString# @ b "error"#))
                                 (GHC.Stack.Types.SrcLoc
                                    (GHC.Base.build
                                       @ GHC.Types.Char
                                       (\ @ b ->
                                        GHC.CString.unpackFoldrCString# @ b "array-0.5.1.1"#))
                                    (GHC.Base.build
                                       @ GHC.Types.Char
                                       (\ @ b ->
                                        GHC.CString.unpackFoldrCString# @ b "Data.Array.Base"#))
                                    (GHC.Base.build
                                       @ GHC.Types.Char
                                       (\ @ b ->
                                        GHC.CString.unpackFoldrCString#
                                          @ b
                                          "libraries\\array\\Data\\Array\\Base.hs"#))
                                    (GHC.Types.I# 87#)
                                    (GHC.Types.I# 31#)
                                    (GHC.Types.I# 88#)
                                    (GHC.Types.I# 76#))
                                 GHC.Stack.Types.EmptyCallStack)
                                `cast`
                              (Sym (GHC.Classes.N:IP[0]
                                        <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                              (GHC.Base.build
                                 @ GHC.Types.Char
                                 (\ @ b
                                    (c :: GHC.Types.Char -> b -> b)[OneShot]
                                    (n1 :: b)[OneShot] ->
                                  GHC.CString.unpackFoldrCString#
                                    @ b
                                    "Error in array index; "#
                                    c
                                    (GHC.Base.foldr
                                       @ GHC.Types.Char
                                       @ b
                                       c
                                       (GHC.CString.unpackFoldrCString#
                                          @ b
                                          " not in range [0.."#
                                          c
                                          (GHC.Base.foldr
                                             @ GHC.Types.Char
                                             @ b
                                             c
                                             (GHC.CString.unpackFoldrCString# @ b ")"# c n1)
                                             (GHC.Show.$fShowInt_$cshow n)))
                                       (GHC.Show.$fShowInt_$cshow i'))))
                         GHC.Types.True -> i' }))
                   (GHC.Base.$
                      @ 'GHC.Types.PtrRepLifted
                      @ GHC.Types.Int
                      @ Alias.BitBoard
                      (\ (ds3 :: GHC.Types.Int) ->
                       case ds3 of wild2 { GHC.Types.I# i# ->
                       case GHC.Prim.indexWord64Array# ds2 i# of wild3 { DEFAULT ->
                       GHC.Word.W64# wild3 } })
                      (let {
                         n :: GHC.Types.Int = GHC.Types.I# dt1
                       } in
                       let {
                         i' :: GHC.Types.Int
                         = case l1 of wild2 { GHC.Types.I# m ->
                           case u1 of wild3 { GHC.Types.I# n1 ->
                           case GHC.Classes.&&
                                  (GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.<=# m ipv9))
                                  (GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.<=# ipv9 n1)) of wild4 {
                             GHC.Types.False
                             -> GHC.Arr.indexError
                                  @ GHC.Types.Int
                                  @ GHC.Types.Int
                                  GHC.Show.$fShowInt
                                  (wild2, wild3)
                                  ix1
                                  (GHC.Base.build
                                     @ GHC.Types.Char
                                     (\ @ b1 -> GHC.CString.unpackFoldrCString# @ b1 "Int"#))
                             GHC.Types.True -> GHC.Num.$fNumInt_$c- ix1 wild2 } } }
                       } in
                       case GHC.Classes.&&
                              (GHC.Classes.leInt (GHC.Types.I# 0#) i')
                              (GHC.Classes.ltInt i' n) of wild2 {
                         GHC.Types.False
                         -> GHC.Err.error
                              @ 'GHC.Types.PtrRepLifted
                              @ GHC.Types.Int
                              (GHC.Stack.Types.PushCallStack
                                 (GHC.Base.build
                                    @ GHC.Types.Char
                                    (\ @ b -> GHC.CString.unpackFoldrCString# @ b "error"#))
                                 (GHC.Stack.Types.SrcLoc
                                    (GHC.Base.build
                                       @ GHC.Types.Char
                                       (\ @ b ->
                                        GHC.CString.unpackFoldrCString# @ b "array-0.5.1.1"#))
                                    (GHC.Base.build
                                       @ GHC.Types.Char
                                       (\ @ b ->
                                        GHC.CString.unpackFoldrCString# @ b "Data.Array.Base"#))
                                    (GHC.Base.build
                                       @ GHC.Types.Char
                                       (\ @ b ->
                                        GHC.CString.unpackFoldrCString#
                                          @ b
                                          "libraries\\array\\Data\\Array\\Base.hs"#))
                                    (GHC.Types.I# 87#)
                                    (GHC.Types.I# 31#)
                                    (GHC.Types.I# 88#)
                                    (GHC.Types.I# 76#))
                                 GHC.Stack.Types.EmptyCallStack)
                                `cast`
                              (Sym (GHC.Classes.N:IP[0]
                                        <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                              (GHC.Base.build
                                 @ GHC.Types.Char
                                 (\ @ b
                                    (c :: GHC.Types.Char -> b -> b)[OneShot]
                                    (n1 :: b)[OneShot] ->
                                  GHC.CString.unpackFoldrCString#
                                    @ b
                                    "Error in array index; "#
                                    c
                                    (GHC.Base.foldr
                                       @ GHC.Types.Char
                                       @ b
                                       c
                                       (GHC.CString.unpackFoldrCString#
                                          @ b
                                          " not in range [0.."#
                                          c
                                          (GHC.Base.foldr
                                             @ GHC.Types.Char
                                             @ b
                                             c
                                             (GHC.CString.unpackFoldrCString# @ b ")"# c n1)
                                             (GHC.Show.$fShowInt_$cshow n)))
                                       (GHC.Show.$fShowInt_$cshow i'))))
                         GHC.Types.True -> i' })) } } } } } } } } } } } }) -}
c4bfccee42c8b39b38aaae826ba723f3
  rookAttack :: Alias.Occupancy -> Alias.Square -> Alias.BitBoard
  {- Arity: 2, Strictness: <S,1*U(U)><S(S),1*U(U)>m,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (occupancy :: Alias.Occupancy) (square :: Alias.Square) ->
                 case occupancy of occupancy1 { GHC.Word.W64# ipv ->
                 case square of square1 { GHC.Types.I# ipv1 ->
                 case Data.Vector.Generic.!
                        @ Data.Vector.Unboxed.Base.Vector
                        @ GHC.Types.Int
                        Data.Vector.Unboxed.Base.$fVectorVectorInt
                        AttackTable.rookShiftTable
                        square1 of distance { GHC.Types.I# ipv2 ->
                 case Data.Vector.Generic.!
                        @ Data.Vector.Unboxed.Base.Vector
                        @ Alias.Magic
                        Data.Vector.Unboxed.Base.$fVectorVectorWord64
                        AttackTable.rookMagicTable
                        square1 of magic { GHC.Word.W64# ipv3 ->
                 case Data.Vector.Generic.!
                        @ Data.Vector.Unboxed.Base.Vector
                        @ Alias.Occupancy
                        Data.Vector.Unboxed.Base.$fVectorVectorWord64
                        AttackTable.rookRelevantOccupancyTable
                        square1 of relOcc { GHC.Word.W64# ipv4 ->
                 case GHC.Base.$
                        @ 'GHC.Types.PtrRepLifted
                        @ Alias.Occupancy
                        @ GHC.Types.Int
                        (\ (ds :: GHC.Word.Word64) ->
                         case ds of wild { GHC.Word.W64# x# ->
                         GHC.Types.I# (GHC.Prim.word2Int# x#) })
                        (GHC.Word.$fBitsWord64_$cshiftR
                           (GHC.Word.$fNumWord64_$c*
                              (GHC.Word.$fBitsWord64_$c.&. occupancy1 relOcc)
                              magic)
                           distance) of ix { GHC.Types.I# ipv5 ->
                 case Data.Vector.Generic.!
                        @ Data.Vector.Vector
                        @ (Data.Array.Base.UArray GHC.Types.Int Alias.BitBoard)
                        (Data.Vector.$fVectorVectora
                           @ (Data.Array.Base.UArray GHC.Types.Int Alias.BitBoard))
                        AttackTable.rookAttackTable
                        square1 of wild { Data.Array.Base.UArray l u dt ds1 ->
                 GHC.Base.$
                   @ 'GHC.Types.PtrRepLifted
                   @ GHC.Types.Int
                   @ Alias.BitBoard
                   (\ (ds2 :: GHC.Types.Int) ->
                    case ds2 of wild1 { GHC.Types.I# i# ->
                    case GHC.Prim.indexWord64Array# ds1 i# of wild2 { DEFAULT ->
                    GHC.Word.W64# wild2 } })
                   (let {
                      n :: GHC.Types.Int = GHC.Types.I# dt
                    } in
                    let {
                      i' :: GHC.Types.Int
                      = case l of wild1 { GHC.Types.I# m ->
                        case u of wild2 { GHC.Types.I# n1 ->
                        case GHC.Classes.&&
                               (GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.<=# m ipv5))
                               (GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<=# ipv5 n1)) of wild4 {
                          GHC.Types.False
                          -> GHC.Arr.indexError
                               @ GHC.Types.Int
                               @ GHC.Types.Int
                               GHC.Show.$fShowInt
                               (wild1, wild2)
                               ix
                               (GHC.Base.build
                                  @ GHC.Types.Char
                                  (\ @ b1 -> GHC.CString.unpackFoldrCString# @ b1 "Int"#))
                          GHC.Types.True -> GHC.Num.$fNumInt_$c- ix wild1 } } }
                    } in
                    case GHC.Classes.&&
                           (GHC.Classes.leInt (GHC.Types.I# 0#) i')
                           (GHC.Classes.ltInt i' n) of wild1 {
                      GHC.Types.False
                      -> GHC.Err.error
                           @ 'GHC.Types.PtrRepLifted
                           @ GHC.Types.Int
                           (GHC.Stack.Types.PushCallStack
                              (GHC.Base.build
                                 @ GHC.Types.Char
                                 (\ @ b -> GHC.CString.unpackFoldrCString# @ b "error"#))
                              (GHC.Stack.Types.SrcLoc
                                 (GHC.Base.build
                                    @ GHC.Types.Char
                                    (\ @ b -> GHC.CString.unpackFoldrCString# @ b "array-0.5.1.1"#))
                                 (GHC.Base.build
                                    @ GHC.Types.Char
                                    (\ @ b ->
                                     GHC.CString.unpackFoldrCString# @ b "Data.Array.Base"#))
                                 (GHC.Base.build
                                    @ GHC.Types.Char
                                    (\ @ b ->
                                     GHC.CString.unpackFoldrCString#
                                       @ b
                                       "libraries\\array\\Data\\Array\\Base.hs"#))
                                 (GHC.Types.I# 87#)
                                 (GHC.Types.I# 31#)
                                 (GHC.Types.I# 88#)
                                 (GHC.Types.I# 76#))
                              GHC.Stack.Types.EmptyCallStack)
                             `cast`
                           (Sym (GHC.Classes.N:IP[0]
                                     <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                           (GHC.Base.build
                              @ GHC.Types.Char
                              (\ @ b
                                 (c :: GHC.Types.Char -> b -> b)[OneShot]
                                 (n1 :: b)[OneShot] ->
                               GHC.CString.unpackFoldrCString#
                                 @ b
                                 "Error in array index; "#
                                 c
                                 (GHC.Base.foldr
                                    @ GHC.Types.Char
                                    @ b
                                    c
                                    (GHC.CString.unpackFoldrCString#
                                       @ b
                                       " not in range [0.."#
                                       c
                                       (GHC.Base.foldr
                                          @ GHC.Types.Char
                                          @ b
                                          c
                                          (GHC.CString.unpackFoldrCString# @ b ")"# c n1)
                                          (GHC.Show.$fShowInt_$cshow n)))
                                    (GHC.Show.$fShowInt_$cshow i'))))
                      GHC.Types.True -> i' }) } } } } } } }) -}
62b639cc9ab9acc15a816064e5785233
  rookAttackTable ::
    Data.Vector.Vector
      (Data.Array.Base.UArray GHC.Types.Int Alias.BitBoard)
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ (Data.Vector.Vector
                             (Data.Array.Base.UArray GHC.Types.Int Alias.BitBoard))
                        AttackTable.rookAttackTable1 of ds1 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
de30c26ce255b86731ad3d909f7a784b
  rookAttackTable1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Vector.Vector
            (Data.Array.Base.UArray GHC.Types.Int Alias.BitBoard) #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newArray#
                        @ (Data.Array.Base.UArray GHC.Types.Int Alias.BitBoard)
                        @ (Control.Monad.Primitive.PrimState
                             (GHC.ST.ST GHC.Prim.RealWorld))
                        0#
                        (Data.Vector.Mutable.uninitialised
                           @ (Data.Array.Base.UArray GHC.Types.Int Alias.BitBoard))
                        s1
                          `cast`
                        (GHC.Prim.State#
                           (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                     <GHC.Prim.RealWorld>_N)))_R of ds1 { (#,#) ipv ipv1 ->
                 case AttackTable.rookAttackTable_$sfoldlM_loop
                        ipv
                          `cast`
                        (GHC.Prim.State#
                           (Control.Monad.Primitive.D:R:PrimStateST[0]
                                <GHC.Prim.RealWorld>_N))_R
                        AttackTable.rookAttackTable2
                        0#
                        0#
                        ipv1
                        @~ (Sub (Sym (Data.Vector.D:R:MutableVector[0])) <Control.Monad.Primitive.PrimState
                                                                            (GHC.ST.ST
                                                                               GHC.Prim.RealWorld)>_N <Data.Array.Base.UArray
                                                                                                         GHC.Types.Int
                                                                                                         Alias.BitBoard>_N)
                        0# of ds2 { (#,#) ipv6 ipv7 ->
                 case ipv7 of wild5 { (,) v' n ->
                 case v'
                        `cast`
                      (Sub (Data.Vector.D:R:MutableVector[0]) <Control.Monad.Primitive.PrimState
                                                                 (GHC.ST.ST
                                                                    GHC.Prim.RealWorld)>_N <Data.Array.Base.UArray
                                                                                              GHC.Types.Int
                                                                                              Alias.BitBoard>_N) of wild { Data.Vector.Mutable.MVector dt dt1 dt2 ->
                 case n of dt5 { GHC.Types.I# dt6 ->
                 case GHC.Prim.unsafeFreezeArray#
                        @ (Control.Monad.Primitive.PrimState
                             (GHC.ST.ST GHC.Prim.RealWorld))
                        @ (Data.Array.Base.UArray GHC.Types.Int Alias.BitBoard)
                        dt2
                        ipv6
                          `cast`
                        (GHC.Prim.State#
                           (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                     <GHC.Prim.RealWorld>_N)))_R of ds4 { (#,#) ipv2 ipv3 ->
                 (# ipv2
                      `cast`
                    (GHC.Prim.State#
                       (Control.Monad.Primitive.D:R:PrimStateST[0]
                            <GHC.Prim.RealWorld>_N))_R,
                    Data.Vector.Vector
                      @ (Data.Array.Base.UArray GHC.Types.Int Alias.BitBoard)
                      dt
                      dt6
                      ipv3 #) } } } } } }) -}
b3357982d6f2aa5e847e4f28d713a587
  rookAttackTable2 ::
    [Data.Array.Base.UArray GHC.Types.Int Alias.BitBoard]
  {- Unfolding: (AttackTable.rookAttackTable_go 0#) -}
86b30b84f0a9bc6b24472914025513d3
  rookAttackTable_$sfoldlM_loop ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> [Data.Array.Base.UArray GHC.Types.Int GHC.Word.Word64]
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.MutableArray#
         (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
         (Data.Array.Base.UArray GHC.Types.Int GHC.Word.Word64)
    -> Data.Vector.Mutable.MVector
         (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
         (Data.Array.Base.UArray GHC.Types.Int GHC.Word.Word64)
       ~R# Data.Vector.Generic.Base.Mutable
             Data.Vector.Vector
             (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
             (Data.Array.Base.UArray GHC.Types.Int GHC.Word.Word64) =>
       GHC.Prim.Int#
       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
             (Data.Vector.Generic.Base.Mutable
                Data.Vector.Vector
                (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
                (Data.Array.Base.UArray GHC.Types.Int Alias.BitBoard),
              GHC.Types.Int) #)
  {- Arity: 7, Strictness: <S,U><S,1*U><L,U><L,U><L,U><L,U><L,U> -}
7f3e5c222d02d642567df3db86695c19
  rookAttackTable_go ::
    GHC.Prim.Int#
    -> [Data.Array.Base.UArray GHC.Types.Int Alias.BitBoard]
  {- Arity: 1, Strictness: <L,U> -}
9cf738e934a50e78e406cd9f98f43ee6
  rookBetterMagics :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.rookMagicTable3) -}
442c53193c0b389f26e73890656ee89d
  rookMagicTable :: Data.Vector.Unboxed.Base.Vector Alias.Magic
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ (Data.Vector.Unboxed.Base.Vector Alias.Magic)
                        AttackTable.rookMagicTable1 of ds1 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
c76dd15145fb80b31de28440313d3d6e
  rookMagicTable1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Vector.Unboxed.Base.Vector Alias.Magic #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Classes.divInt#
                        9223372036854775807#
                        8# of ww4 { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.># 0# ww4) of wild1 {
                   GHC.Types.False
                   -> case GHC.Prim.newByteArray#
                             @ (Control.Monad.Primitive.PrimState
                                  (GHC.ST.ST GHC.Prim.RealWorld))
                             0#
                             s1
                               `cast`
                             (GHC.Prim.State#
                                (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                          <GHC.Prim.RealWorld>_N)))_R of ds1 { (#,#) ipv ipv1 ->
                      case AttackTable.rookMagicTable_$sfoldlM_loop
                             ipv
                               `cast`
                             (GHC.Prim.State#
                                (Control.Monad.Primitive.D:R:PrimStateST[0]
                                     <GHC.Prim.RealWorld>_N))_R
                             AttackTable.rookMagicTable2
                             0#
                             0#
                             ipv1
                             @~ (Trans
                                     (Sym (Data.Vector.Unboxed.Base.N:R:MVectorsWord64[0]
                                               <Control.Monad.Primitive.PrimState
                                                  (GHC.ST.ST GHC.Prim.RealWorld)>_N))
                                     (Trans
                                          (Sym (Data.Vector.Unboxed.Base.D:R:MVectorsWord640[0]
                                                    <Control.Monad.Primitive.PrimState
                                                       (GHC.ST.ST GHC.Prim.RealWorld)>_N))
                                          (Sub (Sym (Data.Vector.Unboxed.Base.D:R:MutableVector[0])) <Control.Monad.Primitive.PrimState
                                                                                                        (GHC.ST.ST
                                                                                                           GHC.Prim.RealWorld)>_N <GHC.Word.Word64>_N)))
                             0# of ds2 { (#,#) ipv6 ipv7 ->
                      case ipv7 of wild5 { (,) v' n ->
                      case v'
                             `cast`
                           (Trans
                                (Sub (Data.Vector.Unboxed.Base.D:R:MutableVector[0]) <Control.Monad.Primitive.PrimState
                                                                                        (GHC.ST.ST
                                                                                           GHC.Prim.RealWorld)>_N <GHC.Word.Word64>_N)
                                (Trans
                                     (Data.Vector.Unboxed.Base.D:R:MVectorsWord640[0]
                                          <Control.Monad.Primitive.PrimState
                                             (GHC.ST.ST GHC.Prim.RealWorld)>_N)
                                     (Data.Vector.Unboxed.Base.N:R:MVectorsWord64[0]
                                          <Control.Monad.Primitive.PrimState
                                             (GHC.ST.ST
                                                GHC.Prim.RealWorld)>_N))) of wild { Data.Vector.Primitive.Mutable.MVector dt dt1 dt2 ->
                      case n of dt3 { GHC.Types.I# dt4 ->
                      case GHC.Prim.unsafeFreezeByteArray#
                             @ (Control.Monad.Primitive.PrimState
                                  (GHC.ST.ST GHC.Prim.RealWorld))
                             dt2
                             ipv6
                               `cast`
                             (GHC.Prim.State#
                                (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                          <GHC.Prim.RealWorld>_N)))_R of ds4 { (#,#) ipv2 ipv3 ->
                      (# ipv2
                           `cast`
                         (GHC.Prim.State#
                            (Control.Monad.Primitive.D:R:PrimStateST[0]
                                 <GHC.Prim.RealWorld>_N))_R,
                         (Data.Vector.Primitive.Vector @ GHC.Word.Word64 dt dt4 ipv3)
                           `cast`
                         (Trans
                              (Sym (Data.Vector.Unboxed.Base.N:R:VectorWord64[0]))
                              (Sym (Data.Vector.Unboxed.Base.D:R:VectorWord640[0]))) #) } } } } } }
                   GHC.Types.True
                   -> case GHC.Err.error
                             @ 'GHC.Types.PtrRepLifted
                             @ (GHC.ST.ST
                                  GHC.Prim.RealWorld
                                  (Data.Vector.Primitive.Mutable.MVector
                                     (Control.Monad.Primitive.PrimState
                                        (GHC.ST.ST GHC.Prim.RealWorld))
                                     GHC.Word.Word64))
                             AttackTable.bishopRelevantOccupancyTable4
                               `cast`
                             (Sym (GHC.Classes.N:IP[0]
                                       <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                             AttackTable.bishopMagicTable2
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                Data.Vector.Unboxed.Base.Vector Alias.Magic #)
                      of {} } }) -}
3d96e88c9b205e7231ea967ab93c7dbf
  rookMagicTable10 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.rookMagicTable11) -}
feb6d9c7b8baa85cdd7367ef6ec62559
  rookMagicTable100 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable249
                   AttackTable.rookMagicTable101) -}
8a145d81b60bfc6c385dbc80faae997d
  rookMagicTable101 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable241
                   AttackTable.rookMagicTable102) -}
df62469b5a4c420ca584145965ba816d
  rookMagicTable102 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable211
                   AttackTable.rookMagicTable103) -}
ba464ded4704e6eaf9796c3301cbabf4
  rookMagicTable103 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable247
                   AttackTable.rookMagicTable104) -}
9ac444496186bbcb4084e4e2d93c461b
  rookMagicTable104 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable245
                   AttackTable.rookMagicTable105) -}
d0068d11900db43e55294ff3c75516cb
  rookMagicTable105 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable221
                   AttackTable.rookMagicTable106) -}
b7f2e8890d6f1a270d9703155dace0b7
  rookMagicTable106 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable171
                   AttackTable.rookMagicTable107) -}
89f59b3a7effc5200a174b149084fb1d
  rookMagicTable107 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable185
                   AttackTable.rookMagicTable108) -}
055993b8697649d53da33459cd1487be
  rookMagicTable108 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable243
                   AttackTable.rookMagicTable109) -}
0f9cdce34dcde73d9e4196fb1e1ce540
  rookMagicTable109 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable241
                   AttackTable.rookMagicTable110) -}
48005f6aea25c4be019303a1713c689d
  rookMagicTable11 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.rookMagicTable12) -}
b58fccd32674b471563ec8e9cc5945b0
  rookMagicTable110 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable239
                   AttackTable.rookMagicTable111) -}
417d0cf6b4925c3d970697201d0570ff
  rookMagicTable111 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable237
                   AttackTable.rookMagicTable112) -}
f8f3bcf2c04aeefe4a4e1c757a4fcbcf
  rookMagicTable112 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable235
                   AttackTable.rookMagicTable113) -}
7ca23dc89b6e47e393430e4f3668fc1e
  rookMagicTable113 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable233
                   AttackTable.rookMagicTable114) -}
2bf88b94d0c6d9f6c5e0adb0bd7e12aa
  rookMagicTable114 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable231
                   AttackTable.rookMagicTable115) -}
b3a8d024669e2205bc46982fdd221b50
  rookMagicTable115 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable229
                   AttackTable.rookMagicTable116) -}
2b3d930e335455231cc9232ba1cfd4ba
  rookMagicTable116 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable227
                   AttackTable.rookMagicTable117) -}
c179399ee4f4cddb07cdad0d5a5b9110
  rookMagicTable117 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable225
                   AttackTable.rookMagicTable118) -}
bf0ec39e1efd3e21762cf154fd14c65c
  rookMagicTable118 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable179
                   AttackTable.rookMagicTable119) -}
34cac556cf26530a002c0699d244127c
  rookMagicTable119 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable223
                   AttackTable.rookMagicTable120) -}
488acbda03252ccbf5eb223f2c7386e9
  rookMagicTable12 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.rookMagicTable13) -}
fe1d7e0e77c50bb99aae503e3ab9151f
  rookMagicTable120 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable207
                   AttackTable.rookMagicTable121) -}
04139054fccb39c0f81da9ec1389c3e7
  rookMagicTable121 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable221
                   AttackTable.rookMagicTable122) -}
dc6a92de8f7afe957ef7ac02ea4b71f5
  rookMagicTable122 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable219
                   AttackTable.rookMagicTable123) -}
e56dfcfb8ca24da5b10500cf08cee07e
  rookMagicTable123 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable217
                   AttackTable.rookMagicTable124) -}
7d2e4ae0f9377ee433d345fc99ed5aa7
  rookMagicTable124 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable215
                   AttackTable.rookMagicTable125) -}
8261a74db851d1360a3f53428881a384
  rookMagicTable125 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable213
                   AttackTable.rookMagicTable126) -}
b9dbb454f3d72dab253e4ddd9ce53f40
  rookMagicTable126 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable211
                   AttackTable.rookMagicTable127) -}
468ce6e4b488b3ab04acbcf1de31b340
  rookMagicTable127 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable209
                   AttackTable.rookMagicTable128) -}
dfbdfe628264f9812ab22873975a0931
  rookMagicTable128 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable207
                   AttackTable.rookMagicTable129) -}
d0664037e20189d4204f6764ecaf1a48
  rookMagicTable129 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable205
                   AttackTable.rookMagicTable130) -}
d9600941d776a9461a5cae8a6cdddc4a
  rookMagicTable13 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.rookMagicTable14) -}
fd2b5c70d42b13b59da54b3d50c8363e
  rookMagicTable130 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable203
                   AttackTable.rookMagicTable131) -}
27fb8e890e1ac6ab702e0b42e44f6833
  rookMagicTable131 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable201
                   AttackTable.rookMagicTable132) -}
ffdc457ea62e70786695f5f4f0a366d5
  rookMagicTable132 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable199
                   AttackTable.rookMagicTable133) -}
155e5dbedd9014ad366a086fd1676cb9
  rookMagicTable133 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable197
                   AttackTable.rookMagicTable134) -}
d1ad819d886901cda66838527bfcf4cd
  rookMagicTable134 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable195
                   AttackTable.rookMagicTable135) -}
97c5cb40068d36079d9e1bee29af2595
  rookMagicTable135 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable193
                   AttackTable.rookMagicTable136) -}
6f9a0b8b93d2c3d315ed6393551d4583
  rookMagicTable136 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable191
                   AttackTable.rookMagicTable137) -}
bc584af642c3bf1d6deb96f3aa1f3c6a
  rookMagicTable137 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable189
                   AttackTable.rookMagicTable138) -}
24009ac6a6ce96da5a7057224d3538ea
  rookMagicTable138 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable187
                   AttackTable.rookMagicTable139) -}
7a001ec6450f87e9cbb38f799c764bc9
  rookMagicTable139 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable185
                   AttackTable.rookMagicTable140) -}
07a94cb7cdc39c6649afc5dcd6472d8b
  rookMagicTable14 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.rookMagicTable15) -}
da820d60c0f99519e051a686b16613e6
  rookMagicTable140 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable183
                   AttackTable.rookMagicTable141) -}
8bcaa9f13b0e93e3d69de034453c160f
  rookMagicTable141 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable181
                   AttackTable.rookMagicTable142) -}
997daefb1ab0cd69e7585488adb92994
  rookMagicTable142 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable179
                   AttackTable.rookMagicTable143) -}
99f2cccda6fab301d938ca8e7140dc04
  rookMagicTable143 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable177
                   AttackTable.rookMagicTable144) -}
b18dc4c201a901fd44c213ce4b806c55
  rookMagicTable144 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable175
                   AttackTable.rookMagicTable145) -}
90f5689d96252ae241e7fdb8418ac184
  rookMagicTable145 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable173
                   AttackTable.rookMagicTable146) -}
a1e4326a10eeca95e9bd609c05e42828
  rookMagicTable146 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable171
                   AttackTable.rookMagicTable147) -}
9bdcf603b16e0cee552c58d2eb400dcd
  rookMagicTable147 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable169
                   AttackTable.rookMagicTable148) -}
fd04f8a837ff9ccce0b84a7f0a325ee0
  rookMagicTable148 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable167
                   AttackTable.rookMagicTable149) -}
0e7728f8d28387be6bad9de94dcd730c
  rookMagicTable149 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable165
                   AttackTable.rookMagicTable150) -}
776f1751be2473cb196c9f7b6f470203
  rookMagicTable15 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.rookMagicTable16) -}
4dd3a8c25f3c0b9aa463e83cbb3341a2
  rookMagicTable150 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable163
                   AttackTable.rookMagicTable151) -}
b54e55074d05827a52aa2c03eaa7ed6f
  rookMagicTable151 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable161
                   AttackTable.rookMagicTable152) -}
e8795ad7c6b0cdba4e8a4f24abeef145
  rookMagicTable152 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable159
                   AttackTable.rookMagicTable153) -}
bca3b6765c99b09b9c70f8aa393f95cf
  rookMagicTable153 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable157
                   AttackTable.rookMagicTable154) -}
90700409e48d80b2ab0d7c7f5b5a61e7
  rookMagicTable154 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable155
                   (GHC.Types.[] @ (GHC.Base.Maybe Alias.Magic))) -}
3c94bb3a4cd17e953de4fd39fedb73e6
  rookMagicTable155 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.rookMagicTable156) -}
905019bca1cf9abbb0da188cd9788e99
  rookMagicTable156 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 79448909054218##) -}
b546f218f1ffadf4ce17d4e59a97aec8
  rookMagicTable157 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.rookMagicTable158) -}
1ca32b85b348be484e5b16c0c01dcac7
  rookMagicTable158 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 9514145652129923604##) -}
b5ba85b9939bfb9f2482bfa2ad796619
  rookMagicTable159 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.rookMagicTable160) -}
03ce8732e5f0767d0f422a25e3efc172
  rookMagicTable16 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.rookMagicTable17) -}
1b2ddd85c84171414690f29fba3a0a63
  rookMagicTable160 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 36591753683535906##) -}
07a0325059c2df88c1b16623eb5952b0
  rookMagicTable161 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.rookMagicTable162) -}
b7b3ab05bdb31fb103464e26623ef353
  rookMagicTable162 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 642114975498255##) -}
cf63e4e3c1ab61413fb566f49fc2592b
  rookMagicTable163 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.rookMagicTable164) -}
d58253e48c6d9d722a71cd21bd2dd7e3
  rookMagicTable164 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 81101112341447937##) -}
dae6d6ff98a5bd949997ce6e9290c220
  rookMagicTable165 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.rookMagicTable166) -}
92e31d3529953cf8b2e711ab72be5424
  rookMagicTable166 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 216454293870354433##) -}
1c61b9830f97383295244b92255ab713
  rookMagicTable167 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.rookMagicTable168) -}
676014e5f0a318f83b0e2abb717292b6
  rookMagicTable168 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 184811413029028001##) -}
6e0efa92a00a37c4a9249fbd1ef023af
  rookMagicTable169 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.rookMagicTable170) -}
1a168e2535120ce7397cadf99f8ffabe
  rookMagicTable17 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.rookMagicTable18) -}
15d92b58a526f22010889c85f0c6de17
  rookMagicTable170 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 9259700049250746626##) -}
7af9e1b0a717f89adbd94694b94daa79
  rookMagicTable171 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.rookMagicTable172) -}
3be0c48a7a07535a81ef323d7eedc67f
  rookMagicTable172 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 5190820795896578688##) -}
21adc6d0efcc48b3f6862c909cda10d3
  rookMagicTable173 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.rookMagicTable174) -}
ca7d1238b2a894c13384c32198d4bf48
  rookMagicTable174 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 2310382927361491968##) -}
3687573bb9c2c040b98773160e1cbc1d
  rookMagicTable175 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.rookMagicTable176) -}
3a80a705c06f8e415999fcb96cec717a
  rookMagicTable176 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 10387693295198404736##) -}
f7dc28ccaaf91d028ba14b8ddb2f3911
  rookMagicTable177 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.rookMagicTable178) -}
acebd96cd09b7bdf82018ff62f65b78f
  rookMagicTable178 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 2341915789452443904##) -}
27a2f8b7fdadca47483c3192a57cbb0b
  rookMagicTable179 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.rookMagicTable180) -}
1f26a9562d265f9fb22700925049be64
  rookMagicTable18 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.rookMagicTable19) -}
17aabd52a27d7eac80fed942343fbe8e
  rookMagicTable180 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 8661284111289680000##) -}
b3de1287de6b3ced4b5f52835c15d05b
  rookMagicTable181 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.rookMagicTable182) -}
adea3d4f52453945384607e5002a63e1
  rookMagicTable182 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 864832003383493248##) -}
4afc0f2e0a1558ab3f30dfca05746b49
  rookMagicTable183 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.rookMagicTable184) -}
67d76cd246897620b708325521f1c318
  rookMagicTable184 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 5779561982977900800##) -}
b6fbd991360bad85edeba50dafedcabb
  rookMagicTable185 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.rookMagicTable186) -}
b4d159d38462b5d459a3e630384ffe24
  rookMagicTable186 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 324269069354156288##) -}
e4f8dcc5057d1e6ea4ca10a80a3fa4e8
  rookMagicTable187 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.rookMagicTable188) -}
6d65e1baf10c07e0d5e9b4cebab63a9d
  rookMagicTable188 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 2305843836599009281##) -}
aeedb52805b8443946806a0e59d3297b
  rookMagicTable189 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.rookMagicTable190) -}
6c33d92a4b22e8dfb07a28bb829bfe48
  rookMagicTable19 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.rookMagicTable20) -}
c965696323245373fa3cedc0c5ce197d
  rookMagicTable190 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 1159687968018137089##) -}
4815234e4363e328fad4de6f0f987b91
  rookMagicTable191 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.rookMagicTable192) -}
259a51fc23352dc7276f79653eec9fe7
  rookMagicTable192 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 220957959864254466##) -}
147369ab4a25b23fd052aa39ce767871
  rookMagicTable193 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.rookMagicTable194) -}
d7171abec2ae59376f7713234e78d11b
  rookMagicTable194 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 9225641463231086612##) -}
d449be3be918367e8833f244c604c0ef
  rookMagicTable195 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.rookMagicTable196) -}
aa962be1232126a3237246ab2ac04b42
  rookMagicTable196 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 85621169612423296##) -}
08c23e7fa6f57b1f02fc3df22b80b719
  rookMagicTable197 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.rookMagicTable198) -}
021dc2b2c32104c1899765197e242b31
  rookMagicTable198 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 226448828830711840##) -}
09f07eb36146ffa15b77f96e47a452fa
  rookMagicTable199 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.rookMagicTable200) -}
639ee68bec108a0c37be8650be5ce491
  rookMagicTable2 :: [GHC.Word.Word64]
  {- Unfolding: (AttackTable.rookMagicTable_$sgo
                   AttackTable.rookMagicTable265
                   AttackTable.rookMagicTable92
                   AttackTable.rookMagicTable3) -}
0af165e360beeda3826af60850b83629
  rookMagicTable20 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.rookMagicTable21) -}
d77ae9530aea8a8d58cb26e4fda16e98
  rookMagicTable200 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 283678840324160##) -}
7290ca46399b3c591cb2aaa1ab3ca998
  rookMagicTable201 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.rookMagicTable202) -}
ccd3e2263b6c8bed4aadfdd057842d81
  rookMagicTable202 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 13853073004723994624##) -}
604a5949b9ced32a5395bc56c6cd52c3
  rookMagicTable203 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.rookMagicTable204) -}
d9424a091c44fcdc03e92dbd23016e43
  rookMagicTable204 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 19145815335370852##) -}
d1607a9198a171b440d66ea0623e0031
  rookMagicTable205 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.rookMagicTable206) -}
2f1ba737612ca7a48f7cee7bedfff94c
  rookMagicTable206 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 18858840703373824##) -}
a3c99f65377bba10be1a40f4b82ded64
  rookMagicTable207 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.rookMagicTable208) -}
72455afdfa12329caa50de29cab71631
  rookMagicTable208 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 18438812153676800##) -}
353bfa4051bb27c2c43f109afcb3f636
  rookMagicTable209 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.rookMagicTable210) -}
80bc702b5dd6962a5ad039b7699f97bf
  rookMagicTable21 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.rookMagicTable22) -}
da4b3e69dab703cd37b43435cd905a2b
  rookMagicTable210 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 4611826790283871232##) -}
437aa5cdff29825f5b814a643c24b4d2
  rookMagicTable211 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.rookMagicTable212) -}
5528c1e7e19f1a91f1ca6040fc80cecf
  rookMagicTable212 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 9223512808778371073##) -}
7afab8d5b6c617049b52e1ef0da615ce
  rookMagicTable213 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.rookMagicTable214) -}
6b9f8dce9c237a2e91edb0b4d42c2480
  rookMagicTable214 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 36046391495106562##) -}
1cea2f6776685ce378fd621696c0d09c
  rookMagicTable215 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.rookMagicTable216) -}
d282c4a5da8436bde2ca6b4ffad42b35
  rookMagicTable216 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 9227880172038916173##) -}
58261eac2e62f3ee415555b65f010f34
  rookMagicTable217 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.rookMagicTable218) -}
f8ff0c668483cff0b294219eb727754d
  rookMagicTable218 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 13581168171549072##) -}
70c3e2a4214b97929e812c676278faa1
  rookMagicTable219 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.rookMagicTable220) -}
c42823c9c3696c3de1ac477d20819e1a
  rookMagicTable22 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.rookMagicTable23) -}
c25dbaf401574504363bcbf55f87d454
  rookMagicTable220 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 6359084348884451652##) -}
67f66dee6852e1bc06fd3e2591188517
  rookMagicTable221 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.rookMagicTable222) -}
96783c096e7bfecd94d87a10cee3c456
  rookMagicTable222 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 327918360753078784##) -}
ee7f5f17f9b02a08a931ffcd20f74d25
  rookMagicTable223 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.rookMagicTable224) -}
7510947d58232cde62d65f8a5ba4b1ac
  rookMagicTable224 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 9295993706128476704##) -}
b9eea861861cc92c9a6df82b859eb4d5
  rookMagicTable225 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.rookMagicTable226) -}
af092840a7522bea2f4ff89f86acc2cb
  rookMagicTable226 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 4612004902570311813##) -}
c7d7f76b7a120b00d47424824919ac99
  rookMagicTable227 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.rookMagicTable228) -}
803977cf47c865eb0701f6aece9f1573
  rookMagicTable228 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 9296485172794886272##) -}
cb6244ea93b91a7d6b2ca09b572443c0
  rookMagicTable229 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.rookMagicTable230) -}
644cabc8a23c390525e56f9b1c47e0de
  rookMagicTable23 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.rookMagicTable24) -}
32a43edd6e53da0e81e8f9bd28000384
  rookMagicTable230 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 1729593365290295428##) -}
a734d7ab9acfa1fb6e362e33416da717
  rookMagicTable231 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.rookMagicTable232) -}
d89946892e9aa76f1ca23fcbf19d9c34
  rookMagicTable232 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 1315053290233432132##) -}
247b92e392ef1a169eaa3f0f8ad2a262
  rookMagicTable233 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.rookMagicTable234) -}
ba5b96826b691228eecc8d29201e0ac8
  rookMagicTable234 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 13515196946491912##) -}
9ffb4db275f1eff793823c2e3a06a52f
  rookMagicTable235 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.rookMagicTable236) -}
bd671b693c5f5e54120aa8e7ff9ce00b
  rookMagicTable236 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 11529637808356526592##) -}
9d4c86425b970edda7b2afaf2567c977
  rookMagicTable237 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.rookMagicTable238) -}
0ab731f1f053029c0107cbc2fb525d02
  rookMagicTable238 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 9304578118062707713##) -}
0921d359455c225e7179a3d0fbf9087d
  rookMagicTable239 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.rookMagicTable240) -}
d49888735995c12cef3dc2be8d1fa586
  rookMagicTable24 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.rookMagicTable25) -}
bae9eac55b8bde7d82f5fb16bfd11faf
  rookMagicTable240 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 46303183693170693##) -}
0cb5a34490799bbb68b6510cfedd0c5e
  rookMagicTable241 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.rookMagicTable242) -}
e8e1661694236d9a9ba5c9be56fe1a0a
  rookMagicTable242 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 4620834505463173120##) -}
9903e08e8c976236ced8d9d1fcf98dcf
  rookMagicTable243 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.rookMagicTable244) -}
ef65680eeb70782015aa0b9cc6e4e357
  rookMagicTable244 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 4652218690020839488##) -}
7f450e4ade421b898752d4f2a391154e
  rookMagicTable245 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.rookMagicTable246) -}
e67982235f2fc3455db9abe613db9624
  rookMagicTable246 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 9269815717300012032##) -}
555614555b7d80afbce37cb00e650f5c
  rookMagicTable247 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.rookMagicTable248) -}
2da45e53e7eba224f7263afd2f64dc68
  rookMagicTable248 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 144678207155994657##) -}
d6a14cc3ccee54ab0632f24691f8869a
  rookMagicTable249 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.rookMagicTable250) -}
bc14550a2ab081f9c7b8c0e429406bbc
  rookMagicTable25 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.rookMagicTable26) -}
9c408a526191f79ccb49983d64a46565
  rookMagicTable250 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 18084786045190216##) -}
889eea2100d74da895a9bc290d5793bc
  rookMagicTable251 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.rookMagicTable252) -}
ea8140476d25710235f42ffdf2227e4b
  rookMagicTable252 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 9223512780788219904##) -}
eed4f92deb896c16e5cea6e9a0d274b4
  rookMagicTable253 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.rookMagicTable254) -}
2f7dd10afab15257e40a3b756727a063
  rookMagicTable254 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 13907116478248919178##) -}
46aa3127a53938d10769007b46dfa96d
  rookMagicTable255 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.rookMagicTable256) -}
5f2748e7a0b913892226fcaebf16172b
  rookMagicTable256 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 36031545814819328##) -}
f93e742abb39a537b221ddc38f4180dd
  rookMagicTable257 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.rookMagicTable258) -}
c2af5b18e5d0ec4e243dec573b87285f
  rookMagicTable258 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 72061992122384392##) -}
1147200389f528a08e5bf73066895480
  rookMagicTable259 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.rookMagicTable260) -}
c364f91933a85f5f83bc67ddddb9bb59
  rookMagicTable26 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.rookMagicTable27) -}
ce19c1853e610cdb7128de4d87d253b9
  rookMagicTable260 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 13871135232960757762##) -}
41ca8e160c90ca3d3d2c1e4a37fd52a2
  rookMagicTable261 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.rookMagicTable262) -}
ce43ded1b36910b466147e958244231a
  rookMagicTable262 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 72067489911022084##) -}
9282e10914dca756f5f6a4e5b119afd8
  rookMagicTable263 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.rookMagicTable264) -}
57d121841b23f02b2045a99aa57298d5
  rookMagicTable264 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 1243011111888887808##) -}
dbeb0d9af0dafb0611330f64080ff79f
  rookMagicTable265 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 36029355902648322##) -}
08d353421138691e4737a8afe19c60fd
  rookMagicTable27 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.rookMagicTable28) -}
5e30424f3acf2aed973f4f605384504b
  rookMagicTable28 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.rookMagicTable29) -}
87065aa12983b3d6f441b248e53ab247
  rookMagicTable29 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.rookMagicTable30) -}
b42b13ad7f82697daf422bb289715d8a
  rookMagicTable3 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.rookMagicTable4) -}
63babd984b9250517566598f72ea1eb6
  rookMagicTable30 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.rookMagicTable31) -}
78740e13aa1331cbf5ee737f4ba6db4a
  rookMagicTable31 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.rookMagicTable32) -}
b85f7bd10e3cf8a44b1933b91b88159d
  rookMagicTable32 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.rookMagicTable33) -}
678236398e76ec4e9fb9ed968a974a4f
  rookMagicTable33 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.rookMagicTable34) -}
422df5119ea7473cfa1e6bab18aaf08c
  rookMagicTable34 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.rookMagicTable35) -}
2b20652c7cace76d995f6cee43b5faeb
  rookMagicTable35 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.rookMagicTable36) -}
aa88d10102cc52864cca0eba765dafb0
  rookMagicTable36 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.rookMagicTable37) -}
b434331759354f056ea170aa2db07ecb
  rookMagicTable37 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.rookMagicTable38) -}
56b5d5452a8fbcdd07d731f0e2e7b039
  rookMagicTable38 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.rookMagicTable39) -}
109f6b7ce6de0512ad07c8c2feedf346
  rookMagicTable39 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.rookMagicTable40) -}
97cbbd1a99276ac7a24d9009c3b7ff41
  rookMagicTable4 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.rookMagicTable5) -}
1e1a095ab94c274b57f6061c7dec241c
  rookMagicTable40 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.rookMagicTable41) -}
51c8276411bac8a9d0bc0d7d05e1e654
  rookMagicTable41 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.rookMagicTable42) -}
bf77fafa4069d3f0f51c0db9854e7899
  rookMagicTable42 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.rookMagicTable43) -}
9dddf583f23a6924d4a29a8279e56d7e
  rookMagicTable43 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.rookMagicTable44) -}
336616aeb95c4b519aca863310a3f0d7
  rookMagicTable44 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.rookMagicTable45) -}
ee17477dc57973713d66af9e65888b2e
  rookMagicTable45 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.rookMagicTable46) -}
7f50426d7fada592c9bd7d3cfd4925c6
  rookMagicTable46 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.rookMagicTable47) -}
da246b33b28652ab2ccfcb95dbe9bd6f
  rookMagicTable47 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.rookMagicTable48) -}
e93a2269981e92484c2b24482bd984d3
  rookMagicTable48 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.rookMagicTable49) -}
f298f774e8daa7e2a92d7dbfed2548ad
  rookMagicTable49 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.rookMagicTable50) -}
68d47c9f81f2e7c8370ef1d6276e6469
  rookMagicTable5 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.rookMagicTable6) -}
afb8a3fc9e2b225aef83151fd4176226
  rookMagicTable50 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable90
                   AttackTable.rookMagicTable51) -}
7e8b8cd079a16f915bd0f5cd65299f30
  rookMagicTable51 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable90
                   AttackTable.rookMagicTable52) -}
9570bd958b10772d1e40934a40a6c1c1
  rookMagicTable52 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable88
                   AttackTable.rookMagicTable53) -}
4743bbc41c6f83ab23e7fb43a0c02a24
  rookMagicTable53 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable86
                   AttackTable.rookMagicTable54) -}
3830bdb8128fafef0ddb3a971499e4a9
  rookMagicTable54 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable84
                   AttackTable.rookMagicTable55) -}
bdbe2677a05885485edd9e858dbb7b04
  rookMagicTable55 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable82
                   AttackTable.rookMagicTable56) -}
2d6b7865c9b6ea7501392e03d1936be9
  rookMagicTable56 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.rookMagicTable57) -}
508a8dd924df1c28688278dae6ebfc9c
  rookMagicTable57 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable80
                   AttackTable.rookMagicTable58) -}
e19fcd79ee6f81750d08156c8a50d026
  rookMagicTable58 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable78
                   AttackTable.rookMagicTable59) -}
216c59a4f24bb2573e191d385b3bf6b3
  rookMagicTable59 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable76
                   AttackTable.rookMagicTable60) -}
af7142c4f6e97ee912ec18ea7a608cb2
  rookMagicTable6 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.rookMagicTable7) -}
243c4c44336b9f798b07b13e3053c3de
  rookMagicTable60 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable74
                   AttackTable.rookMagicTable61) -}
940c58aaf8bbe3072ca4e2426d48e725
  rookMagicTable61 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable72
                   AttackTable.rookMagicTable62) -}
c21f538bdabbad6a2f84ef61a5380e23
  rookMagicTable62 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable70
                   AttackTable.rookMagicTable63) -}
3656e6325a5874b0de54928dab90db11
  rookMagicTable63 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.rookMagicTable64) -}
48e835172b04b823b3f7ca8b401accaa
  rookMagicTable64 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable68
                   AttackTable.rookMagicTable65) -}
17d65d3d238a326c6d0f75b50874dfb0
  rookMagicTable65 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable66
                   (GHC.Types.[] @ (GHC.Base.Maybe Alias.Magic))) -}
7726855e17808924efe56719cc3e64e3
  rookMagicTable66 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.rookMagicTable67) -}
f5be6538c4806455ab4d17dc7351aa5f
  rookMagicTable67 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 8522499339677771678##) -}
d2e75e5463ad5ac9340ef661e714dade
  rookMagicTable68 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.rookMagicTable69) -}
561edc67857ad45e758b4a4bc1a4c91b
  rookMagicTable69 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 1125827562356340##) -}
a2ca7c7c010290db0ef0980e71d4ab56
  rookMagicTable7 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.rookMagicTable8) -}
16b90bb70d25fccce7a9c13f32acb0b5
  rookMagicTable70 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.rookMagicTable71) -}
b40386b5123303119a36e47718d6c747
  rookMagicTable71 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 4692750665688806614##) -}
1c319d90674aaa94b428779b485e3ef9
  rookMagicTable72 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.rookMagicTable73) -}
ba356e734df2419f3f7b86a595ac64e3
  rookMagicTable73 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 1333065189051839990##) -}
6cb43178ae0f101f5ea57b0f59a8204e
  rookMagicTable74 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.rookMagicTable75) -}
3277da390bc3795ad34b5396ee4d092a
  rookMagicTable75 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 6034823423364870562##) -}
8a2d32a58000d33c9968626a89fca29f
  rookMagicTable76 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.rookMagicTable77) -}
f84fb7ee34207ed395bd733695b707a1
  rookMagicTable77 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 7061642970158444206##) -}
e78fb4b50d38469d1314c3e42f2a72e7
  rookMagicTable78 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.rookMagicTable79) -}
dcddd5ce3fed3267e44ac0b8edde72ea
  rookMagicTable79 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 17005591892296975654##) -}
47eec94a48483f45c38824c311c64837
  rookMagicTable8 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.rookMagicTable9) -}
7e7ec2dcc5d7226e57bbcc2d69ee0de4
  rookMagicTable80 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.rookMagicTable81) -}
0c82df7a975e0e7850a5ede495d83030
  rookMagicTable81 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 5841168673586058912##) -}
41ed34a5441d2a10716d6319971baa91
  rookMagicTable82 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.rookMagicTable83) -}
c7d3118f5d1c291699e77e83a4227235
  rookMagicTable83 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 18446744030759085568##) -}
87ffb20a654bac63ecc725af9da42b7e
  rookMagicTable84 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.rookMagicTable85) -}
4849d917c040936db9005d1e7cb2b74f
  rookMagicTable85 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 18446743979218685440##) -}
445974c1970b18d724e299b14fc9c0b5
  rookMagicTable86 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.rookMagicTable87) -}
c48b0d969c986c7127a50752ddca8598
  rookMagicTable87 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 7007600874156364288##) -}
6987bf036ed11a35503f57bff52637b6
  rookMagicTable88 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.rookMagicTable89) -}
0453b4bf4d59ca698ef02fbd15229389
  rookMagicTable89 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 5296232809593843200##) -}
239a6060bb45b3125f94225f92f9af3e
  rookMagicTable9 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   (GHC.Base.Nothing @ Alias.Magic)
                   AttackTable.rookMagicTable10) -}
cb2caa92780cccc5c09ce54641cc4bab
  rookMagicTable90 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.rookMagicTable91) -}
f137a1bb5f44f9e9b9ef2ce048d27b20
  rookMagicTable91 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 5260202827150502400##) -}
a4f453a88b17dc2112c2dd03d4a5564c
  rookMagicTable92 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable263
                   AttackTable.rookMagicTable93) -}
25232b0b1e1a31fa7dc04f157b3ba07c
  rookMagicTable93 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable213
                   AttackTable.rookMagicTable94) -}
98e0f3bf0778f1ea397ed3b298c6596d
  rookMagicTable94 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable261
                   AttackTable.rookMagicTable95) -}
c0f72b9ec505d1ac6a986b520c91a183
  rookMagicTable95 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable259
                   AttackTable.rookMagicTable96) -}
10e5e5badb8364b32b1f76b1e1ad3322
  rookMagicTable96 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable257
                   AttackTable.rookMagicTable97) -}
2627a2672f635fb594a7ed54738ef521
  rookMagicTable97 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable255
                   AttackTable.rookMagicTable98) -}
1b74fa143e4f0f601c03545ccdf54900
  rookMagicTable98 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable253
                   AttackTable.rookMagicTable99) -}
38b4c6c8cb33b701633be6629f200f3d
  rookMagicTable99 :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagicTable251
                   AttackTable.rookMagicTable100) -}
ed688594bf7493dd123002b3780bfd02
  rookMagicTable_$sfoldlM_loop ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> [GHC.Word.Word64]
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.MutableByteArray#
         (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
    -> Data.Vector.Primitive.Mutable.MVector
         (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
         GHC.Word.Word64
       ~R# Data.Vector.Generic.Base.Mutable
             Data.Vector.Unboxed.Base.Vector
             (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
             GHC.Word.Word64 =>
       GHC.Prim.Int#
       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
             (Data.Vector.Generic.Base.Mutable
                Data.Vector.Unboxed.Base.Vector
                (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
                Alias.Magic,
              GHC.Types.Int) #)
  {- Arity: 7, Strictness: <S,U><S,1*U><L,U><L,U><L,U><L,U><L,U> -}
bd3be29437ccafca4f179b0252776241
  rookMagicTable_$sgo ::
    GHC.Word.Word64
    -> [GHC.Base.Maybe GHC.Word.Word64]
    -> [GHC.Base.Maybe GHC.Word.Word64]
    -> [GHC.Word.Word64]
  {- Arity: 3, Strictness: <L,U><L,U><L,U> -}
9634928a3355c2179d1d49581efb1063
  rookMagics :: [GHC.Base.Maybe Alias.Magic]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe Alias.Magic)
                   AttackTable.rookMagics1
                   AttackTable.rookMagicTable92) -}
31a042c59778c052c4c2479c9575b6e2
  rookMagics1 :: GHC.Base.Maybe Alias.Magic
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ Alias.Magic
                   AttackTable.rookMagicTable265) -}
9cce88b418a649b29c10cbf25a4b445c
  rookMask :: Alias.Square -> Alias.BitBoard
  {- Arity: 1, Strictness: <L,U(U)>m, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Alias.Square) ->
                 case AttackTable.$wrookMask w of ww { DEFAULT ->
                 GHC.Word.W64# ww }) -}
16aba3c7f628210932d1e88cf8a71906
  rookRelevantOccupancyTable ::
    Data.Vector.Unboxed.Base.Vector Alias.Occupancy
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ (Data.Vector.Unboxed.Base.Vector Alias.AttackMap)
                        AttackTable.rookRelevantOccupancyTable1 of ds1 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
93b71a3f320c1b04c1d58fccf196b7e9
  rookRelevantOccupancyTable1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Vector.Unboxed.Base.Vector Alias.AttackMap #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Classes.divInt#
                        9223372036854775807#
                        8# of ww4 { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.># 64# ww4) of wild1 {
                   GHC.Types.False
                   -> case GHC.Prim.newByteArray#
                             @ (Control.Monad.Primitive.PrimState
                                  (GHC.ST.ST GHC.Prim.RealWorld))
                             512#
                             s1
                               `cast`
                             (GHC.Prim.State#
                                (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                          <GHC.Prim.RealWorld>_N)))_R of ds1 { (#,#) ipv ipv1 ->
                      letrec {
                        $s$wfoldlM'_loop :: GHC.Prim.State# GHC.Prim.RealWorld
                                            -> GHC.Prim.Int#
                                            -> GHC.Prim.Int#
                                            -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                  GHC.Types.Int #)
                          {- Arity: 3, Strictness: <S,U><S,U><L,U> -}
                        = \ (sc :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot]
                            (sc1 :: GHC.Prim.Int#)
                            (sc2 :: GHC.Prim.Int#) ->
                          case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.<# sc1 64#) of wild2 {
                            GHC.Types.False -> (# sc, GHC.Types.I# sc2 #)
                            GHC.Types.True
                            -> case GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.>=# sc1 64#) of wild4 {
                                 GHC.Types.False
                                 -> case AttackTable.$wrookMask
                                           (GHC.Types.I# sc1) of ww { DEFAULT ->
                                    let {
                                      ww3 :: GHC.Prim.Word# = GHC.Prim.uncheckedShiftL# 1## sc1
                                    } in
                                    let {
                                      ipv2 :: GHC.Prim.Word#
                                      = GHC.Prim.or#
                                          ww3
                                          (GHC.Prim.and#
                                             (GHC.Prim.and#
                                                (GHC.Prim.uncheckedShiftL# ww3 1#)
                                                18446744073709551615##)
                                             18374403900871474942##)
                                    } in
                                    let {
                                      ipv3 :: GHC.Prim.Word#
                                      = GHC.Prim.or#
                                          ipv2
                                          (GHC.Prim.and#
                                             (GHC.Prim.and#
                                                (GHC.Prim.uncheckedShiftL# ipv2 2#)
                                                18374403900871474942##)
                                             18229723555195321596##)
                                    } in
                                    let {
                                      ipv4 :: GHC.Prim.Word#
                                      = GHC.Prim.or#
                                          ww3
                                          (GHC.Prim.and#
                                             (GHC.Prim.uncheckedShiftRL# ww3 8#)
                                             18446744073709551615##)
                                    } in
                                    let {
                                      ipv6 :: GHC.Prim.Word#
                                      = GHC.Prim.or#
                                          ipv4
                                          (GHC.Prim.and#
                                             (GHC.Prim.uncheckedShiftRL# ipv4 16#)
                                             72057594037927935##)
                                    } in
                                    let {
                                      ipv8 :: GHC.Prim.Word#
                                      = GHC.Prim.or#
                                          ww3
                                          (GHC.Prim.and#
                                             (GHC.Prim.and#
                                                (GHC.Prim.uncheckedShiftRL# ww3 1#)
                                                18446744073709551615##)
                                             9187201950435737471##)
                                    } in
                                    let {
                                      ipv9 :: GHC.Prim.Word#
                                      = GHC.Prim.or#
                                          ipv8
                                          (GHC.Prim.and#
                                             (GHC.Prim.and#
                                                (GHC.Prim.uncheckedShiftRL# ipv8 2#)
                                                9187201950435737471##)
                                             4557430888798830399##)
                                    } in
                                    let {
                                      ipv10 :: GHC.Prim.Word#
                                      = GHC.Prim.or#
                                          ww3
                                          (GHC.Prim.and#
                                             (GHC.Prim.uncheckedShiftL# ww3 8#)
                                             18446744073709551615##)
                                    } in
                                    let {
                                      ipv12 :: GHC.Prim.Word#
                                      = GHC.Prim.or#
                                          ipv10
                                          (GHC.Prim.and#
                                             (GHC.Prim.uncheckedShiftL# ipv10 16#)
                                             18446744073709551360##)
                                    } in
                                    case GHC.Prim.writeWord64Array#
                                           @ (Control.Monad.Primitive.PrimState
                                                (GHC.ST.ST GHC.Prim.RealWorld))
                                           ipv1
                                           sc2
                                           (GHC.Prim.and#
                                              (GHC.Prim.or#
                                                 (GHC.Prim.or#
                                                    (GHC.Prim.or#
                                                       (GHC.Prim.uncheckedShiftL#
                                                          (GHC.Prim.or#
                                                             ipv12
                                                             (GHC.Prim.and#
                                                                (GHC.Prim.uncheckedShiftL#
                                                                   ipv12
                                                                   32#)
                                                                18446744073692774400##))
                                                          8#)
                                                       (GHC.Prim.and#
                                                          (GHC.Prim.uncheckedShiftRL#
                                                             (GHC.Prim.or#
                                                                ipv9
                                                                (GHC.Prim.and#
                                                                   (GHC.Prim.and#
                                                                      (GHC.Prim.uncheckedShiftRL#
                                                                         ipv9
                                                                         4#)
                                                                      2242545357980376863##)
                                                                   1085102592571150095##))
                                                             1#)
                                                          9187201950435737471##))
                                                    (GHC.Prim.uncheckedShiftRL#
                                                       (GHC.Prim.or#
                                                          ipv6
                                                          (GHC.Prim.and#
                                                             (GHC.Prim.uncheckedShiftRL# ipv6 32#)
                                                             1099511627775##))
                                                       8#))
                                                 (GHC.Prim.and#
                                                    (GHC.Prim.uncheckedShiftL#
                                                       (GHC.Prim.or#
                                                          ipv3
                                                          (GHC.Prim.and#
                                                             (GHC.Prim.and#
                                                                (GHC.Prim.uncheckedShiftL# ipv3 4#)
                                                                17940362863843014904##)
                                                             17361641481138401520##))
                                                       1#)
                                                    18374403900871474942##))
                                              (GHC.Prim.xor# ww 18446744073709551615##))
                                           sc
                                             `cast`
                                           (GHC.Prim.State#
                                              (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                        <GHC.Prim.RealWorld>_N)))_R of s'# { DEFAULT ->
                                    $s$wfoldlM'_loop
                                      s'#
                                        `cast`
                                      (GHC.Prim.State#
                                         (Control.Monad.Primitive.D:R:PrimStateST[0]
                                              <GHC.Prim.RealWorld>_N))_R
                                      (GHC.Prim.+# sc1 1#)
                                      (GHC.Prim.+# sc2 1#) } }
                                 GHC.Types.True
                                 -> case AttackTable.$wrookMask
                                           (GHC.Types.I# sc1) of ww { DEFAULT ->
                                    case GHC.Prim.writeWord64Array#
                                           @ (Control.Monad.Primitive.PrimState
                                                (GHC.ST.ST GHC.Prim.RealWorld))
                                           ipv1
                                           sc2
                                           0##
                                           sc
                                             `cast`
                                           (GHC.Prim.State#
                                              (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                        <GHC.Prim.RealWorld>_N)))_R of s'# { DEFAULT ->
                                    $s$wfoldlM'_loop
                                      s'#
                                        `cast`
                                      (GHC.Prim.State#
                                         (Control.Monad.Primitive.D:R:PrimStateST[0]
                                              <GHC.Prim.RealWorld>_N))_R
                                      (GHC.Prim.+# sc1 1#)
                                      (GHC.Prim.+# sc2 1#) } } } }
                      } in
                      case $s$wfoldlM'_loop
                             ipv
                               `cast`
                             (GHC.Prim.State#
                                (Control.Monad.Primitive.D:R:PrimStateST[0]
                                     <GHC.Prim.RealWorld>_N))_R
                             0#
                             0# of ds2 { (#,#) ipv6 ipv7 ->
                      case ipv7 of dt3 { GHC.Types.I# dt4 ->
                      case GHC.Prim.unsafeFreezeByteArray#
                             @ (Control.Monad.Primitive.PrimState
                                  (GHC.ST.ST GHC.Prim.RealWorld))
                             ipv1
                             ipv6
                               `cast`
                             (GHC.Prim.State#
                                (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                          <GHC.Prim.RealWorld>_N)))_R of ds4 { (#,#) ipv2 ipv3 ->
                      (# ipv2
                           `cast`
                         (GHC.Prim.State#
                            (Control.Monad.Primitive.D:R:PrimStateST[0]
                                 <GHC.Prim.RealWorld>_N))_R,
                         (Data.Vector.Primitive.Vector @ GHC.Word.Word64 0# dt4 ipv3)
                           `cast`
                         (Trans
                              (Sym (Data.Vector.Unboxed.Base.N:R:VectorWord64[0]))
                              (Sym (Data.Vector.Unboxed.Base.D:R:VectorWord640[0]))) #) } } } }
                   GHC.Types.True
                   -> case GHC.Err.error
                             @ 'GHC.Types.PtrRepLifted
                             @ (GHC.ST.ST
                                  GHC.Prim.RealWorld
                                  (Data.Vector.Primitive.Mutable.MVector
                                     (Control.Monad.Primitive.PrimState
                                        (GHC.ST.ST GHC.Prim.RealWorld))
                                     GHC.Word.Word64))
                             AttackTable.bishopRelevantOccupancyTable4
                               `cast`
                             (Sym (GHC.Classes.N:IP[0]
                                       <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                             AttackTable.bishopRelevantOccupancyTable2
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                Data.Vector.Unboxed.Base.Vector Alias.AttackMap #)
                      of {} } }) -}
cafc45def8b4567186bfa3b72eedb34b
  rookRelevantOccupancyTable2 :: [Alias.BitBoard]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Alias.BitBoard
                   BasicConstant.aFile
                   AttackTable.rookRelevantOccupancyTable3) -}
b9644cbef920fdacf2c502c13efbcf8b
  rookRelevantOccupancyTable3 :: [Alias.BitBoard]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Alias.BitBoard
                   BasicConstant.hFile
                   AttackTable.rookRelevantOccupancyTable4) -}
d316730c0330d9ed8a92c2c4469261de
  rookRelevantOccupancyTable4 :: [Alias.BitBoard]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Alias.BitBoard
                   BasicConstant.eighthRank
                   AttackTable.rookRelevantOccupancyTable5) -}
06cbd2afa5b0810a31d67bcdfb714a58
  rookRelevantOccupancyTable5 :: [Alias.BitBoard]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Alias.BitBoard
                   BasicConstant.firstRank
                   (GHC.Types.[] @ Alias.BitBoard)) -}
91bdd1bfd2880819afbeaf1d6867e3e5
  rookShift :: [GHC.Types.Int]
  {- Unfolding: (case AttackTable.rookRelevantOccupancyTable
                        `cast`
                      (Trans
                           (Data.Vector.Unboxed.Base.D:R:VectorWord640[0])
                           (Data.Vector.Unboxed.Base.N:R:VectorWord64[0])) of nt { Data.Vector.Primitive.Vector ipv ipv1 ipv2 ->
                 letrec {
                   $wgo1 :: GHC.Prim.Int# -> [GHC.Types.Int]
                     {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                   = \ (ww :: GHC.Prim.Int#) ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.>=# ww ipv1) of wild {
                       GHC.Types.False
                       -> case GHC.Prim.indexWord64Array#
                                 ipv2
                                 (GHC.Prim.+# ipv ww) of wild1 { DEFAULT ->
                          GHC.Types.:
                            @ GHC.Types.Int
                            (GHC.Types.I#
                               (GHC.Prim.-# 64# (GHC.Prim.word2Int# (GHC.Prim.popCnt64# wild1))))
                            ($wgo1 (GHC.Prim.+# ww 1#)) }
                       GHC.Types.True -> GHC.Types.[] @ GHC.Types.Int }
                 } in
                 $wgo1 0# }) -}
a10555938a2e02ef8d215509ea13a4c6
  rookShiftTable :: Data.Vector.Unboxed.Base.Vector GHC.Types.Int
  {- Unfolding: (case GHC.Base.map
                        @ (GHC.Base.Maybe Alias.Magic)
                        @ (GHC.Types.Int -> GHC.Types.Int)
                        AttackTable.bishopShiftTable1
                        AttackTable.rookBetterMagics of fs { DEFAULT ->
                 case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ (Data.Vector.Unboxed.Base.Vector GHC.Types.Int)
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Classes.divInt#
                                9223372036854775807#
                                8# of ww4 { DEFAULT ->
                         case GHC.Prim.tagToEnum#
                                @ GHC.Types.Bool
                                (GHC.Prim.># 0# ww4) of wild1 {
                           GHC.Types.False
                           -> case GHC.Prim.newByteArray#
                                     @ (Control.Monad.Primitive.PrimState
                                          (GHC.ST.ST GHC.Prim.RealWorld))
                                     0#
                                     s1
                                       `cast`
                                     (GHC.Prim.State#
                                        (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                  <GHC.Prim.RealWorld>_N)))_R of ds1 { (#,#) ipv ipv1 ->
                              case AttackTable.rookShiftTable_$sfoldlM_loop
                                     ipv
                                       `cast`
                                     (GHC.Prim.State#
                                        (Control.Monad.Primitive.D:R:PrimStateST[0]
                                             <GHC.Prim.RealWorld>_N))_R
                                     (GHC.List.zipWith
                                        @ (GHC.Types.Int -> GHC.Types.Int)
                                        @ GHC.Types.Int
                                        @ GHC.Types.Int
                                        (GHC.Base.$
                                           @ 'GHC.Types.PtrRepLifted
                                           @ GHC.Types.Int
                                           @ GHC.Types.Int)
                                        fs
                                        AttackTable.rookShift)
                                     0#
                                     0#
                                     ipv1
                                     @~ (Trans
                                             (Sym (Data.Vector.Unboxed.Base.N:R:MVectorsInt[0]
                                                       <Control.Monad.Primitive.PrimState
                                                          (GHC.ST.ST GHC.Prim.RealWorld)>_N))
                                             (Trans
                                                  (Sym (Data.Vector.Unboxed.Base.D:R:MVectorsInt0[0]
                                                            <Control.Monad.Primitive.PrimState
                                                               (GHC.ST.ST GHC.Prim.RealWorld)>_N))
                                                  (Sub (Sym (Data.Vector.Unboxed.Base.D:R:MutableVector[0])) <Control.Monad.Primitive.PrimState
                                                                                                                (GHC.ST.ST
                                                                                                                   GHC.Prim.RealWorld)>_N <GHC.Types.Int>_N)))
                                     0# of ds2 { (#,#) ipv6 ipv7 ->
                              case ipv7 of wild5 { (,) v' n ->
                              case v'
                                     `cast`
                                   (Trans
                                        (Sub (Data.Vector.Unboxed.Base.D:R:MutableVector[0]) <Control.Monad.Primitive.PrimState
                                                                                                (GHC.ST.ST
                                                                                                   GHC.Prim.RealWorld)>_N <GHC.Types.Int>_N)
                                        (Trans
                                             (Data.Vector.Unboxed.Base.D:R:MVectorsInt0[0]
                                                  <Control.Monad.Primitive.PrimState
                                                     (GHC.ST.ST GHC.Prim.RealWorld)>_N)
                                             (Data.Vector.Unboxed.Base.N:R:MVectorsInt[0]
                                                  <Control.Monad.Primitive.PrimState
                                                     (GHC.ST.ST
                                                        GHC.Prim.RealWorld)>_N))) of wild { Data.Vector.Primitive.Mutable.MVector dt dt1 dt2 ->
                              case n of dt3 { GHC.Types.I# dt4 ->
                              case GHC.Prim.unsafeFreezeByteArray#
                                     @ (Control.Monad.Primitive.PrimState
                                          (GHC.ST.ST GHC.Prim.RealWorld))
                                     dt2
                                     ipv6
                                       `cast`
                                     (GHC.Prim.State#
                                        (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                  <GHC.Prim.RealWorld>_N)))_R of ds4 { (#,#) ipv2 ipv3 ->
                              (# ipv2
                                   `cast`
                                 (GHC.Prim.State#
                                    (Control.Monad.Primitive.D:R:PrimStateST[0]
                                         <GHC.Prim.RealWorld>_N))_R,
                                 (Data.Vector.Primitive.Vector @ GHC.Types.Int dt dt4 ipv3)
                                   `cast`
                                 (Trans
                                      (Sym (Data.Vector.Unboxed.Base.N:R:VectorInt[0]))
                                      (Sym (Data.Vector.Unboxed.Base.D:R:VectorInt0[0]))) #) } } } } } }
                           GHC.Types.True
                           -> case GHC.Err.error
                                     @ 'GHC.Types.PtrRepLifted
                                     @ (GHC.ST.ST
                                          GHC.Prim.RealWorld
                                          (Data.Vector.Primitive.Mutable.MVector
                                             (Control.Monad.Primitive.PrimState
                                                (GHC.ST.ST GHC.Prim.RealWorld))
                                             GHC.Types.Int))
                                     AttackTable.bishopRelevantOccupancyTable4
                                       `cast`
                                     (Sym (GHC.Classes.N:IP[0]
                                               <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                                     AttackTable.bishopMagicTable2
                              ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                        Data.Vector.Unboxed.Base.Vector GHC.Types.Int #)
                              of {} } }) of ds1 { (#,#) ipv1 ipv2 ->
                 ipv2 } }) -}
4a3d8a85c6eeb6943eecc5a59aed43d4
  rookShiftTable_$sfoldlM_loop ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> [GHC.Types.Int]
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.MutableByteArray#
         (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
    -> Data.Vector.Primitive.Mutable.MVector
         (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
         GHC.Types.Int
       ~R# Data.Vector.Generic.Base.Mutable
             Data.Vector.Unboxed.Base.Vector
             (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
             GHC.Types.Int =>
       GHC.Prim.Int#
       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
             (Data.Vector.Generic.Base.Mutable
                Data.Vector.Unboxed.Base.Vector
                (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
                GHC.Types.Int,
              GHC.Types.Int) #)
  {- Arity: 7, Strictness: <S,U><S,1*U><L,U><L,U><L,U><L,U><L,U> -}
7a20caab213e11af77ae35826077c1e8
  scanOccupancy :: Alias.Occupancy -> [Alias.Occupancy]
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Alias.Occupancy) ->
                 case w of ww { GHC.Word.W64# ww1 ->
                 AttackTable.$wscanOccupancy ww1 }) -}
326cee2119ba5066407fac30a356e4a5
  whitePawnAttackTable ::
    Data.Vector.Unboxed.Base.Vector Alias.BitBoard
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ (Data.Vector.Unboxed.Base.Vector Alias.AttackMap)
                        AttackTable.whitePawnAttackTable1 of ds1 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
63f423954fb9ce944f8f16a59d74970c
  whitePawnAttackTable1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Vector.Unboxed.Base.Vector Alias.AttackMap #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Classes.divInt#
                        9223372036854775807#
                        8# of ww4 { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.># 0# ww4) of wild1 {
                   GHC.Types.False
                   -> case GHC.Prim.newByteArray#
                             @ (Control.Monad.Primitive.PrimState
                                  (GHC.ST.ST GHC.Prim.RealWorld))
                             0#
                             s1
                               `cast`
                             (GHC.Prim.State#
                                (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                          <GHC.Prim.RealWorld>_N)))_R of ds1 { (#,#) ipv ipv1 ->
                      case AttackTable.whitePawnAttackTable_$sfoldlM_loop
                             ipv
                               `cast`
                             (GHC.Prim.State#
                                (Control.Monad.Primitive.D:R:PrimStateST[0]
                                     <GHC.Prim.RealWorld>_N))_R
                             AttackTable.whitePawnAttackTable2
                             0#
                             0#
                             ipv1
                             @~ (Trans
                                     (Sym (Data.Vector.Unboxed.Base.N:R:MVectorsWord64[0]
                                               <Control.Monad.Primitive.PrimState
                                                  (GHC.ST.ST GHC.Prim.RealWorld)>_N))
                                     (Trans
                                          (Sym (Data.Vector.Unboxed.Base.D:R:MVectorsWord640[0]
                                                    <Control.Monad.Primitive.PrimState
                                                       (GHC.ST.ST GHC.Prim.RealWorld)>_N))
                                          (Sub (Sym (Data.Vector.Unboxed.Base.D:R:MutableVector[0])) <Control.Monad.Primitive.PrimState
                                                                                                        (GHC.ST.ST
                                                                                                           GHC.Prim.RealWorld)>_N <GHC.Word.Word64>_N)))
                             0# of ds2 { (#,#) ipv6 ipv7 ->
                      case ipv7 of wild5 { (,) v' n ->
                      case v'
                             `cast`
                           (Trans
                                (Sub (Data.Vector.Unboxed.Base.D:R:MutableVector[0]) <Control.Monad.Primitive.PrimState
                                                                                        (GHC.ST.ST
                                                                                           GHC.Prim.RealWorld)>_N <GHC.Word.Word64>_N)
                                (Trans
                                     (Data.Vector.Unboxed.Base.D:R:MVectorsWord640[0]
                                          <Control.Monad.Primitive.PrimState
                                             (GHC.ST.ST GHC.Prim.RealWorld)>_N)
                                     (Data.Vector.Unboxed.Base.N:R:MVectorsWord64[0]
                                          <Control.Monad.Primitive.PrimState
                                             (GHC.ST.ST
                                                GHC.Prim.RealWorld)>_N))) of wild { Data.Vector.Primitive.Mutable.MVector dt dt1 dt2 ->
                      case n of dt3 { GHC.Types.I# dt4 ->
                      case GHC.Prim.unsafeFreezeByteArray#
                             @ (Control.Monad.Primitive.PrimState
                                  (GHC.ST.ST GHC.Prim.RealWorld))
                             dt2
                             ipv6
                               `cast`
                             (GHC.Prim.State#
                                (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                          <GHC.Prim.RealWorld>_N)))_R of ds4 { (#,#) ipv2 ipv3 ->
                      (# ipv2
                           `cast`
                         (GHC.Prim.State#
                            (Control.Monad.Primitive.D:R:PrimStateST[0]
                                 <GHC.Prim.RealWorld>_N))_R,
                         (Data.Vector.Primitive.Vector @ GHC.Word.Word64 dt dt4 ipv3)
                           `cast`
                         (Trans
                              (Sym (Data.Vector.Unboxed.Base.N:R:VectorWord64[0]))
                              (Sym (Data.Vector.Unboxed.Base.D:R:VectorWord640[0]))) #) } } } } } }
                   GHC.Types.True
                   -> case GHC.Err.error
                             @ 'GHC.Types.PtrRepLifted
                             @ (GHC.ST.ST
                                  GHC.Prim.RealWorld
                                  (Data.Vector.Primitive.Mutable.MVector
                                     (Control.Monad.Primitive.PrimState
                                        (GHC.ST.ST GHC.Prim.RealWorld))
                                     GHC.Word.Word64))
                             AttackTable.bishopRelevantOccupancyTable4
                               `cast`
                             (Sym (GHC.Classes.N:IP[0]
                                       <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                             AttackTable.bishopMagicTable2
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                Data.Vector.Unboxed.Base.Vector Alias.AttackMap #)
                      of {} } }) -}
2aa82c35d4909ca541b1cd8e31cbacbd
  whitePawnAttackTable2 :: [GHC.Word.Word64]
  {- Unfolding: (AttackTable.whitePawnAttackTable_go 0#) -}
74f1a69c7472cf63cf6dd912c5f2afcd
  whitePawnAttackTable_$sfoldlM_loop ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> [GHC.Word.Word64]
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.MutableByteArray#
         (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
    -> Data.Vector.Primitive.Mutable.MVector
         (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
         GHC.Word.Word64
       ~R# Data.Vector.Generic.Base.Mutable
             Data.Vector.Unboxed.Base.Vector
             (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
             GHC.Word.Word64 =>
       GHC.Prim.Int#
       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
             (Data.Vector.Generic.Base.Mutable
                Data.Vector.Unboxed.Base.Vector
                (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
                Alias.AttackMap,
              GHC.Types.Int) #)
  {- Arity: 7, Strictness: <S,U><S,1*U><L,U><L,U><L,U><L,U><L,U> -}
08021135696a015c27531337d77e2219
  whitePawnAttackTable_go :: GHC.Prim.Int# -> [GHC.Word.Word64]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
"SPEC/AttackTable length @ Vector @ Int" [ALWAYS] forall ($dVector :: Data.Vector.Generic.Base.Vector
                                                                        Data.Vector.Unboxed.Base.Vector
                                                                        GHC.Types.Int)
  Data.Vector.Generic.length @ Data.Vector.Unboxed.Base.Vector
                             @ GHC.Types.Int
                             $dVector
  = AttackTable.$s!_$slength
"SPEC/AttackTable length @ Vector @ Magic" [ALWAYS] forall ($dVector :: Data.Vector.Generic.Base.Vector
                                                                          Data.Vector.Unboxed.Base.Vector
                                                                          Alias.Magic)
  Data.Vector.Generic.length @ Data.Vector.Unboxed.Base.Vector
                             @ GHC.Word.Word64
                             $dVector
  = AttackTable.$s!_$slength1
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

