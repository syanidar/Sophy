
==================== FINAL INTERFACE ====================
2016-12-17 14:57:25.6810408 UTC

interface Sophy-0.1.0.0-KzkJ0b2opaf7oLnrOdwoet:Constructor 8001
  interface hash: b702d23a384334b63195574c547a59a5
  ABI hash: 3ef4f47044021b23db79b8e99d34d085
  export-list hash: 5c7bafe425e900ca8caa1b8f4b7e51d6
  orphan hash: 727b6990d23aecbfe25b192c7039648d
  flag hash: 780eb08866e9f611cfa38104f3e4c47c
  sig of: Nothing
  used TH splices: False
  where
exports:
  Constructor.bitBoardOf
  Constructor.castlingRightParser
  Constructor.colorParser
  Constructor.enPassantParser
  Constructor.fenParser
  Constructor.fromFEN
  Constructor.fullMoveParser
  Constructor.halfMoveParser
  Constructor.nullPos
  Constructor.placementParser
  Constructor.squareParser
  Constructor.startPos
module dependencies: Alias AttackTable BasicConstant BasicData
                     BitBoard Bitwise Position
package dependencies: StateVar-1.1.0.4@StateVar-1.1.0.4-CJpWsiXJdd89SnV9dZtTwc
                      Win32-2.3.1.1@Win32-2.3.1.1
                      adjunctions-4.3@adjunctions-4.3-3ol9sWZt3In19pwXwPv3Xc
                      array-0.5.1.1@array-0.5.1.1 base-4.9.0.0
                      base-orphans-0.5.4@base-orphans-0.5.4-5IQvrjd7gNP548VkOOyIq6
                      bifunctors-5.4.1@bifunctors-5.4.1-8Xk5Wsnk1fr6rBLkW9MO8p
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      comonad-5@comonad-5-2RMxpSOQ5MCHLHIelJrHD4
                      containers-0.5.7.1@containers-0.5.7.1
                      contravariant-1.4@contravariant-1.4-KSQE31a7FruKHDlp90hIUT
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      distributive-0.5.0.2@distributive-0.5.0.2-Cdz2vLOk85j1doGXLcictT
                      exceptions-0.8.3@exceptions-0.8.3-7py7fmRxowDFpHmiHGKrTb
                      free-4.12.4@free-4.12.4-Etm59Dm8iExFxAy1L49Ovd
                      ghc-boot-th-8.0.1@ghc-boot-th-8.0.1 ghc-prim-0.5.0.0
                      hashable-1.2.4.0@hashable-1.2.4.0-EMu4H7FB10MAl6hwKw992G
                      integer-gmp-1.0.0.1
                      kan-extensions-5.0.1@kan-extensions-5.0.1-Asa0tkk9PuPLZ2eXuJ10Gr
                      lens-4.14@lens-4.14-LQbbTc84mRL8zB39b41ZKA
                      mtl-2.2.1@mtl-2.2.1-6qsR1PHUy5lL47Hpoa4jCM
                      parsec-3.1.11@parsec-3.1.11-BCos4GEVCuDB8dnOCBHO6X
                      prelude-extras-0.4.0.3@prelude-extras-0.4.0.3-FAyB4iuuM7cHXdrLMZtdXq
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa
                      profunctors-5.2@profunctors-5.2-2ZZOz6u59T2H8y7z3NgZkY
                      random-1.1@random-1.1-54KmMHXjttlERYcr1mvsAe
                      reflection-2.1.2@reflection-2.1.2-J1ZzlxijzaHGRixYxgxlf9
                      semigroupoids-5.1@semigroupoids-5.1-1Gay4xNO77GHd4DGCzVuax
                      split-0.2.3.1@split-0.2.3.1-IJKK4pOCYGKud0jZImZke
                      stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF
                      tagged-0.8.5@tagged-0.8.5-CtgV6EcN0do8F92i1S6iYx
                      template-haskell-2.11.0.0
                      text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s
                      time-1.6.0.1@time-1.6.0.1 transformers-0.5.2.0@transformers-0.5.2.0
                      transformers-compat-0.5.1.4@transformers-compat-0.5.1.4-81lZyuOJOvsD0zyCv2TKld
                      unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-Eo9jd5DMz45DhBLCG8skzW
                      vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6
orphans: base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         hashable-1.2.4.0@hashable-1.2.4.0-EMu4H7FB10MAl6hwKw992G:Data.Hashable.Generic
         reflection-2.1.2@reflection-2.1.2-J1ZzlxijzaHGRixYxgxlf9:Data.Reflection
         stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF:Control.Monad.STM
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Lazy
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Unboxed
family instance modules: adjunctions-4.3@adjunctions-4.3-3ol9sWZt3In19pwXwPv3Xc:Data.Functor.Rep
                         base-4.9.0.0:Control.Applicative base-4.9.0.0:Data.Complex
                         base-4.9.0.0:Data.Either base-4.9.0.0:Data.Functor.Compose
                         base-4.9.0.0:Data.Functor.Const base-4.9.0.0:Data.Functor.Identity
                         base-4.9.0.0:Data.Functor.Product base-4.9.0.0:Data.Functor.Sum
                         base-4.9.0.0:Data.List.NonEmpty base-4.9.0.0:Data.Monoid
                         base-4.9.0.0:Data.Semigroup base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:Data.Version base-4.9.0.0:Data.Void
                         base-4.9.0.0:GHC.Exts base-4.9.0.0:GHC.Generics
                         base-4.9.0.0:GHC.IO.Exception base-4.9.0.0:GHC.TypeLits
                         bifunctors-5.4.1@bifunctors-5.4.1-8Xk5Wsnk1fr6rBLkW9MO8p:Data.Bifunctor.Biff
                         bifunctors-5.4.1@bifunctors-5.4.1-8Xk5Wsnk1fr6rBLkW9MO8p:Data.Bifunctor.Clown
                         bifunctors-5.4.1@bifunctors-5.4.1-8Xk5Wsnk1fr6rBLkW9MO8p:Data.Bifunctor.Flip
                         bifunctors-5.4.1@bifunctors-5.4.1-8Xk5Wsnk1fr6rBLkW9MO8p:Data.Bifunctor.Join
                         bifunctors-5.4.1@bifunctors-5.4.1-8Xk5Wsnk1fr6rBLkW9MO8p:Data.Bifunctor.Joker
                         bifunctors-5.4.1@bifunctors-5.4.1-8Xk5Wsnk1fr6rBLkW9MO8p:Data.Bifunctor.Product
                         bifunctors-5.4.1@bifunctors-5.4.1-8Xk5Wsnk1fr6rBLkW9MO8p:Data.Bifunctor.Sum
                         bifunctors-5.4.1@bifunctors-5.4.1-8Xk5Wsnk1fr6rBLkW9MO8p:Data.Bifunctor.Tannen
                         bifunctors-5.4.1@bifunctors-5.4.1-8Xk5Wsnk1fr6rBLkW9MO8p:Data.Bifunctor.Wrapped
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         ghc-boot-th-8.0.1@ghc-boot-th-8.0.1:GHC.LanguageExtensions.Type
                         kan-extensions-5.0.1@kan-extensions-5.0.1-Asa0tkk9PuPLZ2eXuJ10Gr:Data.Functor.Day
                         kan-extensions-5.0.1@kan-extensions-5.0.1-Asa0tkk9PuPLZ2eXuJ10Gr:Data.Functor.Yoneda
                         lens-4.14@lens-4.14-LQbbTc84mRL8zB39b41ZKA:Control.Lens.At
                         lens-4.14@lens-4.14-LQbbTc84mRL8zB39b41ZKA:Control.Lens.Internal.Indexed
                         lens-4.14@lens-4.14-LQbbTc84mRL8zB39b41ZKA:Control.Lens.Reified
                         lens-4.14@lens-4.14-LQbbTc84mRL8zB39b41ZKA:Control.Lens.Tuple
                         lens-4.14@lens-4.14-LQbbTc84mRL8zB39b41ZKA:Control.Lens.Wrapped
                         lens-4.14@lens-4.14-LQbbTc84mRL8zB39b41ZKA:Control.Lens.Zoom
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa:Control.Monad.Primitive
                         profunctors-5.2@profunctors-5.2-2ZZOz6u59T2H8y7z3NgZkY:Data.Profunctor.Rep
                         tagged-0.8.5@tagged-0.8.5-CtgV6EcN0do8F92i1S6iYx:Data.Tagged
                         template-haskell-2.11.0.0:Language.Haskell.TH.Syntax
                         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text
                         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Lazy
                         unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-Eo9jd5DMz45DhBLCG8skzW:Data.HashMap.Base
                         unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-Eo9jd5DMz45DhBLCG8skzW:Data.HashSet
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Primitive
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Storable
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Unboxed
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Unboxed.Base
import  -/  Alias ba36719cc8f68ab87c0ee8446a683f1b
  exports: 03b73823d7379fa3fc65780b7c8ac5e2
  BitBoard 461830e1b89cbd9e95b01ba7aa2fcc74
  Square 47e0dc39b5f004e762e108114ef07a8d
import  -/  BasicData 2a7d7454833f4f04d9c30a40b6d5a151
  exports: 05582099e9a48170ebc021a187a7905d
  BK 7caad9abe9cf60d0b1a7c5414f6d577e
  BQ 229c6fcca59729774df58455384aa0c8
  Bishop 42c313f81738f26581e31bd53cfbd397
  Black 522357099ddcd83c850e6a6c2fedd453
  CastleRight eb148c194a6596da1eda8b5ef23786a4
  Color 7aa905d66113e099b17b06056ad98d42
  King 2db3132eee6067b9d25bc0e1fc945cfa
  Knight 461e5adbab338f7e2a030d9d47abe91e
  None b1232ae54e6bd060dc8f1488c990610f
  Pawn 1b02be8111f4c89ef250a784fb2986fe
  Position 682d610c9d78016fb58efbcec8bc1ded
  Position a4a6ae1d21eb516f790aeadb42103ac1
  Queen 9934c7b69e70a8646bf6b75fda804ef3
  Rook 86ec96c7cf9e9c94d4763e21a3c09b90
  WK 88f5fc9ca08a1b970f0d7e82fa6925fe
  WKWQBKBQ 7521613fbe5c7b165bdf29065210a941
  WQ 7bb6785061a839cc42c3c2785baa346c
  White 1ed56db967e8b2482365f6c064064144
  _activeColor 445b499e540a4303831b0166931f68a2
  _attackers f6a0ec5168d0bd061f1e7ebc903f5f17
  _bishops 663edc186d89d4d2be0499ee2e039ff6
  _castleRights 007098f7ab96b934ef9708c62eb45097
  _checkers 2bec81847b7309d4ff24a5ec96db960c
  _defendMap 5f68ea0a2ebd91af5cbf3d06d07a526c
  _defenders c89f714bc5316fdb2721de53e07a57d3
  _enPassantSquare c522fe044bcd73b3480f9069d2b470c6
  _halfMoveClock 536b630bc327c2fc2efd55a70c13e239
  _history c030db61a9d3b4d3da8215d9faa2a8b0
  _kings 4917f03ade766116e2fbf1b1c891e842
  _knights 13274a525dac4d4cda16a3e103f616be
  _materialBalance 05eea453fed00cdfc8a3b46bfd9945c3
  _pawns 71b6665db9140e0a03b6975ad31d389b
  _pinnedByBishops 72bcb096fdb377aa10dfe6481e6c42e2
  _pinnedByRooks ce9664f6e5272555221a0ec4e28c5c9f
  _plyCount 073ebcc7be0988142819919f499cda18
  _queens 4a46d684bfd5ea4ad430b16e0b96b44e
  _rooks 1ddb89a9e91db5f37f357b50bdc9e384
  _zobristKey 65972c6976f94e107b02aa43c8598294
  activeColor 071921c133c539dfc0de6ff816d9e34b
  castleRights f33a95d7097838205292420f28dc0e95
  checkers 1a7e1ccd17cb24578188eae50a6db3ec
  defendMap 03f4a8eb3251f8e297a2fe161b2fad6e
  enPassantSquare df67d607ce3f9b804f018ccc8fe030d0
  halfMoveClock 027d680dbe2d40c32a9f8d351176e310
  materialBalance 95ffff258b0622515319013592ccfc7a
  pinnedByBishops b0b107e4c70cee430cb3bc936749768a
  pinnedByRooks 4ba1bdbcbfe0f74ec552ce80b2d92177
  plyCount 89e6ae44a85de21278080acc314226ce
  zobristKey a343609122229b3a5de0a209162b4bf2
import  -/  BitBoard 546ecb469d7a09f0dc9092f9430e44fc
  exports: 581f8ad67b3ac061648269de5226c9ef
import  -/  Position af8b43b323818dabb635634fc880445d
  exports: 0d659c33f0a366721f46836234c7b111
  calcDefendMap fbe22dcaaa5a1629370cb28aeabf18a8
  calcHashKey 587b13a99669afd8fd8fa93209bd0292
  calcMaterial 2202c4d994a6e332c4c70b9831519b65
  combineCastleRight 38623f5dad674c336fdd6e11c9f06543
  findCheckers 6fd767fe79a5c1cc26c7ac42735a43e6
  findPinners 2779b2099578848b244f92367ff9fb49
  overAttacker 8244dc02c50ffb671d439fe03085d1c2
  overDefender 3214a28494861cdaf6e2b36bbde8480b
  swapOccupancy c20508c10003f85ad8a18a07025a55f1
import  -/  base-4.9.0.0:Control.Monad b6b2f076948b5e8acd6d95beb4d22bfc
import  -/  base-4.9.0.0:Data.Bits c954f6297e2203ba924b7d4bb91aa2cf
import  -/  base-4.9.0.0:Data.Char 793b969914b1622fef8ab278ed0a2b7f
import  -/  base-4.9.0.0:Data.Either 4cef602ce360a0155ac0dd580a5b4863
import  -/  base-4.9.0.0:Data.Foldable 3cbed01c922be29649c33015287c82ca
import  -/  base-4.9.0.0:Data.Function 2d30bad1e59b32e49b27f71226717080
import  -/  base-4.9.0.0:Data.Functor 67cebb006c069ea73adcd2d468cdb0dc
import  -/  base-4.9.0.0:GHC.Base dd8044a8d640eee51828c17c476a6ba7
import  -/  base-4.9.0.0:GHC.Enum dab7089478c738f0ffbf72212d9113c9
import  -/  base-4.9.0.0:GHC.Err 20faef8829fd13c027d0ee2213637534
import  -/  base-4.9.0.0:GHC.Num f0aed3315b3ed1b330b71fc4148a5581
import  -/  base-4.9.0.0:GHC.Show 0b5845243cb2ec62b57dd6963d276ec6
import  -/  base-4.9.0.0:GHC.Unicode 01f7a6469be023f2c0f9e458d1a0270d
import  -/  base-4.9.0.0:Prelude 2d9cd8b0ec3d728f62b734df888d2e34
import  -/  base-4.9.0.0:Text.Read 575a1becf4a56881b7def2de5a4c3776
import  -/  ghc-prim-0.5.0.0:GHC.Classes 16d48e012d23eaef9bca91ccdd572c02
import  -/  lens-4.14@lens-4.14-LQbbTc84mRL8zB39b41ZKA:Control.Lens b7b80d679f99639b22dc49438349ebe7
import  -/  lens-4.14@lens-4.14-LQbbTc84mRL8zB39b41ZKA:Control.Lens.Setter 5dd87d764c6c78a841d6cc4f4c0b1fef
import  -/  parsec-3.1.11@parsec-3.1.11-BCos4GEVCuDB8dnOCBHO6X:Text.Parsec.Char 57117d17ce17ef9463540edcdc97610b
import  -/  parsec-3.1.11@parsec-3.1.11-BCos4GEVCuDB8dnOCBHO6X:Text.Parsec.Combinator 1a2ef36c8a48280ce547ddaa18f7002a
import  -/  parsec-3.1.11@parsec-3.1.11-BCos4GEVCuDB8dnOCBHO6X:Text.Parsec.Prim de538d594582aa2c50955277a135de5c
import  -/  parsec-3.1.11@parsec-3.1.11-BCos4GEVCuDB8dnOCBHO6X:Text.Parsec.String 501b7a7ece4f69a07fec7fc90fce1db1
import  -/  parsec-3.1.11@parsec-3.1.11-BCos4GEVCuDB8dnOCBHO6X:Text.ParserCombinators.Parsec f11c372e358015ded8bcc547d1910ef0
9b3818c13a5240ced637dd66cc13ec33
  $s$fStream[]mtok ::
    Text.Parsec.Prim.Stream [tok] Data.Functor.Identity.Identity tok
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ tok.
                  @ [tok]
                  @ Data.Functor.Identity.Identity
                  @ tok
                  (Constructor.$s$fStream[]mtok_$s$fStream[]mtok_$cp1Stream @ tok)
                  (Constructor.$s$fStream[]mtok_$s$fStream[]mtok_$cuncons @ tok) -}
7ddea1b85db7012ca213c709fc824146
  $s$fStream[]mtok_$s$fStream[]mtok_$cp1Stream ::
    GHC.Base.Monad Data.Functor.Identity.Identity
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                (\ @ tok -> Data.Functor.Identity.$fMonadIdentity) -}
6bdc97030d581f2786cc0e99f050d17a
  $s$fStream[]mtok_$s$fStream[]mtok_$cuncons ::
    [tok]
    -> Data.Functor.Identity.Identity (GHC.Base.Maybe (tok, [tok]))
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ @ tok (ds :: [tok]) ->
                 case ds of wild {
                   []
                   -> GHC.Base.$
                        @ 'GHC.Types.PtrRepLifted
                        @ (GHC.Base.Maybe (tok, [tok]))
                        @ (Data.Functor.Identity.Identity (GHC.Base.Maybe (tok, [tok])))
                        (Data.Functor.Identity.$fApplicativeIdentity_$cpure
                           @ (GHC.Base.Maybe (tok, [tok])))
                        (GHC.Base.Nothing @ (tok, [tok]))
                   : t ts
                   -> GHC.Base.$
                        @ 'GHC.Types.PtrRepLifted
                        @ (GHC.Base.Maybe (tok, [tok]))
                        @ (Data.Functor.Identity.Identity (GHC.Base.Maybe (tok, [tok])))
                        (Data.Functor.Identity.$fApplicativeIdentity_$cpure
                           @ (GHC.Base.Maybe (tok, [tok])))
                        (GHC.Base.Just @ (tok, [tok]) (t, ts)) }) -}
f1c6f63d0fa359df8965807eeacd34c3
  $swhen1 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> (()
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (()
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,U(U,U,U)><L,A><L,A><C(C(C(S))),1*C1(C1(C1(U)))><L,A>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (s1 :: Text.Parsec.Prim.State GHC.Base.String ())
                   (ds :: ()
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (ds1 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (eok :: ()
                           -> Text.Parsec.Prim.State GHC.Base.String ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (ds2 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b) ->
                 eok
                   GHC.Tuple.()
                   s1
                   (case s1 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                    Text.Parsec.Error.ParseError
                      ds4
                      (GHC.Types.[] @ Text.Parsec.Error.Message) })) -}
0c7a9dd7cbfbe606c90b381ac84eb935
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Constructor.$trModule2
                   Constructor.$trModule1) -}
6696aae9fd3468227d80b56f59b71d44
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Constructor"#) -}
ea9e9a8c912af139118f331e37f4bda4
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "Sophy-0.1.0.0-KzkJ0b2opaf7oLnrOdwoet"#) -}
b58e1b2947f0a73546dc6f56411c61f6
  $wcastlingRightParser ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (BasicData.CastleRight
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 4,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(U)>,
     Inline: [0] -}
401bb7a28ed19dc9895d91ae884d7698
  $wcolorParser ::
    [GHC.Types.Char]
    -> Text.Parsec.Pos.SourceName
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> ()
    -> (BasicData.Color
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 8,
     Strictness: <L,U><L,U><S,U><S,U><S,U><L,C(C1(C1(U)))><L,C(U)><L,C(U)>,
     Inline: [0],
     Unfolding: (\ @ b1
                   (ww :: [GHC.Types.Char])
                   (ww1 :: Text.Parsec.Pos.SourceName)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: ())
                   (w :: BasicData.Color
                         -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1)
                   (w1 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w2 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1) ->
                 Text.Parsec.Char.$wsatisfy
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ ()
                   (Constructor.$s$fStream[]mtok @ GHC.Types.Char)
                   Constructor.colorParser2
                   @ b1
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   (\ (x :: GHC.Types.Char)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    case s2 of ww5 { Text.Parsec.Prim.State ww6 ww7 ww8 ->
                    case ww7 of ww9 { Text.Parsec.Pos.SourcePos ww10 ww11 ww12 ->
                    let {
                      k :: BasicData.Color
                      = case x of wild { GHC.Types.C# x1 ->
                        case x1 of wild1 {
                          DEFAULT -> BasicData.Black 'w'# -> BasicData.White } }
                    } in
                    Text.Parsec.Char.$wsatisfy
                      @ GHC.Base.String
                      @ Data.Functor.Identity.Identity
                      @ ()
                      (Constructor.$s$fStream[]mtok @ GHC.Types.Char)
                      GHC.Unicode.isSpace
                      @ b1
                      ww6
                      ww10
                      ww11
                      ww12
                      ww8
                      (\ (x1 :: GHC.Types.Char)
                         (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err1 :: Text.Parsec.Error.ParseError)[OneShot] ->
                       w k
                         s1
                         (case s1 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                          case ds4 of ww13 { Text.Parsec.Pos.SourcePos ww14 ww15 ww16 ->
                          case err1 of ww17 { Text.Parsec.Error.ParseError ww18 ww19 ->
                          case ww18 of ww20 { Text.Parsec.Pos.SourcePos ww21 ww22 ww23 ->
                          case Text.Parsec.Error.$wmergeError
                                 ww21
                                 ww22
                                 ww23
                                 ww19
                                 ww14
                                 ww15
                                 ww16
                                 (GHC.Types.[]
                                    @ Text.Parsec.Error.Message) of ww24 { (#,#) ww25 ww26 ->
                          Text.Parsec.Error.ParseError ww25 ww26 } } } } }))
                      (\ (err1 :: Text.Parsec.Error.ParseError) ->
                       w1
                         (case err of ww13 { Text.Parsec.Error.ParseError ww14 ww15 ->
                          case ww14 of ww16 { Text.Parsec.Pos.SourcePos ww17 ww18 ww19 ->
                          case err1 of ww20 { Text.Parsec.Error.ParseError ww21 ww22 ->
                          case Text.Parsec.Prim.$wsetExpectErrors
                                 ww21
                                 ww22
                                 Constructor.colorParser_msgs of ww23 { (#,#) ww24 ww25 ->
                          case ww24 of ww26 { Text.Parsec.Pos.SourcePos ww27 ww28 ww29 ->
                          case Text.Parsec.Error.$wmergeError
                                 ww17
                                 ww18
                                 ww19
                                 ww15
                                 ww27
                                 ww28
                                 ww29
                                 ww25 of ww30 { (#,#) ww31 ww32 ->
                          Text.Parsec.Error.ParseError ww31 ww32 } } } } } })) } })
                   w2) -}
794e5b770e393de316d815405d28ce31
  $wfenParser ::
    [GHC.Types.Char]
    -> Text.Parsec.Pos.SourceName
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> ()
    -> (BasicData.Position
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 8,
     Strictness: <L,U><L,U><S,U><S,U><S,U><L,C(C1(C1(U)))><L,U><L,C(U)>,
     Inline: [0] -}
72aa69139c07f59417cac62178c40aa7
  $wplacementParser ::
    GHC.Types.Int
    -> forall b.
       [GHC.Types.Char]
       -> Text.Parsec.Pos.SourceName
       -> GHC.Prim.Int#
       -> GHC.Prim.Int#
       -> ()
       -> ((BasicData.Position -> BasicData.Position)
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 9,
     Strictness: <L,U(U)><L,U><L,U><S,U><S,U><S,U><L,C(C1(C1(U)))><L,U><L,C(U)>,
     Inline: [0] -}
c543c9698a143833a9a294ac2310e267
  $wsquareParser ::
    [GHC.Types.Char]
    -> Text.Parsec.Pos.SourceName
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> ()
    -> (Alias.BitBoard
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 8,
     Strictness: <L,U><L,U><S,U><S,U><S,U><L,C(C1(C1(U)))><L,C(U)><L,C(U)>,
     Inline: [0],
     Unfolding: (\ @ b1
                   (ww :: [GHC.Types.Char])
                   (ww1 :: Text.Parsec.Pos.SourceName)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: ())
                   (w :: Alias.BitBoard
                         -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1)
                   (w1 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w2 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1) ->
                 Text.Parsec.Char.$wsatisfy
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ ()
                   (Constructor.$s$fStream[]mtok @ GHC.Types.Char)
                   Constructor.bitBoardOf7
                   @ b1
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   (\ (x :: GHC.Types.Char)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    case s2 of ww5 { Text.Parsec.Prim.State ww6 ww7 ww8 ->
                    case ww7 of ww9 { Text.Parsec.Pos.SourcePos ww10 ww11 ww12 ->
                    let {
                      lvl12 :: GHC.Types.Int
                      = case x of wild { GHC.Types.C# c# ->
                        GHC.Types.I#
                          (GHC.Prim.-# 7# (GHC.Prim.-# (GHC.Prim.ord# c#) 97#)) }
                    } in
                    Text.Parsec.Char.$wsatisfy
                      @ GHC.Base.String
                      @ Data.Functor.Identity.Identity
                      @ ()
                      (Constructor.$s$fStream[]mtok @ GHC.Types.Char)
                      Constructor.bitBoardOf5
                      @ b1
                      ww6
                      ww10
                      ww11
                      ww12
                      ww8
                      (\ (x1 :: GHC.Types.Char)
                         (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err1 :: Text.Parsec.Error.ParseError)[OneShot] ->
                       w (case lvl12 of wild { GHC.Types.I# x2 ->
                          case x1 of wild1 { GHC.Types.C# c# ->
                          let {
                            i# :: GHC.Prim.Int#
                            = GHC.Prim.+#
                                x2
                                (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.ord# c#) 49#) 8#)
                          } in
                          case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.>=# i# 64#) of wild2 {
                            GHC.Types.False -> GHC.Word.W64# (GHC.Prim.uncheckedShiftL# 1## i#)
                            GHC.Types.True -> Constructor.bitBoardOf4 } } })
                         s1
                         (case s1 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                          case ds4 of ww13 { Text.Parsec.Pos.SourcePos ww14 ww15 ww16 ->
                          case err1 of ww17 { Text.Parsec.Error.ParseError ww18 ww19 ->
                          case ww18 of ww20 { Text.Parsec.Pos.SourcePos ww21 ww22 ww23 ->
                          case Text.Parsec.Error.$wmergeError
                                 ww21
                                 ww22
                                 ww23
                                 ww19
                                 ww14
                                 ww15
                                 ww16
                                 (GHC.Types.[]
                                    @ Text.Parsec.Error.Message) of ww24 { (#,#) ww25 ww26 ->
                          Text.Parsec.Error.ParseError ww25 ww26 } } } } }))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       w1 (Text.Parsec.Error.mergeError err err')) } })
                   w2) -}
ab59aa0e58c1f9558e2e8b776741ba61
  bitBoardOf :: GHC.Base.String -> Alias.BitBoard
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (x :: GHC.Base.String) ->
                 case (Text.Parsec.Prim.runPT
                         @ GHC.Base.String
                         @ Data.Functor.Identity.Identity
                         @ GHC.Types.Char
                         @ ()
                         @ Alias.BitBoard
                         (Constructor.$s$fStream[]mtok @ GHC.Types.Char)
                         Constructor.bitBoardOf3
                           `cast`
                         (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                   <[GHC.Types.Char]>_R
                                   <()>_R
                                   <Data.Functor.Identity.Identity>_R
                                   <Alias.BitBoard>_R))
                         GHC.Tuple.()
                         Constructor.bitBoardOf2
                         x)
                        `cast`
                      (Data.Functor.Identity.N:Identity[0]
                           <Data.Either.Either
                              Text.Parsec.Error.ParseError Alias.BitBoard>_R) of wild {
                   Data.Either.Left x1 -> Constructor.bitBoardOf1 x1
                   Data.Either.Right y -> y }) -}
dbb184017cb654f79d9fdf2acc9dca77
  bitBoardOf1 :: Text.Parsec.Error.ParseError -> Alias.BitBoard
  {- Arity: 1, Strictness: <L,U>x -}
fa210ab704c3b07309a5fa00b7812460
  bitBoardOf2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Failed to parse square coordinates."#) -}
e1656d771ef0545ae7c5cb81462a061c
  bitBoardOf3 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Alias.BitBoard
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Alias.BitBoard
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <S(LS(LSS)S),1*U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,C(U)><L,A><L,C(U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ b1
                   (w :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (w1 :: Alias.BitBoard
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w2 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w3 :: Alias.BitBoard
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w4 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1) ->
                 case w of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                 Constructor.$wsquareParser
                   @ b1
                   ww1
                   ww5
                   ww6
                   ww7
                   ww3
                   w1
                   w2
                   w4 } }) -}
e66d8259cfeaa184a5a2e04712741180
  bitBoardOf4 :: GHC.Word.Word64
  {- HasNoCafRefs, Unfolding: (GHC.Word.W64# 0##) -}
c9e2474c7454da45cff15435e4e35e04
  bitBoardOf5 :: GHC.Types.Char -> GHC.Types.Bool
  {- Arity: 1,
     Unfolding: (\ (c :: GHC.Types.Char) ->
                 GHC.List.elem
                   @ GHC.Types.Char
                   GHC.Classes.$fEqChar
                   c
                   Constructor.bitBoardOf6) -}
a2847efc655032bc1228f554b8332876
  bitBoardOf6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "12345678"#) -}
1beb5f6939df8f37504370bbbc8d9b11
  bitBoardOf7 :: GHC.Types.Char -> GHC.Types.Bool
  {- Arity: 1,
     Unfolding: (\ (c :: GHC.Types.Char) ->
                 GHC.List.elem
                   @ GHC.Types.Char
                   GHC.Classes.$fEqChar
                   c
                   Constructor.bitBoardOf8) -}
e32db8451e4a7f7088bfa0a84fd4174c
  bitBoardOf8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "abcdefgh"#) -}
d76fdae81c8d22939325bd33f875ee8d
  castlingRightParser ::
    Text.Parsec.String.Parser BasicData.CastleRight
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Constructor.castlingRightParser1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <BasicData.CastleRight>_R)) -}
9fdd5facce4c8f187e1bd034deafdb67
  castlingRightParser1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (BasicData.CastleRight
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (BasicData.CastleRight
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,A><L,C(U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, True)
                (\ @ b1
                   (w :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (w1 :: BasicData.CastleRight
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w2 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w3 :: BasicData.CastleRight
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w4 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1) ->
                 Constructor.$wcastlingRightParser @ b1 w w1 w2 w4) -}
4d4ea8844c4355179766e4bb6043e836
  colorParser :: Text.Parsec.String.Parser BasicData.Color
  {- Arity: 5,
     Strictness: <S(LS(LSS)S),1*U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,C(U)><L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Constructor.colorParser1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <BasicData.Color>_R)) -}
503b82225af7913d2b170a74eb6a4428
  colorParser1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (BasicData.Color
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (BasicData.Color
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <S(LS(LSS)S),1*U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,C(U)><L,A><L,C(U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ b1
                   (w :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (w1 :: BasicData.Color
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w2 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w3 :: BasicData.Color
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w4 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1) ->
                 case w of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                 Constructor.$wcolorParser @ b1 ww1 ww5 ww6 ww7 ww3 w1 w2 w4 } }) -}
64fa1d1059b6354b648ccaffdd954453
  colorParser2 :: GHC.Types.Char -> GHC.Types.Bool
  {- Arity: 1,
     Unfolding: (\ (c :: GHC.Types.Char) ->
                 GHC.List.elem
                   @ GHC.Types.Char
                   GHC.Classes.$fEqChar
                   c
                   Constructor.colorParser3) -}
ff02a5dac6892c5548e967c08ad8f620
  colorParser3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "wb"#) -}
d54febdbc202a6c39c00ce665ef90bfb
  colorParser_msgs :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Text.Parsec.Char.space2
                   (GHC.Types.[] @ GHC.Base.String)) -}
7b3e0547271d83723895f61880c03719
  enPassantParser :: Text.Parsec.String.Parser Alias.Square
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Constructor.enPassantParser1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <Alias.Square>_R)) -}
9bc7564b217d13b324e16e1aaf7a781b
  enPassantParser1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Alias.Square
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Alias.Square
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)> -}
4a5c10e8505b8f73faa4151ccce58aa1
  fenParser :: Text.Parsec.String.Parser BasicData.Position
  {- Arity: 5,
     Strictness: <S(LS(LSS)S),1*U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Constructor.fenParser1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <BasicData.Position>_R)) -}
4be5855433533bce10b1e1908c256c00
  fenParser1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (BasicData.Position
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (BasicData.Position
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <S(LS(LSS)S),1*U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,A><L,C(U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ b1
                   (w :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (w1 :: BasicData.Position
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w2 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w3 :: BasicData.Position
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w4 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1) ->
                 case w of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                 Constructor.$wfenParser @ b1 ww1 ww5 ww6 ww7 ww3 w1 w2 w4 } }) -}
f3f8907ed7d4a9a3b7da63d1f6ff7870
  fromFEN :: GHC.Base.String -> BasicData.Position
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (x :: GHC.Base.String) ->
                 case (Text.Parsec.Prim.runPT
                         @ GHC.Base.String
                         @ Data.Functor.Identity.Identity
                         @ GHC.Types.Char
                         @ ()
                         @ BasicData.Position
                         (Constructor.$s$fStream[]mtok @ GHC.Types.Char)
                         Constructor.fenParser1
                           `cast`
                         (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                   <[GHC.Types.Char]>_R
                                   <()>_R
                                   <Data.Functor.Identity.Identity>_R
                                   <BasicData.Position>_R))
                         GHC.Tuple.()
                         Constructor.fromFEN2
                         x)
                        `cast`
                      (Data.Functor.Identity.N:Identity[0]
                           <Data.Either.Either
                              Text.Parsec.Error.ParseError BasicData.Position>_R) of wild {
                   Data.Either.Left x1 -> Constructor.fromFEN1 x1
                   Data.Either.Right y -> y }) -}
dd422018799ffad17e387a21d04e059f
  fromFEN1 :: Text.Parsec.Error.ParseError -> BasicData.Position
  {- Arity: 1, Strictness: <L,U>x -}
bd67352b97ff3847bcf45b26daa6295a
  fromFEN2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Failed to parse FEN"#) -}
0a75bd94c61702570131f3dcb87d2606
  fullMoveParser :: Text.Parsec.String.Parser GHC.Types.Int
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Constructor.fullMoveParser1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <GHC.Types.Int>_R)) -}
e07ded1eb556a8b1db7955ec2eb436cd
  fullMoveParser1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (GHC.Types.Int
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (GHC.Types.Int
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (cok :: GHC.Types.Int
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: GHC.Types.Int
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 Text.Parsec.Combinator.$wmany1
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   @ ()
                   @ GHC.Types.Char
                   Constructor.fullMoveParser8
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Types.Char>_R))
                   @ b1
                   s1
                   (\ (x :: [GHC.Types.Char])
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    Constructor.fullMoveParser2
                      x
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x1 :: GHC.Types.Int)
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       cok x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       cerr (Text.Parsec.Error.mergeError err err')))
                   cerr
                   (\ (x :: [GHC.Types.Char])
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    Constructor.fullMoveParser2
                      x
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x1 :: GHC.Types.Int)
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       eok x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       eerr (Text.Parsec.Error.mergeError err err')))
                   eerr) -}
b5bcab5ce80678c5cf0eaaaf0bbf2a1b
  fullMoveParser10 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Unfolding: (\ @ b
                   (w2 :: Text.Parsec.Prim.State GHC.Base.String ())[OneShot]
                   (w3 :: GHC.Types.Char
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)[OneShot]
                   (w4 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)[OneShot]
                   (w5 :: GHC.Types.Char
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)[OneShot]
                   (w6 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)[OneShot] ->
                 case w2 of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                 Text.Parsec.Char.$wsatisfy
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ ()
                   (Constructor.$s$fStream[]mtok @ GHC.Types.Char)
                   GHC.Unicode.isDigit
                   @ b
                   ww1
                   ww5
                   ww6
                   ww7
                   ww3
                   w3
                   w6 } }) -}
928f0d6a0e04d5193aea88fc3070df15
  fullMoveParser2 ::
    [GHC.Types.Char]
    -> forall b.
       Text.Parsec.Prim.State GHC.Base.String ()
       -> (GHC.Types.Int
           -> Text.Parsec.Prim.State GHC.Base.String ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (GHC.Types.Int
           -> Text.Parsec.Prim.State GHC.Base.String ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 6,
     Strictness: <L,U><L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: (\ (xs :: [GHC.Types.Char])
                   @ b
                   (eta :: Text.Parsec.Prim.State GHC.Base.String ())
                   (eta1 :: GHC.Types.Int
                            -> Text.Parsec.Prim.State GHC.Base.String ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta2 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta3 :: GHC.Types.Int
                            -> Text.Parsec.Prim.State GHC.Base.String ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta4 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Prim.<?>2
                   @ GHC.Base.String
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Int
                   (\ @ b1
                      (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (ds :: GHC.Types.Int
                             -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                             -> Text.Parsec.Error.ParseError
                             -> Data.Functor.Identity.Identity b1)[OneShot]
                      (ds1 :: Text.Parsec.Error.ParseError
                              -> Data.Functor.Identity.Identity b1)[OneShot]
                      (eok :: GHC.Types.Int
                              -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                              -> Text.Parsec.Error.ParseError
                              -> Data.Functor.Identity.Identity b1)[OneShot]
                      (ds2 :: Text.Parsec.Error.ParseError
                              -> Data.Functor.Identity.Identity b1)[OneShot] ->
                    eok
                      (case Text.Read.readEither6
                              @ GHC.Types.Int
                              (Text.ParserCombinators.ReadP.run
                                 @ GHC.Types.Int
                                 Constructor.fullMoveParser7
                                 xs) of wild {
                         [] -> Constructor.fullMoveParser6
                         : x ds4
                         -> case ds4 of wild1 {
                              [] -> x : ipv ipv1 -> Constructor.fullMoveParser5 } })
                      s1
                      (case s1 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                       Text.Parsec.Error.ParseError
                         ds4
                         (GHC.Types.[] @ Text.Parsec.Error.Message) }))
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Types.Int>_R))
                   Constructor.fullMoveParser3
                   @ b
                   eta
                   eta1
                   eta2
                   eta3
                   eta4) -}
bb3077e22bd2597c9516b1d03f1529e8
  fullMoveParser3 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Constructor.fullMoveParser4
                   (GHC.Types.[] @ GHC.Base.String)) -}
be09d52e3905f73cdb55caab4ed58aaa
  fullMoveParser4 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "full move number"#) -}
9f7fdd00a3796a83d3a45ce6065a3f46
  fullMoveParser5 :: GHC.Types.Int
  {- Strictness: x -}
dff8364ebb63d01f49d6b8c211b6fde9
  fullMoveParser6 :: GHC.Types.Int
  {- Strictness: x -}
10a3b72bc94b0b6705a9db0f328b71d3
  fullMoveParser7 :: Text.ParserCombinators.ReadP.P GHC.Types.Int
  {- Unfolding: ((GHC.Read.$fReadInt3
                    GHC.Read.$fReadInt_$sconvertInt
                    Text.ParserCombinators.ReadPrec.minPrec)
                   `cast`
                 (Text.ParserCombinators.ReadP.N:ReadP[0] <GHC.Types.Int>_R)
                   @ GHC.Types.Int
                   (Text.Read.readEither5 @ GHC.Types.Int)) -}
b7d66fa025f407ddcfb0cfb274124f3d
  fullMoveParser8 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: (\ @ b
                   (eta :: Text.Parsec.Prim.State GHC.Base.String ())
                   (eta1 :: GHC.Types.Char
                            -> Text.Parsec.Prim.State GHC.Base.String ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta2 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta3 :: GHC.Types.Char
                            -> Text.Parsec.Prim.State GHC.Base.String ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta4 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Prim.<?>2
                   @ GHC.Base.String
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   Constructor.fullMoveParser10
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Types.Char>_R))
                   Constructor.fullMoveParser9
                   @ b
                   eta
                   eta1
                   eta2
                   eta3
                   eta4) -}
9451882004cdb3bd4da803fa93708441
  fullMoveParser9 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Text.Parsec.Char.digit2
                   (GHC.Types.[] @ GHC.Base.String)) -}
e004abddd60f47468512481672f429fb
  halfMoveParser :: Text.Parsec.String.Parser GHC.Types.Int
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Constructor.halfMoveParser1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <GHC.Types.Int>_R)) -}
4bcba0a5c2c9defdb789ef8a8125e90b
  halfMoveParser1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (GHC.Types.Int
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (GHC.Types.Int
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (cok :: GHC.Types.Int
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: GHC.Types.Int
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 Text.Parsec.Combinator.$wmany1
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   @ ()
                   @ GHC.Types.Char
                   Constructor.fullMoveParser8
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Types.Char>_R))
                   @ b1
                   s1
                   (\ (x :: [GHC.Types.Char])
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    Constructor.halfMoveParser2
                      x
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x1 :: GHC.Types.Int)
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       cok x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       cerr (Text.Parsec.Error.mergeError err err')))
                   cerr
                   (\ (x :: [GHC.Types.Char])
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    Constructor.halfMoveParser2
                      x
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x1 :: GHC.Types.Int)
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       eok x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       eerr (Text.Parsec.Error.mergeError err err')))
                   eerr) -}
8afe0ad27346b32309ae81d046ef14f0
  halfMoveParser2 ::
    [GHC.Types.Char]
    -> forall b.
       Text.Parsec.Prim.State GHC.Base.String ()
       -> (GHC.Types.Int
           -> Text.Parsec.Prim.State GHC.Base.String ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (GHC.Types.Int
           -> Text.Parsec.Prim.State GHC.Base.String ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 6,
     Strictness: <L,U><L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: (\ (xs :: [GHC.Types.Char])
                   @ b
                   (eta :: Text.Parsec.Prim.State GHC.Base.String ())
                   (eta1 :: GHC.Types.Int
                            -> Text.Parsec.Prim.State GHC.Base.String ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta2 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta3 :: GHC.Types.Int
                            -> Text.Parsec.Prim.State GHC.Base.String ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta4 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Prim.<?>2
                   @ GHC.Base.String
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Int
                   (\ @ b1
                      (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (ds :: GHC.Types.Int
                             -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                             -> Text.Parsec.Error.ParseError
                             -> Data.Functor.Identity.Identity b1)[OneShot]
                      (ds1 :: Text.Parsec.Error.ParseError
                              -> Data.Functor.Identity.Identity b1)[OneShot]
                      (eok :: GHC.Types.Int
                              -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                              -> Text.Parsec.Error.ParseError
                              -> Data.Functor.Identity.Identity b1)[OneShot]
                      (ds2 :: Text.Parsec.Error.ParseError
                              -> Data.Functor.Identity.Identity b1)[OneShot] ->
                    eok
                      (case Text.Read.readEither6
                              @ GHC.Types.Int
                              (Text.ParserCombinators.ReadP.run
                                 @ GHC.Types.Int
                                 Constructor.fullMoveParser7
                                 xs) of wild {
                         [] -> Constructor.fullMoveParser6
                         : x ds4
                         -> case ds4 of wild1 {
                              [] -> x : ipv ipv1 -> Constructor.fullMoveParser5 } })
                      s1
                      (case s1 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                       Text.Parsec.Error.ParseError
                         ds4
                         (GHC.Types.[] @ Text.Parsec.Error.Message) }))
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Types.Int>_R))
                   Constructor.halfMoveParser3
                   @ b
                   eta
                   eta1
                   eta2
                   eta3
                   eta4) -}
57e21670437a5da91963db0d53401c91
  halfMoveParser3 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Constructor.halfMoveParser4
                   (GHC.Types.[] @ GHC.Base.String)) -}
216e010192e090e64062c458a484962e
  halfMoveParser4 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "half move clock"#) -}
1be85a8959f5c6f9ab688f701b12b4bb
  nullPos :: BasicData.Position
  {- HasNoCafRefs,
     Unfolding: (BasicData.Position
                   0##
                   0##
                   0##
                   0##
                   0##
                   0##
                   0##
                   0##
                   BasicData.White
                   BasicData.WKWQBKBQ
                   0#
                   0#
                   0#
                   0##
                   0##
                   0##
                   0##
                   0#
                   0##
                   (GHC.Types.[] @ Alias.ZobristKey)) -}
6028ef155232f75afd748defa8009499
  placementParser ::
    GHC.Types.Int
    -> Text.Parsec.String.Parser
         (BasicData.Position -> BasicData.Position)
  {- Arity: 6,
     Strictness: <L,U(U)><S(LS(LSS)S),1*U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Constructor.placementParser1
                  `cast`
                (<GHC.Types.Int>_R
                 ->_R Sym (Text.Parsec.Prim.N:ParsecT[0]
                               <[GHC.Types.Char]>_R
                               <()>_R
                               <Data.Functor.Identity.Identity>_R
                               <BasicData.Position -> BasicData.Position>_R)) -}
dd062d8678fc530208154164f71e8fde
  placementParser1 ::
    GHC.Types.Int
    -> forall b.
       Text.Parsec.Prim.State [GHC.Types.Char] ()
       -> ((BasicData.Position -> BasicData.Position)
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> ((BasicData.Position -> BasicData.Position)
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 6,
     Strictness: <L,U(U)><S(LS(LSS)S),1*U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,A><L,C(U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (6, True, False)
                (\ (w :: GHC.Types.Int)
                   @ b
                   (w1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (w2 :: (BasicData.Position -> BasicData.Position)
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w3 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w4 :: (BasicData.Position -> BasicData.Position)
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w5 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b) ->
                 case w1 of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                 Constructor.$wplacementParser
                   w
                   @ b
                   ww1
                   ww5
                   ww6
                   ww7
                   ww3
                   w2
                   w3
                   w5 } }) -}
8ab15c92916da7cd48fbd20d1e977f85
  squareParser :: Text.Parsec.String.Parser Alias.BitBoard
  {- Arity: 5,
     Strictness: <S(LS(LSS)S),1*U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,C(U)><L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Constructor.bitBoardOf3
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <Alias.BitBoard>_R)) -}
5208f4f9dfda6396701765a5179a8cc5
  startPos :: BasicData.Position
  {- Unfolding: (case Position.$wcalcHashKey
                        65535##
                        18446462598732840960##
                        71776119061282560##
                        4755801206503243842##
                        2594073385365405732##
                        9295429630892703873##
                        1152921504606846992##
                        576460752303423496##
                        BasicData.White
                        BasicData.WKWQBKBQ
                        0# of ww21 { DEFAULT ->
                 BasicData.Position
                   65535##
                   18446462598732840960##
                   71776119061282560##
                   4755801206503243842##
                   2594073385365405732##
                   9295429630892703873##
                   1152921504606846992##
                   576460752303423496##
                   BasicData.White
                   BasicData.WKWQBKBQ
                   0#
                   0#
                   0#
                   0##
                   0##
                   0##
                   9151313343305220096##
                   0#
                   ww21
                   (GHC.Types.[] @ Alias.ZobristKey) }) -}
"SPEC/Constructor $fStream[]mtok @ Identity _" [ALWAYS] forall @ tok
                                                               ($dMonad :: GHC.Base.Monad
                                                                             Data.Functor.Identity.Identity)
  Text.Parsec.Prim.$fStream[]mtok @ Data.Functor.Identity.Identity
                                  @ tok
                                  $dMonad
  = Constructor.$s$fStream[]mtok @ tok
"SPEC/Constructor $fStream[]mtok_$cp1Stream @ Identity _" [ALWAYS] forall @ tok
                                                                          ($dMonad :: GHC.Base.Monad
                                                                                        Data.Functor.Identity.Identity)
  Text.Parsec.Prim.$fStream[]mtok_$cp1Stream @ Data.Functor.Identity.Identity
                                             @ tok
                                             $dMonad
  = Constructor.$s$fStream[]mtok_$s$fStream[]mtok_$cp1Stream @ tok
"SPEC/Constructor $fStream[]mtok_$cuncons @ Identity _" [ALWAYS] forall @ tok
                                                                        ($dMonad :: GHC.Base.Monad
                                                                                      Data.Functor.Identity.Identity)
  Text.Parsec.Prim.$fStream[]mtok_$cuncons @ Data.Functor.Identity.Identity
                                           @ tok
                                           $dMonad
  = Constructor.$s$fStream[]mtok_$s$fStream[]mtok_$cuncons @ tok
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

