
==================== FINAL INTERFACE ====================
2016-12-17 14:57:14.1763707 UTC

interface Sophy-0.1.0.0-KzkJ0b2opaf7oLnrOdwoet:UCIData 8001
  interface hash: a9d75dada5b639f80328b8fcb8739284
  ABI hash: e12aa0037614391ae8459fe073d35b1d
  export-list hash: 073589906e6ccb158a796f12bd3be184
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: acc1c974f7645ccf38e9a66edab1c952
  sig of: Nothing
  used TH splices: False
  where
exports:
  UCIData.Author
  UCIData.Code
  UCIData.GoToken{UCIData.BInc UCIData.BTime UCIData.DepthLimit UCIData.Infinite UCIData.Mate UCIData.MoveTime UCIData.MovesToGO UCIData.NodeLimit UCIData.Ponder UCIData.SearchMoves UCIData.WInc UCIData.WTime}
  UCIData.Name
  UCIData.UCICommand{UCIData.Debug UCIData.Go UCIData.InPosition UCIData.IsReady UCIData.PonderHit UCIData.Quit UCIData.Register UCIData.RegisterLater UCIData.SetOption UCIData.Stop UCIData.UCI UCIData.UCINewGame}
  UCIData.Value
module dependencies: Alias BasicData Bitwise
package dependencies: StateVar-1.1.0.4@StateVar-1.1.0.4-CJpWsiXJdd89SnV9dZtTwc
                      adjunctions-4.3@adjunctions-4.3-3ol9sWZt3In19pwXwPv3Xc
                      array-0.5.1.1@array-0.5.1.1 base-4.9.0.0
                      base-orphans-0.5.4@base-orphans-0.5.4-5IQvrjd7gNP548VkOOyIq6
                      bifunctors-5.4.1@bifunctors-5.4.1-8Xk5Wsnk1fr6rBLkW9MO8p
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      comonad-5@comonad-5-2RMxpSOQ5MCHLHIelJrHD4
                      containers-0.5.7.1@containers-0.5.7.1
                      contravariant-1.4@contravariant-1.4-KSQE31a7FruKHDlp90hIUT
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      distributive-0.5.0.2@distributive-0.5.0.2-Cdz2vLOk85j1doGXLcictT
                      exceptions-0.8.3@exceptions-0.8.3-7py7fmRxowDFpHmiHGKrTb
                      free-4.12.4@free-4.12.4-Etm59Dm8iExFxAy1L49Ovd
                      ghc-boot-th-8.0.1@ghc-boot-th-8.0.1 ghc-prim-0.5.0.0
                      hashable-1.2.4.0@hashable-1.2.4.0-EMu4H7FB10MAl6hwKw992G
                      integer-gmp-1.0.0.1
                      kan-extensions-5.0.1@kan-extensions-5.0.1-Asa0tkk9PuPLZ2eXuJ10Gr
                      lens-4.14@lens-4.14-LQbbTc84mRL8zB39b41ZKA
                      mtl-2.2.1@mtl-2.2.1-6qsR1PHUy5lL47Hpoa4jCM
                      prelude-extras-0.4.0.3@prelude-extras-0.4.0.3-FAyB4iuuM7cHXdrLMZtdXq
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa
                      profunctors-5.2@profunctors-5.2-2ZZOz6u59T2H8y7z3NgZkY
                      reflection-2.1.2@reflection-2.1.2-J1ZzlxijzaHGRixYxgxlf9
                      semigroupoids-5.1@semigroupoids-5.1-1Gay4xNO77GHd4DGCzVuax
                      stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF
                      tagged-0.8.5@tagged-0.8.5-CtgV6EcN0do8F92i1S6iYx
                      template-haskell-2.11.0.0
                      text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s
                      transformers-0.5.2.0@transformers-0.5.2.0
                      transformers-compat-0.5.1.4@transformers-compat-0.5.1.4-81lZyuOJOvsD0zyCv2TKld
                      unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-Eo9jd5DMz45DhBLCG8skzW
                      vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6
orphans: base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         hashable-1.2.4.0@hashable-1.2.4.0-EMu4H7FB10MAl6hwKw992G:Data.Hashable.Generic
         reflection-2.1.2@reflection-2.1.2-J1ZzlxijzaHGRixYxgxlf9:Data.Reflection
         stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF:Control.Monad.STM
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Lazy
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Show
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Unboxed
family instance modules: adjunctions-4.3@adjunctions-4.3-3ol9sWZt3In19pwXwPv3Xc:Data.Functor.Rep
                         base-4.9.0.0:Control.Applicative base-4.9.0.0:Data.Complex
                         base-4.9.0.0:Data.Either base-4.9.0.0:Data.Functor.Compose
                         base-4.9.0.0:Data.Functor.Const base-4.9.0.0:Data.Functor.Identity
                         base-4.9.0.0:Data.Functor.Product base-4.9.0.0:Data.Functor.Sum
                         base-4.9.0.0:Data.List.NonEmpty base-4.9.0.0:Data.Monoid
                         base-4.9.0.0:Data.Semigroup base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:Data.Version base-4.9.0.0:Data.Void
                         base-4.9.0.0:GHC.Exts base-4.9.0.0:GHC.Generics
                         base-4.9.0.0:GHC.IO.Exception base-4.9.0.0:GHC.TypeLits
                         bifunctors-5.4.1@bifunctors-5.4.1-8Xk5Wsnk1fr6rBLkW9MO8p:Data.Bifunctor.Biff
                         bifunctors-5.4.1@bifunctors-5.4.1-8Xk5Wsnk1fr6rBLkW9MO8p:Data.Bifunctor.Clown
                         bifunctors-5.4.1@bifunctors-5.4.1-8Xk5Wsnk1fr6rBLkW9MO8p:Data.Bifunctor.Flip
                         bifunctors-5.4.1@bifunctors-5.4.1-8Xk5Wsnk1fr6rBLkW9MO8p:Data.Bifunctor.Join
                         bifunctors-5.4.1@bifunctors-5.4.1-8Xk5Wsnk1fr6rBLkW9MO8p:Data.Bifunctor.Joker
                         bifunctors-5.4.1@bifunctors-5.4.1-8Xk5Wsnk1fr6rBLkW9MO8p:Data.Bifunctor.Product
                         bifunctors-5.4.1@bifunctors-5.4.1-8Xk5Wsnk1fr6rBLkW9MO8p:Data.Bifunctor.Sum
                         bifunctors-5.4.1@bifunctors-5.4.1-8Xk5Wsnk1fr6rBLkW9MO8p:Data.Bifunctor.Tannen
                         bifunctors-5.4.1@bifunctors-5.4.1-8Xk5Wsnk1fr6rBLkW9MO8p:Data.Bifunctor.Wrapped
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         ghc-boot-th-8.0.1@ghc-boot-th-8.0.1:GHC.LanguageExtensions.Type
                         kan-extensions-5.0.1@kan-extensions-5.0.1-Asa0tkk9PuPLZ2eXuJ10Gr:Data.Functor.Day
                         kan-extensions-5.0.1@kan-extensions-5.0.1-Asa0tkk9PuPLZ2eXuJ10Gr:Data.Functor.Yoneda
                         lens-4.14@lens-4.14-LQbbTc84mRL8zB39b41ZKA:Control.Lens.At
                         lens-4.14@lens-4.14-LQbbTc84mRL8zB39b41ZKA:Control.Lens.Internal.Indexed
                         lens-4.14@lens-4.14-LQbbTc84mRL8zB39b41ZKA:Control.Lens.Reified
                         lens-4.14@lens-4.14-LQbbTc84mRL8zB39b41ZKA:Control.Lens.Tuple
                         lens-4.14@lens-4.14-LQbbTc84mRL8zB39b41ZKA:Control.Lens.Wrapped
                         lens-4.14@lens-4.14-LQbbTc84mRL8zB39b41ZKA:Control.Lens.Zoom
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa:Control.Monad.Primitive
                         profunctors-5.2@profunctors-5.2-2ZZOz6u59T2H8y7z3NgZkY:Data.Profunctor.Rep
                         tagged-0.8.5@tagged-0.8.5-CtgV6EcN0do8F92i1S6iYx:Data.Tagged
                         template-haskell-2.11.0.0:Language.Haskell.TH.Syntax
                         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text
                         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Lazy
                         unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-Eo9jd5DMz45DhBLCG8skzW:Data.HashMap.Base
                         unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-Eo9jd5DMz45DhBLCG8skzW:Data.HashSet
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Primitive
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Storable
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Unboxed
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Unboxed.Base
import  -/  BasicData 2a7d7454833f4f04d9c30a40b6d5a151
  exports: 05582099e9a48170ebc021a187a7905d
  Position a4a6ae1d21eb516f790aeadb42103ac1
import  -/  base-4.9.0.0:GHC.Base dd8044a8d640eee51828c17c476a6ba7
import  -/  base-4.9.0.0:GHC.Show 0b5845243cb2ec62b57dd6963d276ec6
import  -/  base-4.9.0.0:Prelude 2d9cd8b0ec3d728f62b734df888d2e34
import  -/  ghc-prim-0.5.0.0:GHC.Classes 16d48e012d23eaef9bca91ccdd572c02
31443aeb38aba9af626f3ad45a1284e5
  $fEqGoToken :: GHC.Classes.Eq UCIData.GoToken
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ UCIData.GoToken
                  UCIData.$fEqGoToken_$c==
                  UCIData.$fEqGoToken_$c/= -}
31443aeb38aba9af626f3ad45a1284e5
  $fEqGoToken_$c/= ::
    UCIData.GoToken -> UCIData.GoToken -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: UCIData.GoToken) (b :: UCIData.GoToken) ->
                 case UCIData.$fEqGoToken_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
31443aeb38aba9af626f3ad45a1284e5
  $fEqGoToken_$c== ::
    UCIData.GoToken -> UCIData.GoToken -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (ds :: UCIData.GoToken) (ds1 :: UCIData.GoToken) ->
                 case ds of wild {
                   UCIData.SearchMoves a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        UCIData.SearchMoves b1 -> GHC.Classes.$fEq[]_$s$c==2 a1 b1 }
                   UCIData.Ponder
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False UCIData.Ponder -> GHC.Types.True }
                   UCIData.WTime a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        UCIData.WTime b1 -> GHC.Classes.eqInt a1 b1 }
                   UCIData.BTime a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        UCIData.BTime b1 -> GHC.Classes.eqInt a1 b1 }
                   UCIData.WInc a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        UCIData.WInc b1 -> GHC.Classes.eqInt a1 b1 }
                   UCIData.BInc a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        UCIData.BInc b1 -> GHC.Classes.eqInt a1 b1 }
                   UCIData.MovesToGO a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        UCIData.MovesToGO b1 -> GHC.Classes.eqInt a1 b1 }
                   UCIData.DepthLimit a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        UCIData.DepthLimit b1 -> GHC.Classes.eqInt a1 b1 }
                   UCIData.NodeLimit a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        UCIData.NodeLimit b1 -> GHC.Classes.eqInt a1 b1 }
                   UCIData.Mate a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        UCIData.Mate b1 -> GHC.Classes.eqInt a1 b1 }
                   UCIData.MoveTime a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        UCIData.MoveTime b1 -> GHC.Classes.eqInt a1 b1 }
                   UCIData.Infinite
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        UCIData.Infinite -> GHC.Types.True } }) -}
2bac837dd1dc9d746d7a62d0575c8f53
  $fEqUCICommand :: GHC.Classes.Eq UCIData.UCICommand
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ UCIData.UCICommand
                  UCIData.$fEqUCICommand_$c==
                  UCIData.$fEqUCICommand_$c/= -}
2bac837dd1dc9d746d7a62d0575c8f53
  $fEqUCICommand_$c/= ::
    UCIData.UCICommand -> UCIData.UCICommand -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: UCIData.UCICommand) (b :: UCIData.UCICommand) ->
                 case UCIData.$fEqUCICommand_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
2bac837dd1dc9d746d7a62d0575c8f53
  $fEqUCICommand_$c== ::
    UCIData.UCICommand -> UCIData.UCICommand -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (ds :: UCIData.UCICommand)
                   (ds1 :: UCIData.UCICommand) ->
                 case ds of wild {
                   UCIData.UCI
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False UCIData.UCI -> GHC.Types.True }
                   UCIData.Debug a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        UCIData.Debug b1 -> GHC.Classes.$fEqBool_$c== a1 b1 }
                   UCIData.IsReady
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False UCIData.IsReady -> GHC.Types.True }
                   UCIData.SetOption a1 a2
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        UCIData.SetOption b1 b2
                        -> case GHC.Base.eqString a1 b1 of wild2 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True
                             -> case a2 of wild3 {
                                  GHC.Base.Nothing
                                  -> case b2 of wild4 {
                                       GHC.Base.Nothing -> GHC.Types.True
                                       GHC.Base.Just ipv -> GHC.Types.False }
                                  GHC.Base.Just a4
                                  -> case b2 of wild4 {
                                       GHC.Base.Nothing -> GHC.Types.False
                                       GHC.Base.Just b4 -> GHC.Base.eqString a4 b4 } } } }
                   UCIData.RegisterLater
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        UCIData.RegisterLater -> GHC.Types.True }
                   UCIData.Register a1 a2
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        UCIData.Register b1 b2
                        -> case GHC.Base.eqString a1 b1 of wild2 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True -> GHC.Classes.eqInt a2 b2 } }
                   UCIData.UCINewGame
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False UCIData.UCINewGame -> GHC.Types.True }
                   UCIData.InPosition a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        UCIData.InPosition b1 -> BasicData.$fEqPosition_$c== a1 b1 }
                   UCIData.Go a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        UCIData.Go b1
                        -> GHC.Classes.$fEq[]_$c==
                             @ UCIData.GoToken
                             UCIData.$fEqGoToken
                             a1
                             b1 }
                   UCIData.Stop
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False UCIData.Stop -> GHC.Types.True }
                   UCIData.PonderHit
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False UCIData.PonderHit -> GHC.Types.True }
                   UCIData.Quit
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False UCIData.Quit -> GHC.Types.True } }) -}
31443aeb38aba9af626f3ad45a1284e5
  $fShowGoToken :: GHC.Show.Show UCIData.GoToken
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ UCIData.GoToken
                  UCIData.$fShowGoToken_$cshowsPrec
                  UCIData.$fShowGoToken_$cshow
                  UCIData.$fShowGoToken_$cshowList -}
31443aeb38aba9af626f3ad45a1284e5
  $fShowGoToken1 :: UCIData.GoToken -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (UCIData.$fShowGoToken_$cshowsPrec
                   UCIData.$fShowGoToken2) -}
cc042742bc565179eb42995d58d3abac
  $fShowGoToken2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
31443aeb38aba9af626f3ad45a1284e5
  $fShowGoToken_$cshow :: UCIData.GoToken -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: UCIData.GoToken) ->
                 UCIData.$fShowGoToken_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
31443aeb38aba9af626f3ad45a1284e5
  $fShowGoToken_$cshowList :: [UCIData.GoToken] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ UCIData.GoToken
                   UCIData.$fShowGoToken1) -}
31443aeb38aba9af626f3ad45a1284e5
  $fShowGoToken_$cshowsPrec ::
    GHC.Types.Int -> UCIData.GoToken -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U> -}
2bac837dd1dc9d746d7a62d0575c8f53
  $fShowUCICommand :: GHC.Show.Show UCIData.UCICommand
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ UCIData.UCICommand
                  UCIData.$fShowUCICommand_$cshowsPrec
                  UCIData.$fShowUCICommand_$cshow
                  UCIData.$fShowUCICommand_$cshowList -}
2bac837dd1dc9d746d7a62d0575c8f53
  $fShowUCICommand1 :: UCIData.UCICommand -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (UCIData.$fShowUCICommand_$cshowsPrec
                   UCIData.$fShowGoToken2) -}
ebb07b548cc23a1610d0d2eabfecb009
  $fShowUCICommand10 :: GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   UCIData.$fShowUCICommand11) -}
071819aa2d10f7911dc58d562f6577de
  $fShowUCICommand11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "UCINewGame"#) -}
968af4a7acfd6a192b4c99e3aad8d752
  $fShowUCICommand12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Register "#) -}
a9718a048ec6dfd96b1f4f444c7ad54f
  $fShowUCICommand13 :: GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   UCIData.$fShowUCICommand14) -}
13202e0954e7b8448a2d90d47a1da2dc
  $fShowUCICommand14 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "RegisterLater"#) -}
3fa916f18ed3e720ebdf926908edf463
  $fShowUCICommand15 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "SetOption "#) -}
ff84135550c2b695930480a8c9c365bc
  $fShowUCICommand16 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 11#) -}
2cb96564db6cfd27238fb0f9acbca3e5
  $fShowUCICommand17 :: GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   UCIData.$fShowUCICommand18) -}
56cac2582da2a8a6fd11fb5d4d0cb868
  $fShowUCICommand18 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "IsReady"#) -}
b6f83e54b277f1daa7de0884822b56cc
  $fShowUCICommand19 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Debug "#) -}
b9de0b1a1c55a26b1443dba72dcfa6c7
  $fShowUCICommand2 :: GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   UCIData.$fShowUCICommand3) -}
6b497f4901a88676c445592758a183cd
  $fShowUCICommand20 :: GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   UCIData.$fShowUCICommand21) -}
497ac2165ec207f0dc4bd248f1125b6d
  $fShowUCICommand21 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "UCI"#) -}
9bc6b98f9bed593689a5a9b7d7539d89
  $fShowUCICommand3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Quit"#) -}
34d83f14d9b912b4f323ebe1839bcc07
  $fShowUCICommand4 :: GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   UCIData.$fShowUCICommand5) -}
c734ac43d07aa1c5aa9dece0f706c081
  $fShowUCICommand5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "PonderHit"#) -}
f15b3bc23373ee38f5ddd11cf5e70d7d
  $fShowUCICommand6 :: GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   UCIData.$fShowUCICommand7) -}
acac2d184eab9a4389aeccf122d014fc
  $fShowUCICommand7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Stop"#) -}
9b8b6b99b895989dcb2e5e383ebcb0d6
  $fShowUCICommand8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Go "#) -}
02b34059004175feb841bb5d9c670d36
  $fShowUCICommand9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "InPosition "#) -}
2bac837dd1dc9d746d7a62d0575c8f53
  $fShowUCICommand_$cshow :: UCIData.UCICommand -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U> -}
2bac837dd1dc9d746d7a62d0575c8f53
  $fShowUCICommand_$cshowList ::
    [UCIData.UCICommand] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ UCIData.UCICommand
                   UCIData.$fShowUCICommand1) -}
2bac837dd1dc9d746d7a62d0575c8f53
  $fShowUCICommand_$cshowsPrec ::
    GHC.Types.Int -> UCIData.UCICommand -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <L,1*U(U)><S,1*U>,
     Unfolding: (\ (ds :: GHC.Types.Int) (ds1 :: UCIData.UCICommand) ->
                 case ds1 of wild {
                   UCIData.UCI -> UCIData.$fShowUCICommand20
                   UCIData.Debug b1
                   -> case ds of wild1 { GHC.Types.I# x ->
                      let {
                        p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,1*U> -}
                        = \ (x1 :: GHC.Base.String) ->
                          GHC.Base.++
                            @ GHC.Types.Char
                            UCIData.$fShowUCICommand19
                            (case b1 of wild2 {
                               GHC.Types.False -> GHC.Base.++ @ GHC.Types.Char GHC.Show.shows21 x1
                               GHC.Types.True
                               -> GHC.Base.++ @ GHC.Types.Char GHC.Show.shows20 x1 })
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11#) of wild2 {
                        GHC.Types.False -> p
                        GHC.Types.True
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows9
                             (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows6 x1)) } }
                   UCIData.IsReady -> UCIData.$fShowUCICommand17
                   UCIData.SetOption b1 b2
                   -> case ds of wild1 { GHC.Types.I# x ->
                      let {
                        g :: GHC.Base.String -> GHC.Base.String
                        = GHC.Show.$fShowMaybe_$cshowsPrec
                            @ [GHC.Types.Char]
                            GHC.Show.$fShow[]_$s$fShow[]1
                            UCIData.$fShowUCICommand16
                            b2
                      } in
                      let {
                        p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                        = \ (x1 :: GHC.Base.String) ->
                          GHC.Base.++
                            @ GHC.Types.Char
                            UCIData.$fShowUCICommand15
                            (GHC.Types.:
                               @ GHC.Types.Char
                               GHC.Show.shows8
                               (GHC.Show.showLitString
                                  b1
                                  (GHC.Types.:
                                     @ GHC.Types.Char
                                     GHC.Show.shows8
                                     (GHC.Types.: @ GHC.Types.Char GHC.Show.showSpace1 (g x1)))))
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11#) of wild2 {
                        GHC.Types.False -> p
                        GHC.Types.True
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows9
                             (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows6 x1)) } }
                   UCIData.RegisterLater -> UCIData.$fShowUCICommand13
                   UCIData.Register b1 b2
                   -> case ds of wild1 { GHC.Types.I# x ->
                      let {
                        p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                        = \ (x1 :: GHC.Base.String) ->
                          GHC.Base.++
                            @ GHC.Types.Char
                            UCIData.$fShowUCICommand12
                            (GHC.Types.:
                               @ GHC.Types.Char
                               GHC.Show.shows8
                               (GHC.Show.showLitString
                                  b1
                                  (GHC.Types.:
                                     @ GHC.Types.Char
                                     GHC.Show.shows8
                                     (GHC.Types.:
                                        @ GHC.Types.Char
                                        GHC.Show.showSpace1
                                        (case b2 of ww2 { GHC.Types.I# ww3 ->
                                         case GHC.Show.$wshowSignedInt
                                                11#
                                                ww3
                                                x1 of ww4 { (#,#) ww5 ww6 ->
                                         GHC.Types.: @ GHC.Types.Char ww5 ww6 } })))))
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11#) of wild2 {
                        GHC.Types.False -> p
                        GHC.Types.True
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows9
                             (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows6 x1)) } }
                   UCIData.UCINewGame -> UCIData.$fShowUCICommand10
                   UCIData.InPosition b1
                   -> case ds of wild1 { GHC.Types.I# x ->
                      let {
                        g :: GHC.Base.String -> GHC.Base.String
                        = case b1 of ww2 { BasicData.Position ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ->
                          BasicData.$w$cshowsPrec2
                            11#
                            ww3
                            ww4
                            ww5
                            ww6
                            ww7
                            ww8
                            ww9
                            ww10
                            ww11
                            ww12
                            ww13
                            ww14
                            ww15
                            ww16
                            ww17
                            ww18
                            ww19
                            ww20
                            ww21
                            ww22 }
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11#) of wild2 {
                        GHC.Types.False
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Base.++ @ GHC.Types.Char UCIData.$fShowUCICommand9 (g x1)
                        GHC.Types.True
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows9
                             (GHC.Base.++
                                @ GHC.Types.Char
                                UCIData.$fShowUCICommand9
                                (g (GHC.Types.: @ GHC.Types.Char GHC.Show.shows6 x1))) } }
                   UCIData.Go b1
                   -> case ds of wild1 { GHC.Types.I# x ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11#) of wild2 {
                        GHC.Types.False
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Base.++
                             @ GHC.Types.Char
                             UCIData.$fShowUCICommand8
                             (GHC.Show.showList__
                                @ UCIData.GoToken
                                UCIData.$fShowGoToken1
                                b1
                                x1)
                        GHC.Types.True
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows9
                             (GHC.Base.++
                                @ GHC.Types.Char
                                UCIData.$fShowUCICommand8
                                (GHC.Show.showList__
                                   @ UCIData.GoToken
                                   UCIData.$fShowGoToken1
                                   b1
                                   (GHC.Types.: @ GHC.Types.Char GHC.Show.shows6 x1))) } }
                   UCIData.Stop -> UCIData.$fShowUCICommand6
                   UCIData.PonderHit -> UCIData.$fShowUCICommand4
                   UCIData.Quit -> UCIData.$fShowUCICommand2 }) -}
b609170de58ce837adb667a2b8a8ae32
  $tc'BInc :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10629121324456390966##
                   7602290701263083095##
                   UCIData.$trModule
                   UCIData.$tc'BInc1) -}
88943ed60e86f74aab71d57929a0e3ba
  $tc'BInc1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'BInc"#) -}
4c6ed7acd780d9d522f17a6655f58560
  $tc'BTime :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6846718990023171189##
                   2563395775087452380##
                   UCIData.$trModule
                   UCIData.$tc'BTime1) -}
b38cba32cdb8ae26d2f6ad0683486674
  $tc'BTime1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'BTime"#) -}
7adc960e24ecc59919f651d833ee7795
  $tc'Debug :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3367600012508258658##
                   13424633342761393029##
                   UCIData.$trModule
                   UCIData.$tc'Debug1) -}
a92188e815a601cd238129ab93d89fd6
  $tc'Debug1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Debug"#) -}
78ebf949acc61ea8e71be31ed5d58f90
  $tc'DepthLimit :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12839627950030703741##
                   5358146739922388416##
                   UCIData.$trModule
                   UCIData.$tc'DepthLimit1) -}
d9a05e7f41d2a4f77bc0989140bd922f
  $tc'DepthLimit1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'DepthLimit"#) -}
4d848185e4942d5c6bbca4b06a501f41
  $tc'Go :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17269825762236261098##
                   18292034441722447168##
                   UCIData.$trModule
                   UCIData.$tc'Go1) -}
e38fb11e820940365d7df501d0fe6212
  $tc'Go1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Go"#) -}
e1bf105054bbd42e5ef09dca2749a5c8
  $tc'InPosition :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8022486061817241354##
                   14002896492593566189##
                   UCIData.$trModule
                   UCIData.$tc'InPosition1) -}
cebbfdaad04bc5b7b589d9a122e644d4
  $tc'InPosition1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'InPosition"#) -}
06e5f1cbb3aafc41b5e85243b717dfbb
  $tc'Infinite :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7023950186574630809##
                   1381993760030678330##
                   UCIData.$trModule
                   UCIData.$tc'Infinite1) -}
7ddc5127a04b4094703d77fc802ba2b2
  $tc'Infinite1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Infinite"#) -}
8b55f8ad102c6a5961737c2650b4459d
  $tc'IsReady :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11972157570553725712##
                   16744302175613097481##
                   UCIData.$trModule
                   UCIData.$tc'IsReady1) -}
2edf1a8e1d59b92ed11cacf13a1d8973
  $tc'IsReady1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'IsReady"#) -}
e8b9bc679ca192307de8bb165edd530c
  $tc'Mate :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6548345384276854282##
                   15674134840478613416##
                   UCIData.$trModule
                   UCIData.$tc'Mate1) -}
fdafccd251515e6ebb3a25175f523d54
  $tc'Mate1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Mate"#) -}
e1682592a4ed4032c738dc6569f09e50
  $tc'MoveTime :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7022726798019534853##
                   11996397678514146784##
                   UCIData.$trModule
                   UCIData.$tc'MoveTime1) -}
a37bdc71f68c474ccca07e7e760c7a5c
  $tc'MoveTime1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'MoveTime"#) -}
02d7d0c945205793db94931ce5641b1b
  $tc'MovesToGO :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1618473899829973693##
                   13140361744288518837##
                   UCIData.$trModule
                   UCIData.$tc'MovesToGO1) -}
bb55c49eb4dc526c5a26927dee9f4665
  $tc'MovesToGO1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'MovesToGO"#) -}
5f0e87e7e7c18ba48027aa7f3816c369
  $tc'NodeLimit :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3878290993951442354##
                   9939510073676839452##
                   UCIData.$trModule
                   UCIData.$tc'NodeLimit1) -}
96b05bf08e507877b2dc574fcb6d61bd
  $tc'NodeLimit1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'NodeLimit"#) -}
e54a4fb569d2abe9872203d7de1fd1c0
  $tc'Ponder :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8122624267214470304##
                   2007724579503933356##
                   UCIData.$trModule
                   UCIData.$tc'Ponder1) -}
bb95d31463e81408370c862bc6831ca1
  $tc'Ponder1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Ponder"#) -}
94562543c0cb256122eaf65698210cbc
  $tc'PonderHit :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10405439534922009934##
                   8713020405718082804##
                   UCIData.$trModule
                   UCIData.$tc'PonderHit1) -}
fe1ec73a855ce13d1a59140a94afb7e1
  $tc'PonderHit1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'PonderHit"#) -}
99d9359bd2b441aad05f2605824a5969
  $tc'Quit :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7035119868571709455##
                   4810346839161626521##
                   UCIData.$trModule
                   UCIData.$tc'Quit1) -}
24f872b020fa5cb740b8aa548c0bad3d
  $tc'Quit1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Quit"#) -}
2b10ac8ce9a0e627b4eb0a51276267e4
  $tc'Register :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14402968561137688860##
                   8841135372424302349##
                   UCIData.$trModule
                   UCIData.$tc'Register1) -}
73a2ff9df7b4a7ef33b01415447b783c
  $tc'Register1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Register"#) -}
33d00c15db729bfa340abba54563e1ba
  $tc'RegisterLater :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15553740362660564209##
                   1941775390930010308##
                   UCIData.$trModule
                   UCIData.$tc'RegisterLater1) -}
621ec3f29ebef35459063080bd2391f7
  $tc'RegisterLater1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'RegisterLater"#) -}
3905d3e9a5df993b36323eede6dbab5d
  $tc'SearchMoves :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16370140787127717847##
                   14218737474353881939##
                   UCIData.$trModule
                   UCIData.$tc'SearchMoves1) -}
74ca4f43dcdd43404a49e2272daff854
  $tc'SearchMoves1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'SearchMoves"#) -}
f9fbc57e7351d1d7658f28c3f1076594
  $tc'SetOption :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11118533525518079522##
                   634936235850172815##
                   UCIData.$trModule
                   UCIData.$tc'SetOption1) -}
c5587296b25c5b6aef53741fb2442b0c
  $tc'SetOption1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'SetOption"#) -}
758508ba7436d538ecc29ff7876b5887
  $tc'Stop :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5118307213902145757##
                   12826136502532455194##
                   UCIData.$trModule
                   UCIData.$tc'Stop1) -}
6a9b2aac3e719a8cc153c2a33a489ccf
  $tc'Stop1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Stop"#) -}
f2d4147357b2f92fb9813592064fe673
  $tc'UCI :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5977831646667150097##
                   1798758248318305480##
                   UCIData.$trModule
                   UCIData.$tc'UCI1) -}
983c32593ae35e641df0ecd7e8571b11
  $tc'UCI1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'UCI"#) -}
5aa8fcd7d659370fdb8526af2007bf54
  $tc'UCINewGame :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4950433365098461606##
                   6745412371755214847##
                   UCIData.$trModule
                   UCIData.$tc'UCINewGame1) -}
386f6f86c9e4ca5a546eae209ad74328
  $tc'UCINewGame1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'UCINewGame"#) -}
32b73f7911904ac60bec1b0d331c3f4b
  $tc'WInc :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18157545583286612403##
                   3400044956869671418##
                   UCIData.$trModule
                   UCIData.$tc'WInc1) -}
e35e7a6dc4a4dc96dc866390f97a62c8
  $tc'WInc1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'WInc"#) -}
6c915049fd2862e6f25edfb02ea56447
  $tc'WTime :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5498090875691098559##
                   12708905942879216235##
                   UCIData.$trModule
                   UCIData.$tc'WTime1) -}
4467d18ac9e2128eccf91456755ca768
  $tc'WTime1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'WTime"#) -}
e7ce0bf2e4d9776192315f4c6b31b8e8
  $tcGoToken :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13884092337706247734##
                   7219065757890394944##
                   UCIData.$trModule
                   UCIData.$tcGoToken1) -}
516a53b0fe39bb823d99425411c79b77
  $tcGoToken1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "GoToken"#) -}
b1cf2ba70b5395369350116fbcdd016a
  $tcUCICommand :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11570923268688281061##
                   9548470832386122786##
                   UCIData.$trModule
                   UCIData.$tcUCICommand1) -}
7df73a7a1dfeb7c8d09be20e1c613c87
  $tcUCICommand1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "UCICommand"#) -}
db850eb47581e1d57ae82bcd83db966f
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   UCIData.$trModule2
                   UCIData.$trModule1) -}
bb799e8659176458596430489476ccd4
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "UCIData"#) -}
38336555a2cf3077a10deb627983b224
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "Sophy-0.1.0.0-KzkJ0b2opaf7oLnrOdwoet"#) -}
a137c24b33b8468169018e1aec737772
  type Author = GHC.Base.String
56957b6886320cc0a66153fd9953da47
  type Code = GHC.Types.Int
31443aeb38aba9af626f3ad45a1284e5
  data GoToken
    = SearchMoves [GHC.Base.String]
    | Ponder
    | WTime GHC.Types.Int
    | BTime GHC.Types.Int
    | WInc GHC.Types.Int
    | BInc GHC.Types.Int
    | MovesToGO GHC.Types.Int
    | DepthLimit GHC.Types.Int
    | NodeLimit GHC.Types.Int
    | Mate GHC.Types.Int
    | MoveTime GHC.Types.Int
    | Infinite
66fe1fb9e1f41bc4075004573f0b9c57
  type Name = GHC.Base.String
2bac837dd1dc9d746d7a62d0575c8f53
  data UCICommand
    = UCI
    | Debug GHC.Types.Bool
    | IsReady
    | SetOption UCIData.Name (GHC.Base.Maybe UCIData.Value)
    | RegisterLater
    | Register UCIData.Name UCIData.Code
    | UCINewGame
    | InPosition BasicData.Position
    | Go [UCIData.GoToken]
    | Stop
    | PonderHit
    | Quit
e5ae7ca86b3f0be39a53544961e22c65
  type Value = GHC.Base.String
instance GHC.Classes.Eq [UCIData.GoToken] = UCIData.$fEqGoToken
instance GHC.Classes.Eq [UCIData.UCICommand]
  = UCIData.$fEqUCICommand
instance GHC.Show.Show [UCIData.GoToken] = UCIData.$fShowGoToken
instance GHC.Show.Show [UCIData.UCICommand]
  = UCIData.$fShowUCICommand
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

