
==================== FINAL INTERFACE ====================
2016-12-26 10:31:11.6829185 UTC

interface Sophy-0.1.0.0-KzkJ0b2opaf7oLnrOdwoet:Engine 8001
  interface hash: f94c3e59e4e38f0e2adb2df2ee035cfc
  ABI hash: 1f81b170f6f50b0c6f807647dee60168
  export-list hash: 3377dd615a50415cf5e4f50fc192ea43
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 282ddb6f3a6e71876c9ed624527a08b1
  sig of: Nothing
  used TH splices: True
  where
exports:
  Engine.currentPosition
  Engine.currentResult
  Engine.currentSearch
  Engine.depthFrom
  Engine.handle
  Engine.launchEngine
  Engine.showResult
  Engine.timeoutFrom
  Engine.waitInput
  Engine.Engine
  Engine.EngineState{Engine.EngineState _currentPosition _currentResult _currentSearch}
module dependencies: Alias AttackTable BasicConstant BasicData
                     BitBoard Bitwise Constructor Evaluation Interpreter Move Position
                     Search UCIData
package dependencies: MonadRandom-0.4.2.3@MonadRandom-0.4.2.3-8TfCm6PGvGYB7omozORhov
                      StateVar-1.1.0.4@StateVar-1.1.0.4-CJpWsiXJdd89SnV9dZtTwc
                      Win32-2.3.1.1@Win32-2.3.1.1
                      adjunctions-4.3@adjunctions-4.3-3ol9sWZt3In19pwXwPv3Xc
                      array-0.5.1.1@array-0.5.1.1 base-4.9.0.0
                      base-orphans-0.5.4@base-orphans-0.5.4-5IQvrjd7gNP548VkOOyIq6
                      bifunctors-5.4.1@bifunctors-5.4.1-8Xk5Wsnk1fr6rBLkW9MO8p
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      comonad-5@comonad-5-2RMxpSOQ5MCHLHIelJrHD4
                      composition-1.0.2.1@composition-1.0.2.1-KZVQ5Se9KseC7kQ38aLGDn
                      containers-0.5.7.1@containers-0.5.7.1
                      contravariant-1.4@contravariant-1.4-KSQE31a7FruKHDlp90hIUT
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      distributive-0.5.0.2@distributive-0.5.0.2-Cdz2vLOk85j1doGXLcictT
                      either-4.4.1.1@either-4.4.1.1-BWHIQ5hdPI1HrEUIKYYfaI
                      exceptions-0.8.3@exceptions-0.8.3-7py7fmRxowDFpHmiHGKrTb
                      free-4.12.4@free-4.12.4-Etm59Dm8iExFxAy1L49Ovd
                      ghc-boot-th-8.0.1@ghc-boot-th-8.0.1 ghc-prim-0.5.0.0
                      hashable-1.2.4.0@hashable-1.2.4.0-EMu4H7FB10MAl6hwKw992G
                      integer-gmp-1.0.0.1
                      kan-extensions-5.0.1@kan-extensions-5.0.1-Asa0tkk9PuPLZ2eXuJ10Gr
                      lens-4.14@lens-4.14-LQbbTc84mRL8zB39b41ZKA
                      mmorph-1.0.9@mmorph-1.0.9-DmSwQqk5nLj7roLAcydGz
                      monad-control-1.0.1.0@monad-control-1.0.1.0-HoNEBoNfniX3vjSfkI7WTT
                      mtl-2.2.1@mtl-2.2.1-6qsR1PHUy5lL47Hpoa4jCM
                      parsec-3.1.11@parsec-3.1.11-BCos4GEVCuDB8dnOCBHO6X
                      prelude-extras-0.4.0.3@prelude-extras-0.4.0.3-FAyB4iuuM7cHXdrLMZtdXq
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa
                      profunctors-5.2@profunctors-5.2-2ZZOz6u59T2H8y7z3NgZkY
                      random-1.1@random-1.1-54KmMHXjttlERYcr1mvsAe
                      reflection-2.1.2@reflection-2.1.2-J1ZzlxijzaHGRixYxgxlf9
                      semigroupoids-5.1@semigroupoids-5.1-1Gay4xNO77GHd4DGCzVuax
                      split-0.2.3.1@split-0.2.3.1-IJKK4pOCYGKud0jZImZke
                      stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF
                      tagged-0.8.5@tagged-0.8.5-CtgV6EcN0do8F92i1S6iYx
                      template-haskell-2.11.0.0
                      text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s
                      time-1.6.0.1@time-1.6.0.1 transformers-0.5.2.0@transformers-0.5.2.0
                      transformers-base-0.4.4@transformers-base-0.4.4-25SoAegOdaF8rLEnnb5jPI
                      transformers-compat-0.5.1.4@transformers-compat-0.5.1.4-81lZyuOJOvsD0zyCv2TKld
                      unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-Eo9jd5DMz45DhBLCG8skzW
                      vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6
orphans: MonadRandom-0.4.2.3@MonadRandom-0.4.2.3-8TfCm6PGvGYB7omozORhov:Control.Monad.Random
         base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         hashable-1.2.4.0@hashable-1.2.4.0-EMu4H7FB10MAl6hwKw992G:Data.Hashable.Generic
         reflection-2.1.2@reflection-2.1.2-J1ZzlxijzaHGRixYxgxlf9:Data.Reflection
         stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF:Control.Monad.STM
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Lazy
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Unboxed
family instance modules: adjunctions-4.3@adjunctions-4.3-3ol9sWZt3In19pwXwPv3Xc:Data.Functor.Rep
                         base-4.9.0.0:Control.Applicative base-4.9.0.0:Data.Complex
                         base-4.9.0.0:Data.Either base-4.9.0.0:Data.Functor.Compose
                         base-4.9.0.0:Data.Functor.Const base-4.9.0.0:Data.Functor.Identity
                         base-4.9.0.0:Data.Functor.Product base-4.9.0.0:Data.Functor.Sum
                         base-4.9.0.0:Data.List.NonEmpty base-4.9.0.0:Data.Monoid
                         base-4.9.0.0:Data.Semigroup base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:Data.Version base-4.9.0.0:Data.Void
                         base-4.9.0.0:GHC.Exts base-4.9.0.0:GHC.Generics
                         base-4.9.0.0:GHC.IO.Exception base-4.9.0.0:GHC.TypeLits
                         bifunctors-5.4.1@bifunctors-5.4.1-8Xk5Wsnk1fr6rBLkW9MO8p:Data.Bifunctor.Biff
                         bifunctors-5.4.1@bifunctors-5.4.1-8Xk5Wsnk1fr6rBLkW9MO8p:Data.Bifunctor.Clown
                         bifunctors-5.4.1@bifunctors-5.4.1-8Xk5Wsnk1fr6rBLkW9MO8p:Data.Bifunctor.Flip
                         bifunctors-5.4.1@bifunctors-5.4.1-8Xk5Wsnk1fr6rBLkW9MO8p:Data.Bifunctor.Join
                         bifunctors-5.4.1@bifunctors-5.4.1-8Xk5Wsnk1fr6rBLkW9MO8p:Data.Bifunctor.Joker
                         bifunctors-5.4.1@bifunctors-5.4.1-8Xk5Wsnk1fr6rBLkW9MO8p:Data.Bifunctor.Product
                         bifunctors-5.4.1@bifunctors-5.4.1-8Xk5Wsnk1fr6rBLkW9MO8p:Data.Bifunctor.Sum
                         bifunctors-5.4.1@bifunctors-5.4.1-8Xk5Wsnk1fr6rBLkW9MO8p:Data.Bifunctor.Tannen
                         bifunctors-5.4.1@bifunctors-5.4.1-8Xk5Wsnk1fr6rBLkW9MO8p:Data.Bifunctor.Wrapped
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         either-4.4.1.1@either-4.4.1.1-BWHIQ5hdPI1HrEUIKYYfaI:Control.Monad.Trans.Either
                         ghc-boot-th-8.0.1@ghc-boot-th-8.0.1:GHC.LanguageExtensions.Type
                         kan-extensions-5.0.1@kan-extensions-5.0.1-Asa0tkk9PuPLZ2eXuJ10Gr:Data.Functor.Day
                         kan-extensions-5.0.1@kan-extensions-5.0.1-Asa0tkk9PuPLZ2eXuJ10Gr:Data.Functor.Yoneda
                         lens-4.14@lens-4.14-LQbbTc84mRL8zB39b41ZKA:Control.Lens.At
                         lens-4.14@lens-4.14-LQbbTc84mRL8zB39b41ZKA:Control.Lens.Internal.Indexed
                         lens-4.14@lens-4.14-LQbbTc84mRL8zB39b41ZKA:Control.Lens.Reified
                         lens-4.14@lens-4.14-LQbbTc84mRL8zB39b41ZKA:Control.Lens.Tuple
                         lens-4.14@lens-4.14-LQbbTc84mRL8zB39b41ZKA:Control.Lens.Wrapped
                         lens-4.14@lens-4.14-LQbbTc84mRL8zB39b41ZKA:Control.Lens.Zoom
                         monad-control-1.0.1.0@monad-control-1.0.1.0-HoNEBoNfniX3vjSfkI7WTT:Control.Monad.Trans.Control
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa:Control.Monad.Primitive
                         profunctors-5.2@profunctors-5.2-2ZZOz6u59T2H8y7z3NgZkY:Data.Profunctor.Rep
                         tagged-0.8.5@tagged-0.8.5-CtgV6EcN0do8F92i1S6iYx:Data.Tagged
                         template-haskell-2.11.0.0:Language.Haskell.TH.Syntax
                         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text
                         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Lazy
                         unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-Eo9jd5DMz45DhBLCG8skzW:Data.HashMap.Base
                         unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-Eo9jd5DMz45DhBLCG8skzW:Data.HashSet
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Primitive
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Storable
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Unboxed
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Unboxed.Base
import  -/  Alias ba36719cc8f68ab87c0ee8446a683f1b
  exports: 03b73823d7379fa3fc65780b7c8ac5e2
  Evaluation d0ec3a1908e74f25dceb92009ca2d86e
import  -/  BasicData 2a7d7454833f4f04d9c30a40b6d5a151
  exports: 05582099e9a48170ebc021a187a7905d
  Position a4a6ae1d21eb516f790aeadb42103ac1
  plyCount 89e6ae44a85de21278080acc314226ce
import  -/  Interpreter 797583848ed68c43e24f511bfd204334
  exports: d420ac48b2062d69d23dc86c2e3dfcd3
  uciCommandFrom f40703db6ce559adfb51a308e30c5ae1
import  -/  Move 44a778e409d712d8dcaf2c07d1b2800d
  exports: c971bac89379bbc97981f28ed121b754
  toLAN 9e6b618b23ec6e81887841cb543ee7fd
import  -/  Position af8b43b323818dabb635634fc880445d
  exports: 0d659c33f0a366721f46836234c7b111
  isBlack be3e5f346008a44f6965206327605b31
  isWhite 105d25cf601ec514e78d347a5c5a0d36
import  -/  Search 26916150c68bf085ac5a231c95500ed5
  exports: ff193e662037fb33f065ef432a265382
  SearchState e2bd12e26736a8391ce0528b6cb64175
  SearchState bee4681d93c681361a0d14b96a952fc5
  _variation a76b29105e6d49fa705457587502065d
  environment a91616b2ab71c1cf4dc68a33c0bff84d
  iddfs 449915d388ce3b279109476853e87808
  search 8a831325dc221b7e4f04be1b3220de4c
import  -/  UCIData e12aa0037614391ae8459fe073d35b1d
  exports: 073589906e6ccb158a796f12bd3be184
  BTime f3402aeb0f1ba58bdca45696289226d5
  DepthLimit 8ca5b25ba6e67babc5cae30611109ec8
  Go 3e60beedcaea0d529ce2412de252588d
  GoToken 31443aeb38aba9af626f3ad45a1284e5
  InPosition 9c49e138d5ab07279b9909149ed6f379
  Infinite 91f67bcca49c8cb06448751cec9f523a
  IsReady 5166f3f8b8acd3ddb3278c8bf132a3b4
  MoveTime c92582e4f27b9ea2f0c0137d47dbef0b
  Quit 7302e9d09c9ab6012cf86963128133db
  Stop 62ca548144b63e18c609487129db04ad
  UCI b4607b4b32fc49a1fb63f5fc0c47d42f
  UCICommand 2bac837dd1dc9d746d7a62d0575c8f53
  WTime c9df23f5b81b2a641e135904966d1f1b
import  -/  base-4.9.0.0:Control.Concurrent c3bd1c151fa27857a3c9d1db4bfc9ff7
import  -/  base-4.9.0.0:Control.Exception 8217a8269170a7a872c6de95a3662e12
import  -/  base-4.9.0.0:Control.Monad b6b2f076948b5e8acd6d95beb4d22bfc
import  -/  base-4.9.0.0:Control.Monad.IO.Class 6093ce5ace985d5ea81901bb51e28805
import  -/  base-4.9.0.0:Data.Either 4cef602ce360a0155ac0dd580a5b4863
import  -/  base-4.9.0.0:Data.Functor 67cebb006c069ea73adcd2d468cdb0dc
import  -/  base-4.9.0.0:Data.Maybe 086a84053ef7f7810663b5f03b7ec3f7
import  -/  base-4.9.0.0:GHC.Base dd8044a8d640eee51828c17c476a6ba7
import  -/  base-4.9.0.0:GHC.Conc.IO a4f5c846d1817845898e46b8578448aa
import  -/  base-4.9.0.0:GHC.Conc.Sync a1292c872414656fef080815d5d8e73c
import  -/  base-4.9.0.0:GHC.Err 20faef8829fd13c027d0ee2213637534
import  -/  base-4.9.0.0:GHC.IO.Handle 0ec5f3e063751c91152d6f1b0286ca9a
import  -/  base-4.9.0.0:GHC.IO.Handle.FD 5311a39f33255d27517e14bdb344dca6
import  -/  base-4.9.0.0:GHC.Num f0aed3315b3ed1b330b71fc4148a5581
import  -/  base-4.9.0.0:GHC.Real 011de9ca3282ad24a84e4e15f974f98e
import  -/  base-4.9.0.0:Prelude 2d9cd8b0ec3d728f62b734df888d2e34
import  -/  base-4.9.0.0:System.IO c1068c4f4231e3198e330f99a58145b0
import  -/  ghc-prim-0.5.0.0:GHC.Classes 16d48e012d23eaef9bca91ccdd572c02
import  -/  ghc-prim-0.5.0.0:GHC.Types 7378e41b7749213c8c88ceb6b0665d4c
import  -/  lens-4.14@lens-4.14-LQbbTc84mRL8zB39b41ZKA:Control.Lens b7b80d679f99639b22dc49438349ebe7
import  -/  lens-4.14@lens-4.14-LQbbTc84mRL8zB39b41ZKA:Control.Lens.Getter b4cdad12f267d5ddf6313c85279297ed
import  -/  lens-4.14@lens-4.14-LQbbTc84mRL8zB39b41ZKA:Control.Lens.Setter 5dd87d764c6c78a841d6cc4f4c0b1fef
import  -/  lens-4.14@lens-4.14-LQbbTc84mRL8zB39b41ZKA:Control.Lens.TH 36e9d75427edb0642c4f058cda24cd53
import  -/  lens-4.14@lens-4.14-LQbbTc84mRL8zB39b41ZKA:Control.Lens.Type 270ffd0ddba3f1e8d7fe322624ac30d8
import  -/  mtl-2.2.1@mtl-2.2.1-6qsR1PHUy5lL47Hpoa4jCM:Control.Monad.State.Class 6b9267d06a66633777f53733046c8d46
import  -/  mtl-2.2.1@mtl-2.2.1-6qsR1PHUy5lL47Hpoa4jCM:Control.Monad.State.Strict 2e6138c12a3998caa148eedf4c0371a0
import  -/  stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF:Control.Concurrent.STM 674516fe7a455ad46572e426b17538fa
import  -/  stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF:Control.Monad.STM 4ad603b00bfaa86688c427e7586ee595
import  -/  transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.State.Strict b8fa87c41e99462c4ab440d6e4b4ef5b
4536aba4ffdd097386b2e517d3abc1ce
  $tc'EngineState :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17627038338007171870##
                   664987831973907736##
                   Engine.$trModule
                   Engine.$tc'EngineState1) -}
d43c7e5725888df041dce05d2e31ea7a
  $tc'EngineState1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'EngineState"#) -}
dcb834cdce3cb0020090b09c1981ed1f
  $tcEngineState :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1543984257817692252##
                   17607444471885594946##
                   Engine.$trModule
                   Engine.$tcEngineState1) -}
41bd54a9237a0b3fc2898e8eb236d49a
  $tcEngineState1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "EngineState"#) -}
10ee818fc272ae480a9c850e31007571
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Engine.$trModule2
                   Engine.$trModule1) -}
10f5ab9160236e20cd84664498d23732
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Engine"#) -}
ede1309f903c3a8751b2223f36e93067
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "Sophy-0.1.0.0-KzkJ0b2opaf7oLnrOdwoet"#) -}
944de79322b199411714e3c07311128e
  $wshowResult ::
    Alias.Variation
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: Alias.Variation)
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ww of wild {
                   []
                   -> case Engine.showResult2
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                      of {}
                   : best ds
                   -> case ds of wild1 {
                        []
                        -> case GHC.IO.Handle.Text.hPutStr2
                                  GHC.IO.Handle.FD.stdout
                                  (GHC.CString.unpackAppendCString# "bestmove "# (Move.toLAN best))
                                  GHC.Types.True
                                  w of ds1 { (#,#) ipv ipv1 ->
                           GHC.IO.Handle.Internals.wantWritableHandle1
                             @ ()
                             GHC.IO.Handle.hFlush2
                             GHC.IO.Handle.FD.stdout
                             GHC.IO.Handle.Internals.flushWriteBuffer1
                               `cast`
                             (<GHC.IO.Handle.Types.Handle__>_R
                              ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                             ipv }
                        : ponder ds1
                        -> case GHC.IO.Handle.Text.hPutStr2
                                  GHC.IO.Handle.FD.stdout
                                  (GHC.CString.unpackAppendCString#
                                     "bestmove "#
                                     (case best of ww1 { GHC.Word.W16# ww2 ->
                                      GHC.Base.++
                                        @ GHC.Types.Char
                                        (Move.$wtoLAN ww2)
                                        (GHC.CString.unpackAppendCString#
                                           " ponder "#
                                           (case ponder of ww3 { GHC.Word.W16# ww4 ->
                                            Move.$wtoLAN ww4 })) }))
                                  GHC.Types.True
                                  w of ds2 { (#,#) ipv ipv1 ->
                           GHC.IO.Handle.Internals.wantWritableHandle1
                             @ ()
                             GHC.IO.Handle.hFlush2
                             GHC.IO.Handle.FD.stdout
                             GHC.IO.Handle.Internals.flushWriteBuffer1
                               `cast`
                             (<GHC.IO.Handle.Types.Handle__>_R
                              ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                             ipv } } }) -}
ffc9693399d792f54359c828a310924c
  $wtimeoutFrom ::
    BasicData.Color
    -> GHC.Prim.Int# -> [UCIData.GoToken] -> GHC.Types.Int
  {- Arity: 3, Strictness: <S,U><L,U><S,1*U>, Inline: [0] -}
fe3ef467bc14e56b1a6220d0e0131376
  type Engine a =
    Control.Monad.Trans.State.Strict.StateT
      Engine.EngineState GHC.Types.IO a
c2707ac2b9eab48c2d83aa7b788c1b05
  data EngineState
    = EngineState {_currentPosition :: !GHC.Base.Maybe
                                          BasicData.Position,
                   _currentResult :: {-# UNPACK #-}GHC.Conc.Sync.TVar
                                                     (Alias.Evaluation, Search.SearchState),
                   _currentSearch :: !GHC.Base.Maybe GHC.Conc.Sync.ThreadId}
a56081c9d78b0c0fbc810332d8493a40
  _currentPosition ::
    Engine.EngineState -> GHC.Base.Maybe BasicData.Position
  RecSel Left Engine.EngineState
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLL),1*U(U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Engine.EngineState) ->
                 case ds of wild { Engine.EngineState ds1 dt ds2 -> ds1 }) -}
a23472cf6c42269c4bd44c6f5dd9518b
  _currentResult ::
    Engine.EngineState
    -> GHC.Conc.Sync.TVar (Alias.Evaluation, Search.SearchState)
  RecSel Left Engine.EngineState
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSL),1*U(A,U,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Engine.EngineState) ->
                 case ds of wild { Engine.EngineState ds1 dt ds2 ->
                 GHC.Conc.Sync.TVar
                   @ (Alias.Evaluation, Search.SearchState)
                   dt }) -}
23970ede532471f35d48ef1c22f9c675
  _currentSearch ::
    Engine.EngineState -> GHC.Base.Maybe GHC.Conc.Sync.ThreadId
  RecSel Left Engine.EngineState
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLS),1*U(A,A,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Engine.EngineState) ->
                 case ds of wild { Engine.EngineState ds1 dt ds2 -> ds2 }) -}
9eecb1bf1391a748c510b85e0b3481f0
  currentPosition ::
    Control.Lens.Type.Lens'
      Engine.EngineState (GHC.Base.Maybe BasicData.Position)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><S,1*U><S(SLS),1*U(U,U,U)>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (3, False, False)
                (\ @ (f :: * -> *)
                   ($dFunctor :: GHC.Base.Functor f)
                   (f1 :: GHC.Base.Maybe BasicData.Position
                          -> f (GHC.Base.Maybe BasicData.Position))
                   (ds :: Engine.EngineState) ->
                 case f1 of f2 { DEFAULT ->
                 case ds of wild { Engine.EngineState x1 dt x3 ->
                 GHC.Base.fmap
                   @ f
                   $dFunctor
                   @ (GHC.Base.Maybe BasicData.Position)
                   @ Engine.EngineState
                   (\ (y1 :: GHC.Base.Maybe BasicData.Position) ->
                    case y1 of y2 { DEFAULT -> Engine.EngineState y2 dt x3 })
                   (f2 x1) } }) -}
759e0e60aa6dd9ed6ed401c73d3f6240
  currentResult ::
    Control.Lens.Type.Lens'
      Engine.EngineState
      (GHC.Conc.Sync.TVar (Alias.Evaluation, Search.SearchState))
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><S,1*U><S(SLS),1*U(U,U,U)>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (3, False, False)
                (\ @ (f :: * -> *)
                   ($dFunctor :: GHC.Base.Functor f)
                   (f1 :: GHC.Conc.Sync.TVar (Alias.Evaluation, Search.SearchState)
                          -> f (GHC.Conc.Sync.TVar (Alias.Evaluation, Search.SearchState)))
                   (ds :: Engine.EngineState) ->
                 case f1 of f2 { DEFAULT ->
                 case ds of wild { Engine.EngineState x1 dt x3 ->
                 GHC.Base.fmap
                   @ f
                   $dFunctor
                   @ (GHC.Conc.Sync.TVar (Alias.Evaluation, Search.SearchState))
                   @ Engine.EngineState
                   (\ (y1 :: GHC.Conc.Sync.TVar
                               (Alias.Evaluation, Search.SearchState)) ->
                    case y1 of y2 { GHC.Conc.Sync.TVar ipv ->
                    Engine.EngineState x1 ipv x3 })
                   (f2
                      (GHC.Conc.Sync.TVar
                         @ (Alias.Evaluation, Search.SearchState)
                         dt)) } }) -}
05605650384790fc1988f60c4b9b2ce8
  currentSearch ::
    Control.Lens.Type.Lens'
      Engine.EngineState (GHC.Base.Maybe GHC.Conc.Sync.ThreadId)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><S,1*U><S(SLS),1*U(U,U,U)>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (3, False, False)
                (\ @ (f :: * -> *)
                   ($dFunctor :: GHC.Base.Functor f)
                   (f1 :: GHC.Base.Maybe GHC.Conc.Sync.ThreadId
                          -> f (GHC.Base.Maybe GHC.Conc.Sync.ThreadId))
                   (ds :: Engine.EngineState) ->
                 case f1 of f2 { DEFAULT ->
                 case ds of wild { Engine.EngineState x1 dt x3 ->
                 GHC.Base.fmap
                   @ f
                   $dFunctor
                   @ (GHC.Base.Maybe GHC.Conc.Sync.ThreadId)
                   @ Engine.EngineState
                   (\ (y1 :: GHC.Base.Maybe GHC.Conc.Sync.ThreadId) ->
                    case y1 of y2 { DEFAULT -> Engine.EngineState x1 dt y2 })
                   (f2 x3) } }) -}
d98b6bb60c0b0ce0e8b7cba5c7513b18
  depthFrom :: [UCIData.GoToken] -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
154031cc7344047cd8df4ca3b40f2dec
  handle :: UCIData.UCICommand -> Engine.Engine ()
  {- Arity: 3, Strictness: <S,1*U><L,U(U,U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Engine.handle1
                  `cast`
                (<UCIData.UCICommand>_R
                 ->_R Trans
                          (<Engine.EngineState>_R
                           ->_R Sym (GHC.Types.N:IO[0] <((), Engine.EngineState)>_R))
                          (Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                                    <Engine.EngineState>_N <GHC.Types.IO>_R <()>_N))) -}
f44e1258f01ee11d3670f3a0195dfeec
  handle1 ::
    UCIData.UCICommand
    -> Engine.EngineState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Engine.EngineState) #)
  {- Arity: 3, Strictness: <S,1*U><L,U(U,U,U)><S,U> -}
40538488cc81d19d51b4aa18611f19d8
  launchEngine :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Engine.launchEngine1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
34677213aa5c70cca3b9c3674d6b2485
  launchEngine1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.atomically#
                        @ (GHC.Conc.Sync.TVar (Alias.Evaluation, Search.SearchState))
                        Engine.launchEngine2
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of result { GHC.Conc.Sync.TVar ipv2 ->
                 case Engine.launchEngine_$swaitInput
                        ipv
                        ipv2
                        (GHC.Base.Nothing
                           @ GHC.Conc.Sync.ThreadId) of ds2 { (#,#) ipv3 ipv4 ->
                 case ipv4 of wild { (,) a1 ds3 -> (# ipv3, a1 #) } } } }) -}
ede522df57d20e68eb0fe355fac1c611
  launchEngine2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.Conc.Sync.TVar (Alias.Evaluation, Search.SearchState) #)
  {- Arity: 1,
     Unfolding: (GHC.Conc.Sync.newTVar1
                   @ (Alias.Evaluation, Search.SearchState)
                   Engine.launchEngine3) -}
a5bf90510da71228d6f586b7f4151b43
  launchEngine3 :: (Alias.Evaluation, Search.SearchState)
  {- Strictness: x -}
a6ab65dfc15cba757c48620622981880
  launchEngine_$swaitInput ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> GHC.Prim.TVar#
         GHC.Prim.RealWorld (GHC.Types.Int, Search.SearchState)
    -> GHC.Base.Maybe GHC.Conc.Sync.ThreadId
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Engine.EngineState) #)
  {- Arity: 3, Strictness: <S,U><L,U><L,U> -}
1a598141e173882e32b0e2d488eabb45
  showResult ::
    (Alias.Evaluation, Search.SearchState) -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <S(LS(LSL)),1*U(A,1*U(A,U,A))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Engine.showResult1
                  `cast`
                (<(Alias.Evaluation, Search.SearchState)>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
efab3bfb72a5eb58571df3b8e6499afa
  showResult1 ::
    (Alias.Evaluation, Search.SearchState)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <S(LS(LSL)),1*U(A,1*U(A,U,A))><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: (Alias.Evaluation, Search.SearchState))
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { (,) ww1 ww2 ->
                 case ww2 of ww3 { Search.SearchState ww4 ww5 ww6 ->
                 Engine.$wshowResult ww5 w1 } }) -}
497924a99d32867edf927999f52c9c0f
  showResult2 :: GHC.Types.IO ()
  {- Strictness: x -}
3c9706fffddfbe092b3500be4f27e9f5
  timeoutFrom ::
    BasicData.Position -> [UCIData.GoToken] -> GHC.Types.Int
  {- Arity: 2,
     Strictness: <S(LLLLLLLLSLLLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,U,A,A,A,U,A,A,A,A,A,A,A)><S,1*U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: BasicData.Position) (w1 :: [UCIData.GoToken]) ->
                 case w of ww { BasicData.Position ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ->
                 Engine.$wtimeoutFrom ww9 ww13 w1 }) -}
7b32d0c1344ba90a9895978c842aed33
  timeoutFrom_$s$wtimeoutFrom ::
    [UCIData.GoToken] -> GHC.Prim.Int# -> GHC.Types.Int
  {- Arity: 2, Strictness: <S,1*U><L,U> -}
f31ff1f21c299f5b3e20b90a03c62c85
  timeoutFrom_$s$wtimeoutFrom1 ::
    [UCIData.GoToken] -> GHC.Prim.Int# -> GHC.Types.Int
  {- Arity: 2, Strictness: <S,1*U><L,U> -}
757668595bd12ee2472581701ca9c6b4
  waitInput :: Engine.Engine ()
  {- Arity: 2, Strictness: <L,U(U,U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Engine.waitInput1
                  `cast`
                (Trans
                     (<Engine.EngineState>_R
                      ->_R Sym (GHC.Types.N:IO[0] <((), Engine.EngineState)>_R))
                     (Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                               <Engine.EngineState>_N <GHC.Types.IO>_R <()>_N))) -}
159d446e6bd85f952462944cf47d1d35
  waitInput1 ::
    Engine.EngineState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Engine.EngineState) #)
  {- Arity: 2, Strictness: <L,U(U,U,U)><S,U> -}
dbf3a1c5e6cd96b745df9129a163f948
  waitInput_$swaitInput ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> GHC.Prim.Word#
    -> GHC.Prim.Word#
    -> GHC.Prim.Word#
    -> GHC.Prim.Word#
    -> GHC.Prim.Word#
    -> GHC.Prim.Word#
    -> GHC.Prim.Word#
    -> GHC.Prim.Word#
    -> BasicData.Color
    -> BasicData.CastleRight
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Word#
    -> GHC.Prim.Word#
    -> GHC.Prim.Word#
    -> GHC.Prim.Word#
    -> GHC.Prim.Int#
    -> GHC.Prim.Word#
    -> [GHC.Word.Word64]
    -> GHC.Prim.TVar#
         GHC.Prim.RealWorld (GHC.Types.Int, Search.SearchState)
    -> GHC.Base.Maybe GHC.Conc.Sync.ThreadId
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Engine.EngineState) #)
  {- Arity: 23,
     Strictness: <S,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U> -}
45725c7e5c0d4cee7e6bab08c5001468
  waitInput_$swaitInput1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> BasicData.Position
    -> GHC.Prim.TVar#
         GHC.Prim.RealWorld (GHC.Types.Int, Search.SearchState)
    -> GHC.Base.Maybe GHC.Conc.Sync.ThreadId
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Engine.EngineState) #)
  {- Arity: 4, Strictness: <S,U><L,U><L,U><L,U> -}
"SC:$wtimeoutFrom0" [0] forall (sc :: [UCIData.GoToken])
                               (sc1 :: GHC.Prim.Int#)
  Engine.$wtimeoutFrom BasicData.Black sc1 sc
  = Engine.timeoutFrom_$s$wtimeoutFrom1 sc sc1
"SC:$wtimeoutFrom1" [0] forall (sc :: [UCIData.GoToken])
                               (sc1 :: GHC.Prim.Int#)
  Engine.$wtimeoutFrom BasicData.White sc1 sc
  = Engine.timeoutFrom_$s$wtimeoutFrom sc sc1
"SC:waitInput0" [ALWAYS] forall (sc :: GHC.Prim.State#
                                         GHC.Prim.RealWorld)
                                (sc1 :: GHC.Prim.TVar#
                                          GHC.Prim.RealWorld (GHC.Types.Int, Search.SearchState))
                                (sc2 :: GHC.Base.Maybe GHC.Conc.Sync.ThreadId)
  Engine.waitInput1 (Engine.EngineState
                       (GHC.Base.Nothing @ BasicData.Position)
                       sc1
                       sc2)
                    sc
  = Engine.launchEngine_$swaitInput sc sc1 sc2
"SC:waitInput1" [ALWAYS] forall (sc :: GHC.Prim.State#
                                         GHC.Prim.RealWorld)
                                (sc1 :: BasicData.Position)
                                (sc2 :: GHC.Prim.TVar#
                                          GHC.Prim.RealWorld (GHC.Types.Int, Search.SearchState))
                                (sc3 :: GHC.Base.Maybe GHC.Conc.Sync.ThreadId)
  Engine.waitInput1 (Engine.EngineState
                       (GHC.Base.Just @ BasicData.Position sc1)
                       sc2
                       sc3)
                    sc
  = Engine.waitInput_$swaitInput1 sc sc1 sc2 sc3
"SC:waitInput2" [ALWAYS] forall (sc :: GHC.Prim.State#
                                         GHC.Prim.RealWorld)
                                (sc1 :: GHC.Prim.Word#)
                                (sc2 :: GHC.Prim.Word#)
                                (sc3 :: GHC.Prim.Word#)
                                (sc4 :: GHC.Prim.Word#)
                                (sc5 :: GHC.Prim.Word#)
                                (sc6 :: GHC.Prim.Word#)
                                (sc7 :: GHC.Prim.Word#)
                                (sc8 :: GHC.Prim.Word#)
                                (sc9 :: BasicData.Color)
                                (sc10 :: BasicData.CastleRight)
                                (sc11 :: GHC.Prim.Int#)
                                (sc12 :: GHC.Prim.Int#)
                                (sc13 :: GHC.Prim.Int#)
                                (sc14 :: GHC.Prim.Word#)
                                (sc15 :: GHC.Prim.Word#)
                                (sc16 :: GHC.Prim.Word#)
                                (sc17 :: GHC.Prim.Word#)
                                (sc18 :: GHC.Prim.Int#)
                                (sc19 :: GHC.Prim.Word#)
                                (sc20 :: [GHC.Word.Word64])
                                (sc21 :: GHC.Prim.TVar#
                                           GHC.Prim.RealWorld (GHC.Types.Int, Search.SearchState))
                                (sc22 :: GHC.Base.Maybe GHC.Conc.Sync.ThreadId)
  Engine.waitInput1 (Engine.EngineState
                       (GHC.Base.Just
                          @ BasicData.Position
                          (BasicData.Position
                             sc1
                             sc2
                             sc3
                             sc4
                             sc5
                             sc6
                             sc7
                             sc8
                             sc9
                             sc10
                             sc11
                             sc12
                             sc13
                             sc14
                             sc15
                             sc16
                             sc17
                             sc18
                             sc19
                             sc20))
                       sc21
                       sc22)
                    sc
  = Engine.waitInput_$swaitInput
      sc
      sc1
      sc2
      sc3
      sc4
      sc5
      sc6
      sc7
      sc8
      sc9
      sc10
      sc11
      sc12
      sc13
      sc14
      sc15
      sc16
      sc17
      sc18
      sc19
      sc20
      sc21
      sc22
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

