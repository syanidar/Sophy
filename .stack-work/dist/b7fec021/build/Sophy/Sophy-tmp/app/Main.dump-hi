
==================== FINAL INTERFACE ====================
2016-12-23 07:46:25.004056 UTC

interface main@main:Main 8001
  interface hash: 30157c1d63e5649bd4512725b6597f22
  ABI hash: 233800da8012a644cffe0de71655fa0d
  export-list hash: f0b753ab6436caa97a08daf0c565de38
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: effec9449aab1408efa18d7bb30b40d8
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
  Main.MainOptions{Main.MainOptions depth fen mode timeout}
  Main.Mode{Main.Analyze Main.Engine Main.HashTest Main.Perft Main.SpeedTest}
module dependencies:
package dependencies: MonadRandom-0.4.2.3@MonadRandom-0.4.2.3-8TfCm6PGvGYB7omozORhov
                      Sophy-0.1.0.0@Sophy-0.1.0.0-KzkJ0b2opaf7oLnrOdwoet
                      StateVar-1.1.0.4@StateVar-1.1.0.4-CJpWsiXJdd89SnV9dZtTwc
                      Win32-2.3.1.1@Win32-2.3.1.1
                      adjunctions-4.3@adjunctions-4.3-3ol9sWZt3In19pwXwPv3Xc
                      array-0.5.1.1@array-0.5.1.1 base-4.9.0.0
                      base-orphans-0.5.4@base-orphans-0.5.4-5IQvrjd7gNP548VkOOyIq6
                      bifunctors-5.4.1@bifunctors-5.4.1-8Xk5Wsnk1fr6rBLkW9MO8p
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      comonad-5@comonad-5-2RMxpSOQ5MCHLHIelJrHD4
                      composition-1.0.2.1@composition-1.0.2.1-KZVQ5Se9KseC7kQ38aLGDn
                      containers-0.5.7.1@containers-0.5.7.1
                      contravariant-1.4@contravariant-1.4-KSQE31a7FruKHDlp90hIUT
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      distributive-0.5.0.2@distributive-0.5.0.2-Cdz2vLOk85j1doGXLcictT
                      either-4.4.1.1@either-4.4.1.1-BWHIQ5hdPI1HrEUIKYYfaI
                      exceptions-0.8.3@exceptions-0.8.3-7py7fmRxowDFpHmiHGKrTb
                      free-4.12.4@free-4.12.4-Etm59Dm8iExFxAy1L49Ovd
                      ghc-boot-th-8.0.1@ghc-boot-th-8.0.1 ghc-prim-0.5.0.0
                      hashable-1.2.4.0@hashable-1.2.4.0-EMu4H7FB10MAl6hwKw992G
                      integer-gmp-1.0.0.1
                      kan-extensions-5.0.1@kan-extensions-5.0.1-Asa0tkk9PuPLZ2eXuJ10Gr
                      lens-4.14@lens-4.14-LQbbTc84mRL8zB39b41ZKA
                      listsafe-0.1.0.1@listsafe-0.1.0.1-HYBhJ8bTdyX2y2GuVGpvs8
                      mmorph-1.0.9@mmorph-1.0.9-DmSwQqk5nLj7roLAcydGz
                      monad-control-1.0.1.0@monad-control-1.0.1.0-HoNEBoNfniX3vjSfkI7WTT
                      monads-tf-0.1.0.3@monads-tf-0.1.0.3-HVD88uwypLB1Pu4HQI1mbn
                      mtl-2.2.1@mtl-2.2.1-6qsR1PHUy5lL47Hpoa4jCM
                      options-1.2.1.1@options-1.2.1.1-DvKmt92WADIDSbuS7WrmU6
                      parsec-3.1.11@parsec-3.1.11-BCos4GEVCuDB8dnOCBHO6X
                      prelude-extras-0.4.0.3@prelude-extras-0.4.0.3-FAyB4iuuM7cHXdrLMZtdXq
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa
                      profunctors-5.2@profunctors-5.2-2ZZOz6u59T2H8y7z3NgZkY
                      random-1.1@random-1.1-54KmMHXjttlERYcr1mvsAe
                      reflection-2.1.2@reflection-2.1.2-J1ZzlxijzaHGRixYxgxlf9
                      semigroupoids-5.1@semigroupoids-5.1-1Gay4xNO77GHd4DGCzVuax
                      split-0.2.3.1@split-0.2.3.1-IJKK4pOCYGKud0jZImZke
                      stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF
                      tagged-0.8.5@tagged-0.8.5-CtgV6EcN0do8F92i1S6iYx
                      template-haskell-2.11.0.0
                      text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s
                      time-1.6.0.1@time-1.6.0.1 transformers-0.5.2.0@transformers-0.5.2.0
                      transformers-base-0.4.4@transformers-base-0.4.4-25SoAegOdaF8rLEnnb5jPI
                      transformers-compat-0.5.1.4@transformers-compat-0.5.1.4-81lZyuOJOvsD0zyCv2TKld
                      unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-Eo9jd5DMz45DhBLCG8skzW
                      vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6
orphans: MonadRandom-0.4.2.3@MonadRandom-0.4.2.3-8TfCm6PGvGYB7omozORhov:Control.Monad.Random
         base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         hashable-1.2.4.0@hashable-1.2.4.0-EMu4H7FB10MAl6hwKw992G:Data.Hashable.Generic
         reflection-2.1.2@reflection-2.1.2-J1ZzlxijzaHGRixYxgxlf9:Data.Reflection
         stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF:Control.Monad.STM
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Lazy
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Unboxed
family instance modules: adjunctions-4.3@adjunctions-4.3-3ol9sWZt3In19pwXwPv3Xc:Data.Functor.Rep
                         base-4.9.0.0:Control.Applicative base-4.9.0.0:Data.Complex
                         base-4.9.0.0:Data.Either base-4.9.0.0:Data.Functor.Compose
                         base-4.9.0.0:Data.Functor.Const base-4.9.0.0:Data.Functor.Identity
                         base-4.9.0.0:Data.Functor.Product base-4.9.0.0:Data.Functor.Sum
                         base-4.9.0.0:Data.List.NonEmpty base-4.9.0.0:Data.Monoid
                         base-4.9.0.0:Data.Semigroup base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:Data.Version base-4.9.0.0:Data.Void
                         base-4.9.0.0:GHC.Exts base-4.9.0.0:GHC.Generics
                         base-4.9.0.0:GHC.IO.Exception base-4.9.0.0:GHC.TypeLits
                         bifunctors-5.4.1@bifunctors-5.4.1-8Xk5Wsnk1fr6rBLkW9MO8p:Data.Bifunctor.Biff
                         bifunctors-5.4.1@bifunctors-5.4.1-8Xk5Wsnk1fr6rBLkW9MO8p:Data.Bifunctor.Clown
                         bifunctors-5.4.1@bifunctors-5.4.1-8Xk5Wsnk1fr6rBLkW9MO8p:Data.Bifunctor.Flip
                         bifunctors-5.4.1@bifunctors-5.4.1-8Xk5Wsnk1fr6rBLkW9MO8p:Data.Bifunctor.Join
                         bifunctors-5.4.1@bifunctors-5.4.1-8Xk5Wsnk1fr6rBLkW9MO8p:Data.Bifunctor.Joker
                         bifunctors-5.4.1@bifunctors-5.4.1-8Xk5Wsnk1fr6rBLkW9MO8p:Data.Bifunctor.Product
                         bifunctors-5.4.1@bifunctors-5.4.1-8Xk5Wsnk1fr6rBLkW9MO8p:Data.Bifunctor.Sum
                         bifunctors-5.4.1@bifunctors-5.4.1-8Xk5Wsnk1fr6rBLkW9MO8p:Data.Bifunctor.Tannen
                         bifunctors-5.4.1@bifunctors-5.4.1-8Xk5Wsnk1fr6rBLkW9MO8p:Data.Bifunctor.Wrapped
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         either-4.4.1.1@either-4.4.1.1-BWHIQ5hdPI1HrEUIKYYfaI:Control.Monad.Trans.Either
                         ghc-boot-th-8.0.1@ghc-boot-th-8.0.1:GHC.LanguageExtensions.Type
                         kan-extensions-5.0.1@kan-extensions-5.0.1-Asa0tkk9PuPLZ2eXuJ10Gr:Data.Functor.Day
                         kan-extensions-5.0.1@kan-extensions-5.0.1-Asa0tkk9PuPLZ2eXuJ10Gr:Data.Functor.Yoneda
                         lens-4.14@lens-4.14-LQbbTc84mRL8zB39b41ZKA:Control.Lens.At
                         lens-4.14@lens-4.14-LQbbTc84mRL8zB39b41ZKA:Control.Lens.Internal.Indexed
                         lens-4.14@lens-4.14-LQbbTc84mRL8zB39b41ZKA:Control.Lens.Reified
                         lens-4.14@lens-4.14-LQbbTc84mRL8zB39b41ZKA:Control.Lens.Tuple
                         lens-4.14@lens-4.14-LQbbTc84mRL8zB39b41ZKA:Control.Lens.Wrapped
                         lens-4.14@lens-4.14-LQbbTc84mRL8zB39b41ZKA:Control.Lens.Zoom
                         monad-control-1.0.1.0@monad-control-1.0.1.0-HoNEBoNfniX3vjSfkI7WTT:Control.Monad.Trans.Control
                         monads-tf-0.1.0.3@monads-tf-0.1.0.3-HVD88uwypLB1Pu4HQI1mbn:Control.Monad.Error.Class
                         monads-tf-0.1.0.3@monads-tf-0.1.0.3-HVD88uwypLB1Pu4HQI1mbn:Control.Monad.State.Class
                         monads-tf-0.1.0.3@monads-tf-0.1.0.3-HVD88uwypLB1Pu4HQI1mbn:Control.Monad.Writer.Class
                         options-1.2.1.1@options-1.2.1.1-DvKmt92WADIDSbuS7WrmU6:Options.Tokenize
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa:Control.Monad.Primitive
                         profunctors-5.2@profunctors-5.2-2ZZOz6u59T2H8y7z3NgZkY:Data.Profunctor.Rep
                         tagged-0.8.5@tagged-0.8.5-CtgV6EcN0do8F92i1S6iYx:Data.Tagged
                         template-haskell-2.11.0.0:Language.Haskell.TH.Syntax
                         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text
                         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Lazy
                         unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-Eo9jd5DMz45DhBLCG8skzW:Data.HashMap.Base
                         unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-Eo9jd5DMz45DhBLCG8skzW:Data.HashSet
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Primitive
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Storable
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Unboxed
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Unboxed.Base
import  -/  Sophy-0.1.0.0@Sophy-0.1.0.0-KzkJ0b2opaf7oLnrOdwoet:Analyze 1c73a63aaf2697d886d235eefd231c8a
import  -/  Sophy-0.1.0.0@Sophy-0.1.0.0-KzkJ0b2opaf7oLnrOdwoet:Engine 09d02c35c9a7b673cf17cab751a05810
import  -/  Sophy-0.1.0.0@Sophy-0.1.0.0-KzkJ0b2opaf7oLnrOdwoet:HashKeyTest e3d3540a22fdbb897cdef92bd35e3b32
import  -/  Sophy-0.1.0.0@Sophy-0.1.0.0-KzkJ0b2opaf7oLnrOdwoet:Perft 2f8963ecb3f87bc05dc4d6af028dcd3b
import  -/  Sophy-0.1.0.0@Sophy-0.1.0.0-KzkJ0b2opaf7oLnrOdwoet:SpeedTest e9bc5c1123be9de959680a8a4836c167
import  -/  base-4.9.0.0:Control.Applicative fdcece230f8af145aec7b432bfe73083
import  -/  base-4.9.0.0:Control.Monad b6b2f076948b5e8acd6d95beb4d22bfc
import  -/  base-4.9.0.0:Data.Either 4cef602ce360a0155ac0dd580a5b4863
import  -/  base-4.9.0.0:Data.Maybe 086a84053ef7f7810663b5f03b7ec3f7
import  -/  base-4.9.0.0:GHC.Base dd8044a8d640eee51828c17c476a6ba7
import  -/  base-4.9.0.0:GHC.Enum dab7089478c738f0ffbf72212d9113c9
import  -/  base-4.9.0.0:GHC.Err 20faef8829fd13c027d0ee2213637534
import  -/  base-4.9.0.0:GHC.IO.Handle 0ec5f3e063751c91152d6f1b0286ca9a
import  -/  base-4.9.0.0:GHC.IO.Handle.FD 5311a39f33255d27517e14bdb344dca6
import  -/  base-4.9.0.0:GHC.IO.Handle.Types 99ae375c1c1e5fd2b2a363d71767500f
import  -/  base-4.9.0.0:GHC.Num f0aed3315b3ed1b330b71fc4148a5581
import  -/  base-4.9.0.0:GHC.Show 0b5845243cb2ec62b57dd6963d276ec6
import  -/  base-4.9.0.0:Prelude 2d9cd8b0ec3d728f62b734df888d2e34
import  -/  base-4.9.0.0:System.IO c1068c4f4231e3198e330f99a58145b0
import  -/  ghc-prim-0.5.0.0:GHC.Classes 16d48e012d23eaef9bca91ccdd572c02
import  -/  ghc-prim-0.5.0.0:GHC.Types 7378e41b7749213c8c88ceb6b0665d4c
import  -/  options-1.2.1.1@options-1.2.1.1-DvKmt92WADIDSbuS7WrmU6:Options fd5e381fa5f1da92ccd022d910267a31
1109e622caa48e553fbb3022dd9a5b90
  $fBoundedMode :: GHC.Enum.Bounded Main.Mode
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:. @ Main.Mode Main.Perft Main.Engine -}
1109e622caa48e553fbb3022dd9a5b90
  $fEnumMode :: GHC.Enum.Enum Main.Mode
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Main.Mode
                  Main.$fEnumMode_$csucc
                  Main.$fEnumMode_$cpred
                  Main.$fEnumMode_$ctoEnum
                  Main.$fEnumMode_$cfromEnum
                  Main.$fEnumMode_$cenumFrom
                  Main.$fEnumMode_$cenumFromThen
                  Main.$fEnumMode_$cenumFromTo
                  Main.$fEnumMode_$cenumFromThenTo -}
1109e622caa48e553fbb3022dd9a5b90
  $fEnumMode1 :: [Main.Mode]
  {- Unfolding: (Main.$fEnumMode_go5 4#) -}
1109e622caa48e553fbb3022dd9a5b90
  $fEnumMode2 :: [Main.Mode]
  {- Unfolding: (Main.$fEnumMode_go6 3#) -}
1109e622caa48e553fbb3022dd9a5b90
  $fEnumMode3 :: [Main.Mode]
  {- Unfolding: (Main.$fEnumMode_go7 2#) -}
1109e622caa48e553fbb3022dd9a5b90
  $fEnumMode4 :: [Main.Mode]
  {- Unfolding: (Main.$fEnumMode_go8 1#) -}
1109e622caa48e553fbb3022dd9a5b90
  $fEnumMode5 :: [Main.Mode]
  {- Unfolding: (Main.$fEnumMode_go9 0#) -}
1109e622caa48e553fbb3022dd9a5b90
  $fEnumMode6 :: GHC.Prim.Int# -> Main.Mode
  {- Arity: 1, Strictness: <L,U>x -}
1109e622caa48e553fbb3022dd9a5b90
  $fEnumMode7 :: Main.Mode
  {- Strictness: x -}
1109e622caa48e553fbb3022dd9a5b90
  $fEnumMode8 :: Main.Mode
  {- Strictness: x -}
1109e622caa48e553fbb3022dd9a5b90
  $fEnumMode_$cenumFrom :: Main.Mode -> [Main.Mode]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (a :: Main.Mode) ->
                 case a of wild {
                   Main.Perft -> Main.$fEnumMode5
                   Main.SpeedTest -> Main.$fEnumMode4
                   Main.Analyze -> Main.$fEnumMode3
                   Main.HashTest -> Main.$fEnumMode2
                   Main.Engine -> Main.$fEnumMode1 }) -}
1109e622caa48e553fbb3022dd9a5b90
  $fEnumMode_$cenumFromThen :: Main.Mode -> Main.Mode -> [Main.Mode]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: Main.Mode) (b :: Main.Mode) ->
                 let {
                   $j :: GHC.Prim.Int# -> [Main.Mode]
                     {- Arity: 1, Strictness: <S,U> -}
                   = \ (a# :: GHC.Prim.Int#)[OneShot] ->
                     let {
                       $j1 :: GHC.Prim.Int# -> [Main.Mode]
                         {- Arity: 1, Strictness: <S,U> -}
                       = \ (b# :: GHC.Prim.Int#)[OneShot] ->
                         let {
                           $j2 :: GHC.Prim.Int# -> [Main.Mode]
                             {- Arity: 1, Strictness: <S,U> -}
                           = \ (y :: GHC.Prim.Int#)[OneShot] ->
                             case GHC.Prim.tagToEnum#
                                    @ GHC.Types.Bool
                                    (GHC.Prim.>=# b# a#) of wild {
                               GHC.Types.False
                               -> GHC.Enum.efdtIntDnFB
                                    @ [Main.Mode]
                                    Main.$fEnumMode_c
                                    (GHC.Types.[] @ Main.Mode)
                                    a#
                                    b#
                                    y
                               GHC.Types.True
                               -> GHC.Enum.efdtIntUpFB
                                    @ [Main.Mode]
                                    Main.$fEnumMode_c
                                    (GHC.Types.[] @ Main.Mode)
                                    a#
                                    b#
                                    y }
                         } in
                         case GHC.Prim.tagToEnum#
                                @ GHC.Types.Bool
                                (GHC.Prim.># a# b#) of wild {
                           GHC.Types.False -> $j2 4# GHC.Types.True -> $j2 0# }
                     } in
                     case b of wild {
                       Main.Perft -> $j1 0#
                       Main.SpeedTest -> $j1 1#
                       Main.Analyze -> $j1 2#
                       Main.HashTest -> $j1 3#
                       Main.Engine -> $j1 4# }
                 } in
                 case a of wild {
                   Main.Perft -> $j 0#
                   Main.SpeedTest -> $j 1#
                   Main.Analyze -> $j 2#
                   Main.HashTest -> $j 3#
                   Main.Engine -> $j 4# }) -}
1109e622caa48e553fbb3022dd9a5b90
  $fEnumMode_$cenumFromThenTo ::
    Main.Mode -> Main.Mode -> Main.Mode -> [Main.Mode]
  {- Arity: 3, Strictness: <S,1*U><S,1*U><S,1*U> -}
1109e622caa48e553fbb3022dd9a5b90
  $fEnumMode_$cenumFromTo :: Main.Mode -> Main.Mode -> [Main.Mode]
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (x :: Main.Mode) (y :: Main.Mode) ->
                 let {
                   $j :: GHC.Prim.Int# -> [Main.Mode]
                     {- Arity: 1, Strictness: <S,U> -}
                   = \ (x1 :: GHC.Prim.Int#)[OneShot] ->
                     case y of wild {
                       Main.Perft
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 0#) of wild1 {
                            GHC.Types.False -> Main.$fEnumMode_go4 x1
                            GHC.Types.True -> GHC.Types.[] @ Main.Mode }
                       Main.SpeedTest
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 1#) of wild1 {
                            GHC.Types.False -> Main.$fEnumMode_go3 x1
                            GHC.Types.True -> GHC.Types.[] @ Main.Mode }
                       Main.Analyze
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 2#) of wild1 {
                            GHC.Types.False -> Main.$fEnumMode_go2 x1
                            GHC.Types.True -> GHC.Types.[] @ Main.Mode }
                       Main.HashTest
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 3#) of wild1 {
                            GHC.Types.False -> Main.$fEnumMode_go1 x1
                            GHC.Types.True -> GHC.Types.[] @ Main.Mode }
                       Main.Engine
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 4#) of wild1 {
                            GHC.Types.False -> Main.$fEnumMode_go x1
                            GHC.Types.True -> GHC.Types.[] @ Main.Mode } }
                 } in
                 case x of wild {
                   Main.Perft -> $j 0#
                   Main.SpeedTest -> $j 1#
                   Main.Analyze -> $j 2#
                   Main.HashTest -> $j 3#
                   Main.Engine -> $j 4# }) -}
1109e622caa48e553fbb3022dd9a5b90
  $fEnumMode_$cfromEnum :: Main.Mode -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>m, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Main.Mode) ->
                 case w of wild {
                   Main.Perft -> GHC.Types.I# 0#
                   Main.SpeedTest -> GHC.Types.I# 1#
                   Main.Analyze -> GHC.Types.I# 2#
                   Main.HashTest -> GHC.Types.I# 3#
                   Main.Engine -> GHC.Types.I# 4# }) -}
1109e622caa48e553fbb3022dd9a5b90
  $fEnumMode_$cpred :: Main.Mode -> Main.Mode
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: Main.Mode) ->
                 case a of wild {
                   Main.Perft -> Main.$fEnumMode7
                   Main.SpeedTest -> Main.Perft
                   Main.Analyze -> Main.SpeedTest
                   Main.HashTest -> Main.Analyze
                   Main.Engine -> Main.HashTest }) -}
1109e622caa48e553fbb3022dd9a5b90
  $fEnumMode_$csucc :: Main.Mode -> Main.Mode
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: Main.Mode) ->
                 case a of wild {
                   Main.Perft -> Main.SpeedTest
                   Main.SpeedTest -> Main.Analyze
                   Main.Analyze -> Main.HashTest
                   Main.HashTest -> Main.Engine
                   Main.Engine -> Main.$fEnumMode8 }) -}
1109e622caa48e553fbb3022dd9a5b90
  $fEnumMode_$ctoEnum :: GHC.Types.Int -> Main.Mode
  {- Arity: 1, Strictness: <S(S),1*U(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: GHC.Types.Int) ->
                 case w of ww { GHC.Types.I# ww1 -> Main.$w$ctoEnum ww1 }) -}
1109e622caa48e553fbb3022dd9a5b90
  $fEnumMode_c :: GHC.Types.Int -> [Main.Mode] -> [Main.Mode]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: GHC.Types.Int) (ys :: [Main.Mode]) ->
                 GHC.Types.:
                   @ Main.Mode
                   (case x of wild { GHC.Types.I# a ->
                    GHC.Prim.tagToEnum# @ Main.Mode a })
                   ys) -}
1109e622caa48e553fbb3022dd9a5b90
  $fEnumMode_go :: GHC.Prim.Int# -> [Main.Mode]
  {- Arity: 1, Strictness: <L,U> -}
1109e622caa48e553fbb3022dd9a5b90
  $fEnumMode_go1 :: GHC.Prim.Int# -> [Main.Mode]
  {- Arity: 1, Strictness: <L,U> -}
1109e622caa48e553fbb3022dd9a5b90
  $fEnumMode_go2 :: GHC.Prim.Int# -> [Main.Mode]
  {- Arity: 1, Strictness: <L,U> -}
1109e622caa48e553fbb3022dd9a5b90
  $fEnumMode_go3 :: GHC.Prim.Int# -> [Main.Mode]
  {- Arity: 1, Strictness: <L,U> -}
1109e622caa48e553fbb3022dd9a5b90
  $fEnumMode_go4 :: GHC.Prim.Int# -> [Main.Mode]
  {- Arity: 1, Strictness: <L,U> -}
1109e622caa48e553fbb3022dd9a5b90
  $fEnumMode_go5 :: GHC.Prim.Int# -> [Main.Mode]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
1109e622caa48e553fbb3022dd9a5b90
  $fEnumMode_go6 :: GHC.Prim.Int# -> [Main.Mode]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
1109e622caa48e553fbb3022dd9a5b90
  $fEnumMode_go7 :: GHC.Prim.Int# -> [Main.Mode]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
1109e622caa48e553fbb3022dd9a5b90
  $fEnumMode_go8 :: GHC.Prim.Int# -> [Main.Mode]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
1109e622caa48e553fbb3022dd9a5b90
  $fEnumMode_go9 :: GHC.Prim.Int# -> [Main.Mode]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
28154155b0ecbea65598a488dad400f1
  $fOptionsMainOptions :: Options.Options Main.MainOptions
  DFunId
  {- Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Main.$fOptionsMainOptions_$cdefineOptions
                  `cast`
                (Sym (Options.N:Options[0]) <Main.MainOptions>_N) -}
f93d29c36bdddd34891295419edc2f25
  $fOptionsMainOptions1 ::
    Options.Option GHC.Types.Int -> Options.Option GHC.Types.Int
  {- Arity: 1,
     Unfolding: (\ (o :: Options.Option GHC.Types.Int)[OneShot] ->
                 case o of wild { Options.Option ds ds1 ds2 ds3 ds4 ds5 ->
                 Options.Option
                   @ GHC.Types.Int
                   Main.$fOptionsMainOptions6
                   Main.$fOptionsMainOptions4
                   Main.$fOptionsMainOptions3
                   Main.$fOptionsMainOptions2
                   ds4
                   ds5 }) -}
fb5ba263c97b3a0dab1b351a67b4db4c
  $fOptionsMainOptions10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1"#) -}
867892bf35ad956f2b43569ca7e2b951
  $fOptionsMainOptions11 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.$fOptionsMainOptions12
                   (GHC.Types.[] @ GHC.Base.String)) -}
d49d386c43e91883d60977ac2dda7dcb
  $fOptionsMainOptions12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "fen"#) -}
6f56545934985cf0633d0da1b8881ee2
  $fOptionsMainOptions13 :: [GHC.Types.Char]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.$fOptionsMainOptions14
                   (GHC.Types.[] @ GHC.Types.Char)) -}
b2fc9b3d5c035a442abccc3d41eee8d3
  $fOptionsMainOptions14 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'f'#) -}
a8c830649fb1fa2b29f08014dd4539d0
  $fOptionsMainOptions15 ::
    Options.Option GHC.Types.Int -> Options.Option GHC.Types.Int
  {- Arity: 1,
     Unfolding: (\ (o :: Options.Option GHC.Types.Int)[OneShot] ->
                 case o of wild { Options.Option ds ds1 ds2 ds3 ds4 ds5 ->
                 Options.Option
                   @ GHC.Types.Int
                   Main.$fOptionsMainOptions20
                   Main.$fOptionsMainOptions18
                   Main.$fOptionsMainOptions17
                   Main.$fOptionsMainOptions16
                   ds4
                   ds5 }) -}
bfc5df5dd7c8804168bcbd0ab4d17f0e
  $fOptionsMainOptions16 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "The depth to which search or analysis goes on."#) -}
04ebf6d109457d9657789abaf0f87574
  $fOptionsMainOptions17 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 10#) -}
214c4500cca0700b02c23957581290a9
  $fOptionsMainOptions18 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.$fOptionsMainOptions19
                   (GHC.Types.[] @ GHC.Base.String)) -}
f3c04617f58648387ec0224d21c57e79
  $fOptionsMainOptions19 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "depth"#) -}
dc582a83f467c875c5df2afaf3bff2c7
  $fOptionsMainOptions2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "The time to wait for the end of the computation(milliseconds)."#) -}
bd66c859e4edec40476723f11dbedfc3
  $fOptionsMainOptions20 :: [GHC.Types.Char]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.$fOptionsMainOptions21
                   (GHC.Types.[] @ GHC.Types.Char)) -}
a7630ff465006bb9edc9d1bc0e70c58e
  $fOptionsMainOptions21 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'd'#) -}
a1f8a5bde132745c5d22008e99714d54
  $fOptionsMainOptions22 ::
    Options.Option Main.Mode -> Options.Option Main.Mode
  {- Arity: 1,
     Unfolding: (\ (o :: Options.Option Main.Mode)[OneShot] ->
                 case o of wild { Options.Option ds ds1 ds2 ds3 ds4 ds5 ->
                 Options.Option
                   @ Main.Mode
                   Main.$fOptionsMainOptions25
                   Main.$fOptionsMainOptions23
                   Main.Engine
                   ds3
                   ds4
                   ds5 }) -}
9b40d36130e938a05e06ac920d92ec83
  $fOptionsMainOptions23 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.$fOptionsMainOptions24
                   (GHC.Types.[] @ GHC.Base.String)) -}
4ef150938dcf70a3149ecc1cb317ad74
  $fOptionsMainOptions24 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "mode"#) -}
2b6778b7e9687ef991e325c9b5e2f081
  $fOptionsMainOptions25 :: [GHC.Types.Char]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.$fOptionsMainOptions26
                   (GHC.Types.[] @ GHC.Types.Char)) -}
b9ecb8fc4e5f527b2f626f228753b66d
  $fOptionsMainOptions26 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'm'#) -}
f38b83b6295afc58ad8a7e9b1fa55a86
  $fOptionsMainOptions27 :: Options.OptionType Main.Mode
  {- Unfolding: (case Options.$woptionType_enum
                        @ Main.Mode
                        Main.$fBoundedMode
                        Main.$fEnumMode
                        Main.$fShowMode
                        Main.$fOptionsMainOptions24 of ww { (#,,,,,#) ww1 ww2 ww3 ww4 ww5 ww6 ->
                 Options.OptionType @ Main.Mode ww1 ww2 ww3 ww4 ww5 ww6 }) -}
09af586d87bd31c16d12a29f26e8bfaf
  $fOptionsMainOptions3 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 1000#) -}
db3d187d024fbc13d8550c61aa717f45
  $fOptionsMainOptions4 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.$fOptionsMainOptions5
                   (GHC.Types.[] @ GHC.Base.String)) -}
5fc4f9522ab1f44cdec46dd15e13afe3
  $fOptionsMainOptions5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "timeout"#) -}
2299099e6c3f24c3aa26d9c02206a6c2
  $fOptionsMainOptions6 :: [GHC.Types.Char]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.$fOptionsMainOptions7
                   (GHC.Types.[] @ GHC.Types.Char)) -}
ca3f9fa05acda8e24e92ea0fba07ec7c
  $fOptionsMainOptions7 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 't'#) -}
d7c597d9c868ec0675bfd1f4b5b06377
  $fOptionsMainOptions8 ::
    Options.Option GHC.Base.String -> Options.Option GHC.Base.String
  {- Arity: 1,
     Unfolding: (\ (o :: Options.Option GHC.Base.String)[OneShot] ->
                 case o of wild { Options.Option ds ds1 ds2 ds3 ds4 ds5 ->
                 Options.Option
                   @ GHC.Base.String
                   Main.$fOptionsMainOptions13
                   Main.$fOptionsMainOptions11
                   Main.$fOptionsMainOptions10
                   Main.$fOptionsMainOptions9
                   ds4
                   ds5 }) -}
9942e4124168ff1d40ae3fe2277b0ee5
  $fOptionsMainOptions9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "The position from which the search or analysis starts."#) -}
28154155b0ecbea65598a488dad400f1
  $fOptionsMainOptions_$cdefineOptions ::
    Options.DefineOptions Main.MainOptions
  {- Unfolding: (case Options.$wdefineOption
                        @ Main.Mode
                        Main.$fOptionsMainOptions27
                        Main.$fOptionsMainOptions22 of ww { (#,,#) ww1 ww2 ww3 ->
                 case Options.$wdefineOption
                        @ GHC.Types.Int
                        Options.optionType_int
                        Main.$fOptionsMainOptions15 of ww4 { (#,,#) ww5 ww6 ww7 ->
                 case Options.$wdefineOption
                        @ GHC.Base.String
                        Options.optionType_string
                        Main.$fOptionsMainOptions8 of ww8 { (#,,#) ww9 ww10 ww11 ->
                 case Options.$wdefineOption
                        @ GHC.Types.Int
                        Options.optionType_int
                        Main.$fOptionsMainOptions1 of ww12 { (#,,#) ww13 ww14 ww15 ->
                 Options.DefineOptions
                   @ Main.MainOptions
                   (Main.MainOptions ww1 ww5 ww9 ww13)
                   (\ (key :: GHC.Integer.Type.Integer) ->
                    case ww2 key of wild1 { (,) key'' infos' ->
                    case ww6 key'' of wild2 { (,) key''1 infos'1 ->
                    case ww10 key''1 of wild3 { (,) key''2 infos'2 ->
                    case ww14 key''2 of wild4 { (,) key''3 infos'3 ->
                    (key''3,
                     GHC.Base.++
                       @ Options.Types.OptionInfo
                       (GHC.Base.++
                          @ Options.Types.OptionInfo
                          (GHC.Base.++
                             @ Options.Types.OptionInfo
                             (GHC.Base.++
                                @ Options.Types.OptionInfo
                                (GHC.Types.[] @ Options.Types.OptionInfo)
                                infos')
                             infos'1)
                          infos'2)
                       infos'3) } } } })
                   (\ (key :: GHC.Integer.Type.Integer)
                      (tokens :: Data.Map.Base.Map
                                   Options.Types.OptionKey [Options.Tokenize.Token]) ->
                    case ww3 key tokens of wild2 {
                      Data.Either.Left err
                      -> Data.Either.Left
                           @ GHC.Base.String
                           @ (GHC.Integer.Type.Integer, Main.MainOptions)
                           err
                      Data.Either.Right ds1
                      -> case ds1 of wild3 { (,) key'' a1 ->
                         case ww7 key'' tokens of wild1 {
                           Data.Either.Left err
                           -> Data.Either.Left
                                @ GHC.Base.String
                                @ (GHC.Integer.Type.Integer, Main.MainOptions)
                                err
                           Data.Either.Right ds2
                           -> case ds2 of wild5 { (,) key''1 a2 ->
                              case ww11 key''1 tokens of wild6 {
                                Data.Either.Left err
                                -> Data.Either.Left
                                     @ GHC.Base.String
                                     @ (GHC.Integer.Type.Integer, Main.MainOptions)
                                     err
                                Data.Either.Right ds3
                                -> case ds3 of wild7 { (,) key''2 a3 ->
                                   case ww15 key''2 tokens of wild8 {
                                     Data.Either.Left err
                                     -> Data.Either.Left
                                          @ GHC.Base.String
                                          @ (GHC.Integer.Type.Integer, Main.MainOptions)
                                          err
                                     Data.Either.Right ds4
                                     -> case ds4 of wild9 { (,) key''3 a4 ->
                                        Data.Either.Right
                                          @ GHC.Base.String
                                          @ (GHC.Integer.Type.Integer, Main.MainOptions)
                                          (key''3,
                                           Main.MainOptions
                                             a1
                                             a2
                                             a3
                                             a4) } } } } } } } }) } } } }) -}
1109e622caa48e553fbb3022dd9a5b90
  $fShowMode :: GHC.Show.Show Main.Mode
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Main.Mode
                  Main.$fShowMode_$cshowsPrec
                  Main.$fShowMode_$cshow
                  Main.$fShowMode_$cshowList -}
90b9432036bb85c07f238cf5efa3ca24
  $fShowMode1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Engine"#) -}
8be8be2b50dc852137c84976388f91a2
  $fShowMode2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "HashTest"#) -}
9e607432583f23b5d2ae003c390de7a4
  $fShowMode3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Analyze"#) -}
d5c7e576fc2774afddc234c3c202eb55
  $fShowMode4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "SpeedTest"#) -}
fc6ef25b1ec5ff091d9de4368a729866
  $fShowMode5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Perft"#) -}
1109e622caa48e553fbb3022dd9a5b90
  $fShowMode_$cshow :: Main.Mode -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Main.Mode) ->
                 Main.$fShowMode_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
1109e622caa48e553fbb3022dd9a5b90
  $fShowMode_$cshowList :: [Main.Mode] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__ @ Main.Mode Main.$w$cshowsPrec) -}
1109e622caa48e553fbb3022dd9a5b90
  $fShowMode_$cshowsPrec ::
    GHC.Types.Int -> Main.Mode -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Main.Mode)
                   (w2 :: GHC.Base.String) ->
                 Main.$w$cshowsPrec w1 w2) -}
740a9d7e3d4ef331e93d101f9fba5546
  $tc'Analyze :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16927298007605658739##
                   1992116414439591069##
                   Main.$trModule
                   Main.$tc'Analyze1) -}
35a8d572c672f915f54e8641dd44ff34
  $tc'Analyze1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Analyze"#) -}
3a5508d14d4fd82ab64440e5375bca68
  $tc'Engine :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7092668818023049530##
                   13580280061721908714##
                   Main.$trModule
                   Main.$tc'Engine1) -}
cb9d717e8f822473672b11d3ffdf0817
  $tc'Engine1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Engine"#) -}
ba4328d539354b654434cf3d81296d42
  $tc'HashTest :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15871569416258804006##
                   8309675170517783526##
                   Main.$trModule
                   Main.$tc'HashTest1) -}
eaf5b149bf9127a088ee06975ac4ba96
  $tc'HashTest1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'HashTest"#) -}
e255b4b5f48301987b778529f74526bb
  $tc'MainOptions :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7742441149166124836##
                   8787267290730683548##
                   Main.$trModule
                   Main.$tc'MainOptions1) -}
b4bbd4b6e222d5f5bae1f22680759931
  $tc'MainOptions1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'MainOptions"#) -}
2ee673413692fbff1c9a9b8b4e6e63a2
  $tc'Perft :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8492861713320070411##
                   15212254481325092418##
                   Main.$trModule
                   Main.$tc'Perft1) -}
48e113bc21857dbf96da6cc7c7a4a427
  $tc'Perft1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Perft"#) -}
45de89b06bb9d3f42dd019a597084c06
  $tc'SpeedTest :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4090476657395604121##
                   9786934757441439031##
                   Main.$trModule
                   Main.$tc'SpeedTest1) -}
bb4a735bf328976303c30d44db85b51a
  $tc'SpeedTest1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'SpeedTest"#) -}
56787c44b47cf43856ac4cd715116125
  $tcMainOptions :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5340174801425634926##
                   6315163568519579750##
                   Main.$trModule
                   Main.$tcMainOptions1) -}
b45d91b2f81806761a1f304982936e1c
  $tcMainOptions1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "MainOptions"#) -}
669e7d704f3096b5b89aa9b8fbea883f
  $tcMode :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8845561417264172635##
                   11635813986722628468##
                   Main.$trModule
                   Main.$tcMode1) -}
c99310931e721a4c6a28c98360c8c078
  $tcMode1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Mode"#) -}
d6831ef04cb9301b090dfae6f7bb7ec7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule2 Main.$trModule1) -}
847d9fc3b8e6f0b424199f36b4999bb2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Main"#) -}
24ef6042833e75ffd7aa98b83ecca98d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
1109e622caa48e553fbb3022dd9a5b90
  $w$cshowsPrec :: Main.Mode -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (w :: Main.Mode) (w1 :: GHC.Base.String) ->
                 case w of wild {
                   Main.Perft -> GHC.Base.++ @ GHC.Types.Char Main.$fShowMode5 w1
                   Main.SpeedTest -> GHC.Base.++ @ GHC.Types.Char Main.$fShowMode4 w1
                   Main.Analyze -> GHC.Base.++ @ GHC.Types.Char Main.$fShowMode3 w1
                   Main.HashTest -> GHC.Base.++ @ GHC.Types.Char Main.$fShowMode2 w1
                   Main.Engine
                   -> GHC.Base.++ @ GHC.Types.Char Main.$fShowMode1 w1 }) -}
1109e622caa48e553fbb3022dd9a5b90
  $w$ctoEnum :: GHC.Prim.Int# -> Main.Mode
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 0#) of wild {
                   GHC.Types.False -> Main.$fEnumMode6 ww
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<=# ww 4#) of wild1 {
                        GHC.Types.False -> Main.$fEnumMode6 ww
                        GHC.Types.True -> GHC.Prim.tagToEnum# @ Main.Mode ww } }) -}
28154155b0ecbea65598a488dad400f1
  data MainOptions
    = MainOptions {mode :: Main.Mode,
                   depth :: GHC.Types.Int,
                   fen :: GHC.Base.String,
                   timeout :: GHC.Types.Int}
1109e622caa48e553fbb3022dd9a5b90
  data Mode = Perft | SpeedTest | Analyze | HashTest | Engine
f8b1e7f2ec7a538e8b10899a5daa0b65
  depth :: Main.MainOptions -> GHC.Types.Int
  RecSel Left Main.MainOptions
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLL),1*U(A,1*U(U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.MainOptions) ->
                 case ds of wild { Main.MainOptions ds1 ds2 ds3 ds4 -> ds2 }) -}
ba6210bc016517844a6b3aa3cec00477
  fen :: Main.MainOptions -> GHC.Base.String
  RecSel Left Main.MainOptions
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLSL),1*U(A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.MainOptions) ->
                 case ds of wild { Main.MainOptions ds1 ds2 ds3 ds4 -> ds3 }) -}
aa96a73a46000a112c453c3d79341de4
  main :: GHC.Types.IO ()
  {- Unfolding: (Options.runCommand
                   @ GHC.Types.IO
                   @ Main.MainOptions
                   @ ()
                   Control.Monad.IO.Class.$fMonadIOIO
                   Main.$fOptionsMainOptions_$cdefineOptions
                     `cast`
                   (Sym (Options.N:Options[0]) <Main.MainOptions>_N)
                   Main.main1
                     `cast`
                   (<Main.MainOptions>_R
                    ->_R <[GHC.Base.String]>_R
                    ->_R Sym (GHC.Types.N:IO[0] <()>_R))) -}
8e89bc378c9715391cdd784012d3fb96
  main1 ::
    Main.MainOptions
    -> [GHC.Base.String]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3,
     Unfolding: (\ (opts :: Main.MainOptions)
                   (args :: [GHC.Base.String])[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case opts of wild { Main.MainOptions ds ds1 ds2 ds3 ->
                 case ds of wild1 {
                   Main.Perft -> Perft.perft1 ds1 eta
                   Main.SpeedTest -> SpeedTest.speedtest1 ds1 ds2 eta
                   Main.Analyze -> Analyze.$wanalyze ds2 ds3 eta
                   Main.HashTest -> HashKeyTest.$whashKeyTest ds1 100000# eta
                   Main.Engine
                   -> case GHC.IO.Handle.hSetBuffering1
                             GHC.IO.Handle.FD.stdout
                             GHC.IO.Handle.Types.NoBuffering
                             eta of ds4 { (#,#) ipv ipv1 ->
                      Engine.launchEngine1 ipv } } }) -}
69096984b3888ad8ea26a99d29787938
  main2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1 @ () Main.main) -}
27ed1f0ae7bda03e45051c0bc93f0536
  mode :: Main.MainOptions -> Main.Mode
  RecSel Left Main.MainOptions
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLLL),1*U(1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.MainOptions) ->
                 case ds of wild { Main.MainOptions ds1 ds2 ds3 ds4 -> ds1 }) -}
d8538d26a2ce1ad39ebfb823d23f1772
  timeout :: Main.MainOptions -> GHC.Types.Int
  RecSel Left Main.MainOptions
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLS),1*U(A,A,A,1*U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.MainOptions) ->
                 case ds of wild { Main.MainOptions ds1 ds2 ds3 ds4 -> ds4 }) -}
instance GHC.Enum.Bounded [Main.Mode] = Main.$fBoundedMode
instance GHC.Enum.Enum [Main.Mode] = Main.$fEnumMode
instance Options.Options [Main.MainOptions]
  = Main.$fOptionsMainOptions
instance GHC.Show.Show [Main.Mode] = Main.$fShowMode
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

